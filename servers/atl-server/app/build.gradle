/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.10.2/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    maven {
        url "https://repo1.maven.org/maven2/"
    }
    maven {
        url "https://repo.eclipse.org/content/repositories/atl-releases/"
    }
}

dependencies {
    // This dependency is used by the application.
    implementation libs.guava

    // ATL
    implementation 'org.eclipse.platform:org.eclipse.core.runtime:3.31.100' // used by EMFVM just to check if it is running in Eclipse or not
	implementation 'org.eclipse.m2m.atl:org.eclipse.m2m.atl.emftvm:4.6.0'
	implementation 'org.eclipse.m2m.atl:org.eclipse.m2m.atl.emftvm.compiler:4.6.0'

    // json parsing
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.17.0'

    // vertx
    implementation 'io.vertx:vertx-core:4.5.7'
    implementation 'io.vertx:vertx-web:4.5.7'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'fr.imta.naomod.atl.Main'
}