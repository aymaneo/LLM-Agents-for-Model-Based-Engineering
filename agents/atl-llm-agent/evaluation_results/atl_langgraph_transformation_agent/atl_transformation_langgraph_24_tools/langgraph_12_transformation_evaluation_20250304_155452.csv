instruction,type,level,score,total_tools_expected,total_tools_matched,tools_called,expected_tools,matched_tools,unmatched_tools,timestamp
"Display the configuration of KM32EMF once, then transform ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi using KM32DSL.",multi_tool,1,1.0,2,2,list_transformation_KM32EMF_tool({'input_str': ''}) | apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32EMF.get_tool() | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'list_transformation_KM32EMF_tool', 'arguments': {'input_str': ''}}, {'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T13:40:23.859654
Show me the settings for KM32EMF then apply KM32DSL to ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi.,multi_tool,1,1.0,2,2,list_transformation_KM32EMF_tool({'input_str': ''}) | apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32EMF.get_tool() | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'list_transformation_KM32EMF_tool', 'arguments': {'input_str': ''}}, {'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T13:40:28.247284
"Apply KM32DSL to ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi after displaying its configuration, which is KM32EMF.",multi_tool,1,0.5,2,1,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32EMF.get_tool() | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]","[{'api_name': 'KM32EMF.get_tool', 'arguments': ''}]",2025-03-04T13:40:32.319966
Transform ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi using KM32DSL as soon as we show you the transformation settings of KM32EMF.,multi_tool,1,0.0,2,0,No tools called,KM32EMF.get_tool() | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),[],"[{'api_name': 'KM32EMF.get_tool', 'arguments': ''}, {'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T13:40:40.945366
"Now that we've viewed the KM32EMF transformation settings, let's apply KM32DSL to ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi.",multi_tool,1,0.5,2,1,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32EMF.get_tool() | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]","[{'api_name': 'KM32EMF.get_tool', 'arguments': ''}]",2025-03-04T13:40:45.675200
"After showing us the details of KM32EMF, transform ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi with KM32DSL.",multi_tool,1,0.5,2,1,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32EMF.get_tool() | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]","[{'api_name': 'KM32EMF.get_tool', 'arguments': ''}]",2025-03-04T13:40:49.399395
Apply KM32DSL to ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi after you show me its configuration as KM32EMF.,multi_tool,1,0.5,2,1,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32EMF.get_tool() | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]","[{'api_name': 'KM32EMF.get_tool', 'arguments': ''}]",2025-03-04T13:40:53.134274
Show me how to get the configuration of KM32EMF and then apply KM32DSL to ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi.,multi_tool,1,1.0,2,2,list_transformation_KM32EMF_tool({'input_str': ''}) | apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32EMF.get_tool() | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'list_transformation_KM32EMF_tool', 'arguments': {'input_str': ''}}, {'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T13:40:58.845786
"Display the configuration of PNML2XML once, then transform ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi using Mantis2XML.",multi_tool,1,1.0,2,2,list_transformation_PNML2XML_tool({'input_str': ''}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.get_tool() | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'list_transformation_PNML2XML_tool', 'arguments': {'input_str': ''}}, {'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T13:41:03.900551
Show me the settings for XML2Ant then apply SimpleClass2SimpleRDBMS to ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi.,multi_tool,1,0.0,2,0,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.get_tool() | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),[],"[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}, {'api_name': 'SimpleClass2SimpleRDBMS.apply_tool', 'arguments': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}]",2025-03-04T13:41:07.765613
"Apply Mantis2XML to ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi after displaying its configuration, which is PNML2XML.",multi_tool,1,0.5,2,1,apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.get_tool() | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]","[{'api_name': 'PNML2XML.get_tool', 'arguments': ''}]",2025-03-04T13:41:11.945876
Transform ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi using SimpleClass2SimpleRDBMS as soon as we show you the transformation settings of XML2Ant.,multi_tool,1,0.5,2,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.get_tool() | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]","[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}]",2025-03-04T13:41:15.780317
"Now that we've viewed the PNML2XML transformation settings, let's apply Mantis2XML to ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi.",multi_tool,1,0.5,2,1,apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.get_tool() | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]","[{'api_name': 'PNML2XML.get_tool', 'arguments': ''}]",2025-03-04T13:41:21.915038
"After showing us the details of XML2Ant, transform ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi with SimpleClass2SimpleRDBMS.",multi_tool,1,0.5,2,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.get_tool() | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]","[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}]",2025-03-04T13:41:26.301671
Apply Mantis2XML to ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi after you show me its configuration as PNML2XML.,multi_tool,1,1.0,2,2,apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | list_transformation_PNML2XML_tool({'input_str': ''}),PNML2XML.get_tool() | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'list_transformation_PNML2XML_tool', 'arguments': {'input_str': ''}}, {'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T13:41:33.407295
Show me how to get the configuration of XML2Ant and then apply SimpleClass2SimpleRDBMS to ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi.,multi_tool,1,0.0,2,0,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.get_tool() | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),[],"[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}, {'api_name': 'SimpleClass2SimpleRDBMS.apply_tool', 'arguments': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}]",2025-03-04T13:41:37.565754
"Display the configuration of PNML2XML once, then transform ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi using Mantis2XML.",multi_tool,1,1.0,2,2,list_transformation_PNML2XML_tool({'input_str': ''}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.get_tool() | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'list_transformation_PNML2XML_tool', 'arguments': {'input_str': ''}}, {'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T13:41:45.906855
Show me the settings for XML2Ant then apply SimpleClass2SimpleRDBMS to ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi.,multi_tool,1,0.0,2,0,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.get_tool() | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),[],"[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}, {'api_name': 'SimpleClass2SimpleRDBMS.apply_tool', 'arguments': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}]",2025-03-04T13:41:51.056574
"Apply Mantis2XML to ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi after displaying its configuration, which is PNML2XML.",multi_tool,1,0.5,2,1,apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.get_tool() | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]","[{'api_name': 'PNML2XML.get_tool', 'arguments': ''}]",2025-03-04T13:41:56.716018
Transform ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi using SimpleClass2SimpleRDBMS as soon as we show you the transformation settings of XML2Ant.,multi_tool,1,0.5,2,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.get_tool() | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]","[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}]",2025-03-04T13:42:02.688726
"Now that we've viewed the PNML2XML transformation settings, let's apply Mantis2XML to ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi.",multi_tool,1,0.5,2,1,apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.get_tool() | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]","[{'api_name': 'PNML2XML.get_tool', 'arguments': ''}]",2025-03-04T13:42:07.535121
"After showing us the details of XML2Ant, transform ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi with SimpleClass2SimpleRDBMS.",multi_tool,1,0.0,2,0,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.get_tool() | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),[],"[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}, {'api_name': 'SimpleClass2SimpleRDBMS.apply_tool', 'arguments': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}]",2025-03-04T13:42:11.984611
Apply Mantis2XML to ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi after you show me its configuration as PNML2XML.,multi_tool,1,1.0,2,2,apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | list_transformation_PNML2XML_tool({'input_str': ''}),PNML2XML.get_tool() | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'list_transformation_PNML2XML_tool', 'arguments': {'input_str': ''}}, {'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T13:42:18.973418
Show me how to get the configuration of XML2Ant and then apply SimpleClass2SimpleRDBMS to ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi.,multi_tool,1,0.5,2,1,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | list_transformation_SimpleClass2SimpleRDBMS_tool({}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.get_tool() | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]","[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}]",2025-03-04T13:42:24.249771
"Display the configuration of KM32EMF once, then transform ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi using KM32DSL.",multi_tool,1,1.0,2,2,list_transformation_KM32EMF_tool({'input_str': ''}) | apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32EMF.get_tool() | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'list_transformation_KM32EMF_tool', 'arguments': {'input_str': ''}}, {'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T13:42:29.920968
Show me the settings for PNML2XML then apply Mantis2XML to ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi.,multi_tool,1,0.0,2,0,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.get_tool() | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),[],"[{'api_name': 'PNML2XML.get_tool', 'arguments': ''}, {'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T13:42:35.517027
"Apply SimpleClass2SimpleRDBMS to ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi after displaying its configuration, which is XML2Ant.",multi_tool,1,0.5,2,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.get_tool() | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]","[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}]",2025-03-04T13:42:38.823047
Transform ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi using KM32DSL as soon as we show you the transformation settings of KM32EMF.,multi_tool,1,1.0,2,2,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32EMF_tool({}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_PNML2XSLT_tool({}),KM32EMF.get_tool() | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'list_transformation_KM32EMF_tool', 'arguments': {}}, {'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T13:42:47.122262
"Now that we've viewed the PNML2XML transformation settings, let's apply Mantis2XML to ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi.",multi_tool,1,0.5,2,1,apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.get_tool() | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]","[{'api_name': 'PNML2XML.get_tool', 'arguments': ''}]",2025-03-04T13:42:55.352158
"After showing us the details of XML2Ant, transform ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi with SimpleClass2SimpleRDBMS.",multi_tool,1,0.0,2,0,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.get_tool() | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),[],"[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}, {'api_name': 'SimpleClass2SimpleRDBMS.apply_tool', 'arguments': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}]",2025-03-04T13:42:59.246148
Apply KM32DSL to ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi after you show me its configuration as KM32EMF.,multi_tool,1,1.0,2,2,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32DSL_tool({}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32EMF_tool({}) | apply_PNML2XML_transformation_tool({'input_str': './pnml_zoo/PNMLBridge/Models/SimpleExample/PNML2XML/SimpleExamplePNML.xmi'}),KM32EMF.get_tool() | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'list_transformation_KM32EMF_tool', 'arguments': {}}, {'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T13:43:09.188051
Show me how to get the configuration of PNML2XML and then apply Mantis2XML to ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi.,multi_tool,1,1.0,2,2,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | list_transformation_PNML2XML_tool({}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | list_transformation_Mantis2XML_tool({}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/SimpleClassExample.xmi'}),PNML2XML.get_tool() | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'list_transformation_PNML2XML_tool', 'arguments': {}}, {'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T13:43:16.980416
"Display the configuration of XML2Ant once, then transform ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi using SimpleClass2SimpleRDBMS.",multi_tool,1,0.0,2,0,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.get_tool() | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),[],"[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}, {'api_name': 'SimpleClass2SimpleRDBMS.apply_tool', 'arguments': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}]",2025-03-04T13:43:22.609007
Show me the settings for KM32EMF then apply KM32DSL to ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi.,multi_tool,1,1.0,2,2,list_transformation_KM32EMF_tool({'input_str': ''}) | apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32EMF.get_tool() | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'list_transformation_KM32EMF_tool', 'arguments': {'input_str': ''}}, {'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T13:43:29.625647
"Apply Mantis2XML to ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi after displaying its configuration, which is PNML2XML.",multi_tool,1,0.5,2,1,apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.get_tool() | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]","[{'api_name': 'PNML2XML.get_tool', 'arguments': ''}]",2025-03-04T13:43:35.204420
Transform ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi using SimpleClass2SimpleRDBMS as soon as we show you the transformation settings of XML2Ant.,multi_tool,1,0.5,2,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.get_tool() | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]","[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}]",2025-03-04T13:43:40.672603
"Now that we've viewed the KM32EMF transformation settings, let's apply KM32DSL to ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi.",multi_tool,1,0.5,2,1,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32EMF.get_tool() | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]","[{'api_name': 'KM32EMF.get_tool', 'arguments': ''}]",2025-03-04T13:43:46.618789
"After showing us the details of PNML2XML, transform ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi with Mantis2XML.",multi_tool,1,0.0,2,0,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.get_tool() | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),[],"[{'api_name': 'PNML2XML.get_tool', 'arguments': ''}, {'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T13:43:51.570376
Apply SimpleClass2SimpleRDBMS to ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi after you show me its configuration as XML2Ant.,multi_tool,1,0.5,2,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.get_tool() | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]","[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}]",2025-03-04T13:43:58.068131
Show me how to get the configuration of KM32EMF and then apply KM32DSL to ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi.,multi_tool,1,1.0,2,2,list_transformation_KM32EMF_tool({'input_str': ''}) | apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32EMF.get_tool() | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'list_transformation_KM32EMF_tool', 'arguments': {'input_str': ''}}, {'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T13:44:06.330720
"Display the configuration of PNML2XML once, then transform ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi using Mantis2XML.",multi_tool,1,1.0,2,2,list_transformation_PNML2XML_tool({'input_str': ''}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.get_tool() | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'list_transformation_PNML2XML_tool', 'arguments': {'input_str': ''}}, {'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T13:44:14.114961
Show me the settings for XML2Ant then apply SimpleClass2SimpleRDBMS to ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi.,multi_tool,1,0.0,2,0,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.get_tool() | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),[],"[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}, {'api_name': 'SimpleClass2SimpleRDBMS.apply_tool', 'arguments': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}]",2025-03-04T13:44:18.744110
"Apply KM32DSL to ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi after displaying its configuration, which is KM32EMF.",multi_tool,1,1.0,2,2,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32DSL_tool({}) | apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32EMF_tool({}),KM32EMF.get_tool() | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'list_transformation_KM32EMF_tool', 'arguments': {}}, {'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T13:44:26.551654
Transform ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi using Mantis2XML as soon as we show you the transformation settings of PNML2XML.,multi_tool,1,0.5,2,1,apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.get_tool() | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]","[{'api_name': 'PNML2XML.get_tool', 'arguments': ''}]",2025-03-04T13:44:30.959582
"Now that we've viewed the XML2Ant transformation settings, let's apply SimpleClass2SimpleRDBMS to ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi.",multi_tool,1,0.5,2,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.get_tool() | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]","[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}]",2025-03-04T13:44:39.641634
"After showing us the details of KM32EMF, transform ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi with KM32DSL.",multi_tool,1,0.5,2,1,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32DSL_tool({}),KM32EMF.get_tool() | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]","[{'api_name': 'KM32EMF.get_tool', 'arguments': ''}]",2025-03-04T13:44:45.303608
Apply Mantis2XML to ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi after you show me its configuration as PNML2XML.,multi_tool,1,1.0,2,2,apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | list_transformation_PNML2XML_tool({'input_str': ''}),PNML2XML.get_tool() | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'list_transformation_PNML2XML_tool', 'arguments': {'input_str': ''}}, {'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T13:44:51.524459
Show me how to get the configuration of XML2Ant and then apply SimpleClass2SimpleRDBMS to ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi.,multi_tool,1,0.0,2,0,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.get_tool() | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),[],"[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}, {'api_name': 'SimpleClass2SimpleRDBMS.apply_tool', 'arguments': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}]",2025-03-04T13:44:56.982716
"Display the configuration of KM32EMF once, then transform ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi using KM32DSL.",multi_tool,1,0.5,2,1,list_transformation_KM32EMF_tool({'input_str': 'KM32EMF'}) | apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32EMF.get_tool() | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]","[{'api_name': 'KM32EMF.get_tool', 'arguments': ''}]",2025-03-04T13:45:03.189641
Show me the settings for PNML2XML then apply Mantis2XML to ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi.,multi_tool,1,0.0,2,0,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.get_tool() | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),[],"[{'api_name': 'PNML2XML.get_tool', 'arguments': ''}, {'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T13:45:08.523337
Compare the configurations of the KM32EMF and KM32DSL transformations,multi_tool,1,0.5,2,1,list_transformation_KM32EMF_tool({'input_str': ''}),KM32EMF.get_tool() | KM32DSL.get_tool(),"[{'tool_name': 'list_transformation_KM32EMF_tool', 'arguments': {'input_str': ''}}]","[{'api_name': 'KM32DSL.get_tool', 'arguments': ''}]",2025-03-04T13:45:12.463232
Show me the settings for KM32EMF then display the configuration for KM32DSL,multi_tool,1,0.5,2,1,list_transformation_KM32EMF_tool({'input_str': ''}) | apply_KM32DSL_transformation_tool({'input_str': ''}),KM32EMF.get_tool() | KM32DSL.get_tool(),"[{'tool_name': 'list_transformation_KM32EMF_tool', 'arguments': {'input_str': ''}}]","[{'api_name': 'KM32DSL.get_tool', 'arguments': ''}]",2025-03-04T13:45:17.918808
Retrieve the configuration of KM32EMF followed by the settings of KM32DSL,multi_tool,1,1.0,2,2,list_transformation_KM32EMF_tool({'input_str': ''}) | list_transformation_KM32DSL_tool({'input_str': ''}),KM32EMF.get_tool() | KM32DSL.get_tool(),"[{'tool_name': 'list_transformation_KM32EMF_tool', 'arguments': {'input_str': ''}}, {'tool_name': 'list_transformation_KM32DSL_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T13:45:24.793568
"Get the details of KM32EMF first, then show me KM32DSL's config",multi_tool,1,1.0,2,2,list_transformation_KM32EMF_tool({'input_str': ''}) | list_transformation_KM32DSL_tool({'input_str': ''}),KM32EMF.get_tool() | KM32DSL.get_tool(),"[{'tool_name': 'list_transformation_KM32EMF_tool', 'arguments': {'input_str': ''}}, {'tool_name': 'list_transformation_KM32DSL_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T13:45:31.471578
Obtain the parameters of KM32EMF next to display KM32DSL's settings,multi_tool,1,0.5,2,1,list_transformation_KM32EMF_tool({'input_str': ''}),KM32EMF.get_tool() | KM32DSL.get_tool(),"[{'tool_name': 'list_transformation_KM32EMF_tool', 'arguments': {'input_str': ''}}]","[{'api_name': 'KM32DSL.get_tool', 'arguments': ''}]",2025-03-04T13:45:37.262717
Look at the options for KM32EMF and see what KM32DSL has,multi_tool,1,1.0,2,2,list_transformation_KM32DSL_tool({'input_str': ''}) | list_transformation_KM32EMF_tool({'input_str': ''}),KM32EMF.get_tool() | KM32DSL.get_tool(),"[{'tool_name': 'list_transformation_KM32EMF_tool', 'arguments': {'input_str': ''}}, {'tool_name': 'list_transformation_KM32DSL_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T13:45:41.796555
Compare KM32EMF's settings with the values of KM32DSL,multi_tool,1,0.0,2,0,list_transformation_KM32EMF_tool({'input_str': 'compare_km32emf_settings_with_km32dsl'}),KM32EMF.get_tool() | KM32DSL.get_tool(),[],"[{'api_name': 'KM32EMF.get_tool', 'arguments': ''}, {'api_name': 'KM32DSL.get_tool', 'arguments': ''}]",2025-03-04T13:45:50.211438
Retrieve the information about KM32EMF then look at KM32DSL,multi_tool,1,1.0,2,2,list_transformation_KM32EMF_tool({'input_str': ''}) | list_transformation_KM32DSL_tool({'input_str': ''}),KM32EMF.get_tool() | KM32DSL.get_tool(),"[{'tool_name': 'list_transformation_KM32EMF_tool', 'arguments': {'input_str': ''}}, {'tool_name': 'list_transformation_KM32DSL_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T13:45:54.429296
Obtain the details of KM32EMF followed by a display of KM32DSL,multi_tool,1,1.0,2,2,list_transformation_KM32EMF_tool({'input_str': ''}) | list_transformation_KM32DSL_tool({'input_str': ''}),KM32EMF.get_tool() | KM32DSL.get_tool(),"[{'tool_name': 'list_transformation_KM32EMF_tool', 'arguments': {'input_str': ''}}, {'tool_name': 'list_transformation_KM32DSL_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T13:45:58.995067
Compare the configurations of the XML2Ant and SimpleClass2SimpleRDBMS transformations,multi_tool,1,0.0,2,0,"compare_transformations({'transformation1': 'XML2Ant', 'transformation2': 'SimpleClass2SimpleRDBMS'})",XML2Ant.get_tool() | SimpleClass2SimpleRDBMS.get_tool(),[],"[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}, {'api_name': 'SimpleClass2SimpleRDBMS.get_tool', 'arguments': ''}]",2025-03-04T13:46:03.146002
Show me the settings for PNML2XML then display the configuration for Mantis2XML,multi_tool,1,1.0,2,2,list_transformation_PNML2XML_tool({'input_str': ''}) | list_transformation_Mantis2XML_tool({'input_str': ''}),PNML2XML.get_tool() | Mantis2XML.get_tool(),"[{'tool_name': 'list_transformation_PNML2XML_tool', 'arguments': {'input_str': ''}}, {'tool_name': 'list_transformation_Mantis2XML_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T13:46:10.613215
Retrieve the configuration of XML2Ant followed by the settings of SimpleClass2SimpleRDBMS,multi_tool,1,0.0,2,0,apply_XML2Ant_transformation_tool({'input_str': ''}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({}),XML2Ant.get_tool() | SimpleClass2SimpleRDBMS.get_tool(),[],"[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}, {'api_name': 'SimpleClass2SimpleRDBMS.get_tool', 'arguments': ''}]",2025-03-04T13:46:16.984821
"Get the details of PNML2XML first, then show me Mantis2XML's config",multi_tool,1,1.0,2,2,list_transformation_PNML2XML_tool({'input_str': ''}) | list_transformation_Mantis2XML_tool({'input_str': ''}),PNML2XML.get_tool() | Mantis2XML.get_tool(),"[{'tool_name': 'list_transformation_PNML2XML_tool', 'arguments': {'input_str': ''}}, {'tool_name': 'list_transformation_Mantis2XML_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T13:46:21.710715
Obtain the parameters of XML2Ant next to display SimpleClass2SimpleRDBMS's settings,multi_tool,1,0.0,2,0,apply_XML2Ant_transformation_tool({'input_str': ''}) | XML2Ant({'input_str': ''}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': ''}) | list_transformation({'t': 'XML2Ant'}) | apply({'t': 'MySQL2KM3'}) | list_transformation_MySQL2KM3_tool({}),XML2Ant.get_tool() | SimpleClass2SimpleRDBMS.get_tool(),[],"[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}, {'api_name': 'SimpleClass2SimpleRDBMS.get_tool', 'arguments': ''}]",2025-03-04T13:46:29.856248
Look at the options for PNML2XML and see what Mantis2XML has,multi_tool,1,1.0,2,2,list_transformation_PNML2XML_tool({'input_str': ''}) | list_transformation_Mantis2XML_tool({'input_str': ''}),PNML2XML.get_tool() | Mantis2XML.get_tool(),"[{'tool_name': 'list_transformation_PNML2XML_tool', 'arguments': {'input_str': ''}}, {'tool_name': 'list_transformation_Mantis2XML_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T13:46:34.540618
Compare XML2Ant's settings with the values of SimpleClass2SimpleRDBMS,multi_tool,1,0.0,2,0,apply_XML2Ant_transformation_tool({'input_str': 'apply_SimpleClass2SimpleRDBMS_transformation_tool'}),XML2Ant.get_tool() | SimpleClass2SimpleRDBMS.get_tool(),[],"[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}, {'api_name': 'SimpleClass2SimpleRDBMS.get_tool', 'arguments': ''}]",2025-03-04T13:46:38.986897
Retrieve the information about PNML2XML then look at Mantis2XML,multi_tool,1,1.0,2,2,list_transformation_PNML2XML_tool({'input_str': ''}) | list_transformation_Mantis2XML_tool({'input_str': ''}),PNML2XML.get_tool() | Mantis2XML.get_tool(),"[{'tool_name': 'list_transformation_PNML2XML_tool', 'arguments': {'input_str': ''}}, {'tool_name': 'list_transformation_Mantis2XML_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T13:46:44.347608
Obtain the details of XML2Ant followed by a display of SimpleClass2SimpleRDBMS,multi_tool,1,1.0,2,2,list_transformation_XML2Ant_tool({'input_str': ''}) | list_transformation_SimpleClass2SimpleRDBMS_tool({'input_str': ''}),XML2Ant.get_tool() | SimpleClass2SimpleRDBMS.get_tool(),"[{'tool_name': 'list_transformation_XML2Ant_tool', 'arguments': {'input_str': ''}}, {'tool_name': 'list_transformation_SimpleClass2SimpleRDBMS_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T13:46:49.518922
Compare the configurations of the PNML2XML and Mantis2XML transformations,multi_tool,1,0.0,2,0,"compare_transformations({'transformation1': 'PNML2XML', 'transformation2': 'Mantis2XML'})",PNML2XML.get_tool() | Mantis2XML.get_tool(),[],"[{'api_name': 'PNML2XML.get_tool', 'arguments': ''}, {'api_name': 'Mantis2XML.get_tool', 'arguments': ''}]",2025-03-04T13:46:54.500290
Show me the settings for XML2Ant then display the configuration for SimpleClass2SimpleRDBMS,multi_tool,1,0.5,2,1,apply_XML2Ant_transformation_tool({'input_str': ''}) | list_transformation_SimpleClass2SimpleRDBMS_tool({}),XML2Ant.get_tool() | SimpleClass2SimpleRDBMS.get_tool(),"[{'tool_name': 'list_transformation_SimpleClass2SimpleRDBMS_tool', 'arguments': {}}]","[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}]",2025-03-04T13:47:01.999292
Retrieve the configuration of PNML2XML followed by the settings of Mantis2XML,multi_tool,1,1.0,2,2,list_transformation_PNML2XML_tool({'input_str': ''}) | list_transformation_Mantis2XML_tool({'input_str': ''}),PNML2XML.get_tool() | Mantis2XML.get_tool(),"[{'tool_name': 'list_transformation_PNML2XML_tool', 'arguments': {'input_str': ''}}, {'tool_name': 'list_transformation_Mantis2XML_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T13:47:05.835577
"Get the details of XML2Ant first, then show me SimpleClass2SimpleRDBMS's config",multi_tool,1,1.0,2,2,list_transformation_XML2Ant_tool({'input_str': ''}) | list_transformation_SimpleClass2SimpleRDBMS_tool({'input_str': ''}),XML2Ant.get_tool() | SimpleClass2SimpleRDBMS.get_tool(),"[{'tool_name': 'list_transformation_XML2Ant_tool', 'arguments': {'input_str': ''}}, {'tool_name': 'list_transformation_SimpleClass2SimpleRDBMS_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T13:47:10.931245
Obtain the parameters of PNML2XML next to display Mantis2XML's settings,multi_tool,1,0.0,2,0,list_transformation_PNML2XML_tool({'input_str': 'Mantis2XML'}),PNML2XML.get_tool() | Mantis2XML.get_tool(),[],"[{'api_name': 'PNML2XML.get_tool', 'arguments': ''}, {'api_name': 'Mantis2XML.get_tool', 'arguments': ''}]",2025-03-04T13:47:15.989914
Look at the options for XML2Ant and see what SimpleClass2SimpleRDBMS has,multi_tool,1,0.0,2,0,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': ''}),XML2Ant.get_tool() | SimpleClass2SimpleRDBMS.get_tool(),[],"[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}, {'api_name': 'SimpleClass2SimpleRDBMS.get_tool', 'arguments': ''}]",2025-03-04T13:47:20.752809
Compare PNML2XML's settings with the values of Mantis2XML,multi_tool,1,0.0,2,0,list_transformation_PNML2XML_tool({'input_str': 'Mantis2XML'}),PNML2XML.get_tool() | Mantis2XML.get_tool(),[],"[{'api_name': 'PNML2XML.get_tool', 'arguments': ''}, {'api_name': 'Mantis2XML.get_tool', 'arguments': ''}]",2025-03-04T13:47:29.336997
Retrieve the information about XML2Ant then look at SimpleClass2SimpleRDBMS,multi_tool,1,0.5,2,1,list_transformation_XML2Ant_tool({'input_str': ''}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': ''}),XML2Ant.get_tool() | SimpleClass2SimpleRDBMS.get_tool(),"[{'tool_name': 'list_transformation_XML2Ant_tool', 'arguments': {'input_str': ''}}]","[{'api_name': 'SimpleClass2SimpleRDBMS.get_tool', 'arguments': ''}]",2025-03-04T13:47:36.415102
Obtain the details of PNML2XML followed by a display of Mantis2XML,multi_tool,1,1.0,2,2,list_transformation_PNML2XML_tool({'input_str': ''}) | list_transformation_Mantis2XML_tool({'input_str': ''}),PNML2XML.get_tool() | Mantis2XML.get_tool(),"[{'tool_name': 'list_transformation_PNML2XML_tool', 'arguments': {'input_str': ''}}, {'tool_name': 'list_transformation_Mantis2XML_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T13:47:41.315806
Compare the configurations of the XML2Ant and SimpleClass2SimpleRDBMS transformations,multi_tool,1,0.0,2,0,"compare_transformations({'transformation1': 'XML2Ant', 'transformation2': 'SimpleClass2SimpleRDBMS'})",XML2Ant.get_tool() | SimpleClass2SimpleRDBMS.get_tool(),[],"[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}, {'api_name': 'SimpleClass2SimpleRDBMS.get_tool', 'arguments': ''}]",2025-03-04T13:47:46.397047
Show me the settings for KM32EMF then display the configuration for KM32DSL,multi_tool,1,0.5,2,1,list_transformation_KM32EMF_tool({'input_str': ''}) | apply_KM32DSL_transformation_tool({'input_str': ''}),KM32EMF.get_tool() | KM32DSL.get_tool(),"[{'tool_name': 'list_transformation_KM32EMF_tool', 'arguments': {'input_str': ''}}]","[{'api_name': 'KM32DSL.get_tool', 'arguments': ''}]",2025-03-04T13:47:52.091832
Retrieve the configuration of PNML2XML followed by the settings of Mantis2XML,multi_tool,1,1.0,2,2,list_transformation_PNML2XML_tool({'input_str': ''}) | list_transformation_Mantis2XML_tool({'input_str': ''}),PNML2XML.get_tool() | Mantis2XML.get_tool(),"[{'tool_name': 'list_transformation_PNML2XML_tool', 'arguments': {'input_str': ''}}, {'tool_name': 'list_transformation_Mantis2XML_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T13:47:56.529489
"Get the details of XML2Ant first, then show me SimpleClass2SimpleRDBMS's config",multi_tool,1,1.0,2,2,list_transformation_XML2Ant_tool({'input_str': ''}) | list_transformation_SimpleClass2SimpleRDBMS_tool({'input_str': ''}),XML2Ant.get_tool() | SimpleClass2SimpleRDBMS.get_tool(),"[{'tool_name': 'list_transformation_XML2Ant_tool', 'arguments': {'input_str': ''}}, {'tool_name': 'list_transformation_SimpleClass2SimpleRDBMS_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T13:48:01.680102
Obtain the parameters of KM32EMF next to display KM32DSL's settings,multi_tool,1,0.5,2,1,list_transformation_KM32EMF_tool({'input_str': ''}),KM32EMF.get_tool() | KM32DSL.get_tool(),"[{'tool_name': 'list_transformation_KM32EMF_tool', 'arguments': {'input_str': ''}}]","[{'api_name': 'KM32DSL.get_tool', 'arguments': ''}]",2025-03-04T13:48:06.879496
Look at the options for PNML2XML and see what Mantis2XML has,multi_tool,1,1.0,2,2,list_transformation_PNML2XML_tool({'input_str': ''}) | list_transformation_Mantis2XML_tool({'input_str': ''}),PNML2XML.get_tool() | Mantis2XML.get_tool(),"[{'tool_name': 'list_transformation_PNML2XML_tool', 'arguments': {'input_str': ''}}, {'tool_name': 'list_transformation_Mantis2XML_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T13:48:11.220547
Compare XML2Ant's settings with the values of SimpleClass2SimpleRDBMS,multi_tool,1,0.0,2,0,apply_XML2Ant_transformation_tool({'input_str': 'apply_SimpleClass2SimpleRDBMS_transformation_tool'}),XML2Ant.get_tool() | SimpleClass2SimpleRDBMS.get_tool(),[],"[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}, {'api_name': 'SimpleClass2SimpleRDBMS.get_tool', 'arguments': ''}]",2025-03-04T13:48:16.152939
Retrieve the information about KM32EMF then look at KM32DSL,multi_tool,1,1.0,2,2,list_transformation_KM32EMF_tool({'input_str': ''}) | list_transformation_KM32DSL_tool({'input_str': ''}),KM32EMF.get_tool() | KM32DSL.get_tool(),"[{'tool_name': 'list_transformation_KM32EMF_tool', 'arguments': {'input_str': ''}}, {'tool_name': 'list_transformation_KM32DSL_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T13:48:21.629324
Obtain the details of PNML2XML followed by a display of Mantis2XML,multi_tool,1,1.0,2,2,list_transformation_PNML2XML_tool({'input_str': ''}) | list_transformation_Mantis2XML_tool({'input_str': ''}),PNML2XML.get_tool() | Mantis2XML.get_tool(),"[{'tool_name': 'list_transformation_PNML2XML_tool', 'arguments': {'input_str': ''}}, {'tool_name': 'list_transformation_Mantis2XML_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T13:48:26.888329
Compare the configurations of the XML2Ant and SimpleClass2SimpleRDBMS transformations,multi_tool,1,0.0,2,0,"compare_transformations({'transformation1': 'apply_XML2Ant_transformation_tool', 'transformation2': 'apply_SimpleClass2SimpleRDBMS_transformation_tool'})",XML2Ant.get_tool() | SimpleClass2SimpleRDBMS.get_tool(),[],"[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}, {'api_name': 'SimpleClass2SimpleRDBMS.get_tool', 'arguments': ''}]",2025-03-04T13:48:31.819255
Show me the settings for KM32EMF then display the configuration for KM32DSL,multi_tool,1,0.5,2,1,list_transformation_KM32EMF_tool({'input_str': ''}) | apply_KM32DSL_transformation_tool({'input_str': ''}),KM32EMF.get_tool() | KM32DSL.get_tool(),"[{'tool_name': 'list_transformation_KM32EMF_tool', 'arguments': {'input_str': ''}}]","[{'api_name': 'KM32DSL.get_tool', 'arguments': ''}]",2025-03-04T13:48:38.072554
Retrieve the configuration of PNML2XML followed by the settings of Mantis2XML,multi_tool,1,1.0,2,2,list_transformation_PNML2XML_tool({'input_str': ''}) | list_transformation_Mantis2XML_tool({'input_str': ''}),PNML2XML.get_tool() | Mantis2XML.get_tool(),"[{'tool_name': 'list_transformation_PNML2XML_tool', 'arguments': {'input_str': ''}}, {'tool_name': 'list_transformation_Mantis2XML_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T13:48:42.592860
"Get the details of XML2Ant first, then show me SimpleClass2SimpleRDBMS's config",multi_tool,1,0.5,2,1,list_transformation_XML2Ant_tool({'input_str': ''}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': ''}),XML2Ant.get_tool() | SimpleClass2SimpleRDBMS.get_tool(),"[{'tool_name': 'list_transformation_XML2Ant_tool', 'arguments': {'input_str': ''}}]","[{'api_name': 'SimpleClass2SimpleRDBMS.get_tool', 'arguments': ''}]",2025-03-04T13:48:47.993993
Obtain the parameters of KM32EMF next to display KM32DSL's settings,multi_tool,1,0.5,2,1,list_transformation_KM32EMF_tool({'input_str': ''}),KM32EMF.get_tool() | KM32DSL.get_tool(),"[{'tool_name': 'list_transformation_KM32EMF_tool', 'arguments': {'input_str': ''}}]","[{'api_name': 'KM32DSL.get_tool', 'arguments': ''}]",2025-03-04T13:48:53.187560
Look at the options for PNML2XML and see what Mantis2XML has,multi_tool,1,1.0,2,2,list_transformation_PNML2XML_tool({'input_str': ''}) | list_transformation_Mantis2XML_tool({'input_str': ''}),PNML2XML.get_tool() | Mantis2XML.get_tool(),"[{'tool_name': 'list_transformation_PNML2XML_tool', 'arguments': {'input_str': ''}}, {'tool_name': 'list_transformation_Mantis2XML_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T13:48:55.743694
Compare XML2Ant's settings with the values of SimpleClass2SimpleRDBMS,multi_tool,1,0.0,2,0,apply_XML2Ant_transformation_tool({'input_str': 'apply_SimpleClass2SimpleRDBMS_transformation_tool'}),XML2Ant.get_tool() | SimpleClass2SimpleRDBMS.get_tool(),[],"[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}, {'api_name': 'SimpleClass2SimpleRDBMS.get_tool', 'arguments': ''}]",2025-03-04T13:49:00.665733
Retrieve the information about KM32EMF then look at KM32DSL,multi_tool,1,1.0,2,2,list_transformation_KM32EMF_tool({'input_str': ''}) | list_transformation_KM32DSL_tool({'input_str': ''}),KM32EMF.get_tool() | KM32DSL.get_tool(),"[{'tool_name': 'list_transformation_KM32EMF_tool', 'arguments': {'input_str': ''}}, {'tool_name': 'list_transformation_KM32DSL_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T13:49:06.329194
Obtain the details of PNML2XML followed by a display of Mantis2XML,multi_tool,1,1.0,2,2,list_transformation_PNML2XML_tool({'input_str': ''}) | list_transformation_Mantis2XML_tool({'input_str': ''}),PNML2XML.get_tool() | Mantis2XML.get_tool(),"[{'tool_name': 'list_transformation_PNML2XML_tool', 'arguments': {'input_str': ''}}, {'tool_name': 'list_transformation_Mantis2XML_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T13:49:12.073823
Compare the configurations of the XML2Ant and SimpleClass2SimpleRDBMS transformations,multi_tool,1,0.0,2,0,"compare_transformations({'transformation1': 'apply_XML2Ant_transformation_tool', 'transformation2': 'apply_SimpleClass2SimpleRDBMS_transformation_tool'})",XML2Ant.get_tool() | SimpleClass2SimpleRDBMS.get_tool(),[],"[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}, {'api_name': 'SimpleClass2SimpleRDBMS.get_tool', 'arguments': ''}]",2025-03-04T13:49:15.689852
Show me the settings for KM32EMF then display the configuration for KM32DSL,multi_tool,1,0.5,2,1,list_transformation_KM32EMF_tool({'input_str': ''}) | apply_KM32DSL_transformation_tool({'input_str': ''}),KM32EMF.get_tool() | KM32DSL.get_tool(),"[{'tool_name': 'list_transformation_KM32EMF_tool', 'arguments': {'input_str': ''}}]","[{'api_name': 'KM32DSL.get_tool', 'arguments': ''}]",2025-03-04T13:49:20.797941
Retrieve the configuration of PNML2XML followed by the settings of Mantis2XML,multi_tool,1,1.0,2,2,list_transformation_PNML2XML_tool({'input_str': ''}) | list_transformation_Mantis2XML_tool({'input_str': ''}),PNML2XML.get_tool() | Mantis2XML.get_tool(),"[{'tool_name': 'list_transformation_PNML2XML_tool', 'arguments': {'input_str': ''}}, {'tool_name': 'list_transformation_Mantis2XML_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T13:49:25.741660
"Get the details of XML2Ant first, then show me SimpleClass2SimpleRDBMS's config",multi_tool,1,1.0,2,2,list_transformation_XML2Ant_tool({}) | list_transformation_SimpleClass2SimpleRDBMS_tool({}),XML2Ant.get_tool() | SimpleClass2SimpleRDBMS.get_tool(),"[{'tool_name': 'list_transformation_XML2Ant_tool', 'arguments': {}}, {'tool_name': 'list_transformation_SimpleClass2SimpleRDBMS_tool', 'arguments': {}}]",[],2025-03-04T13:49:30.135761
Obtain the parameters of KM32EMF next to display KM32DSL's settings,multi_tool,1,0.5,2,1,list_transformation_KM32EMF_tool({'input_str': ''}),KM32EMF.get_tool() | KM32DSL.get_tool(),"[{'tool_name': 'list_transformation_KM32EMF_tool', 'arguments': {'input_str': ''}}]","[{'api_name': 'KM32DSL.get_tool', 'arguments': ''}]",2025-03-04T13:49:34.620706
apply KM32EMF to ./atl_zoo/KM32EMF/Sample-KM3.xmi once then get the configuration for KM32DSL,multi_tool,1,1.0,2,2,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | list_transformation_KM32DSL_tool({}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.get_tool(),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}, {'tool_name': 'list_transformation_KM32DSL_tool', 'arguments': {}}]",[],2025-03-04T13:49:40.826067
Transform ./atl_zoo/KM32EMF/Sample-KM3.xmi with KM32EMF after that check the KM32DSL settings,multi_tool,1,1.0,2,2,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | list_transformation_KM32DSL_tool({}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.get_tool(),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}, {'tool_name': 'list_transformation_KM32DSL_tool', 'arguments': {}}]",[],2025-03-04T13:49:46.855786
Get the results of applying KM32EMF to ./atl_zoo/KM32EMF/Sample-KM3.xmi and then review KM32DSL configuration,multi_tool,1,1.0,2,2,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | list_transformation_KM32DSL_tool({}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.get_tool(),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}, {'tool_name': 'list_transformation_KM32DSL_tool', 'arguments': {}}]",[],2025-03-04T13:49:53.505782
Apply KM32EMF to ./atl_zoo/KM32EMF/Sample-KM3.xmi and verify its integrity before checking KM32DSL,multi_tool,1,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.get_tool(),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]","[{'api_name': 'KM32DSL.get_tool', 'arguments': ''}]",2025-03-04T13:50:01.033160
Transform ./atl_zoo/KM32EMF/Sample-KM3.xmi with KM32EMF and once you're done check the KM32DSL config,multi_tool,1,1.0,2,2,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | list_transformation_KM32DSL_tool({}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.get_tool(),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}, {'tool_name': 'list_transformation_KM32DSL_tool', 'arguments': {}}]",[],2025-03-04T13:50:07.457823
"Once you've applied KM32EMF to ./atl_zoo/KM32EMF/Sample-KM3.xmi, inspect the KM32DSL settings",multi_tool,1,0.0,2,0,list_transformation_KM32DSL_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.get_tool(),[],"[{'api_name': 'KM32EMF.apply_tool', 'arguments': './atl_zoo/KM32EMF/Sample-KM3.xmi'}, {'api_name': 'KM32DSL.get_tool', 'arguments': ''}]",2025-03-04T13:50:14.142539
"Apply KM32EMF to ./atl_zoo/KM32EMF/Sample-KM3.xmi, then review the status of KM32DSL",multi_tool,1,1.0,2,2,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | list_transformation_KM32DSL_tool({}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.get_tool(),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}, {'tool_name': 'list_transformation_KM32DSL_tool', 'arguments': {}}]",[],2025-03-04T13:50:21.492267
Use KM32EMF on ./atl_zoo/KM32EMF/Sample-KM3.xmi and afterwards check the configuration for KM32DSL,multi_tool,1,1.0,2,2,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | list_transformation_KM32DSL_tool({}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.get_tool(),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}, {'tool_name': 'list_transformation_KM32DSL_tool', 'arguments': {}}]",[],2025-03-04T13:50:26.941191
apply PNML2XML to ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi once then get the configuration for Mantis2XML,multi_tool,1,1.0,2,2,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | list_transformation_Mantis2XML_tool({}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.get_tool(),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}, {'tool_name': 'list_transformation_Mantis2XML_tool', 'arguments': {}}]",[],2025-03-04T13:50:33.442189
Transform ./atl_zoo/Ant2Maven/example/build1.xmi with XML2Ant after that check the SimpleClass2SimpleRDBMS settings,multi_tool,1,1.0,2,2,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | list_transformation_SimpleClass2SimpleRDBMS_tool({}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.get_tool(),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}, {'tool_name': 'list_transformation_SimpleClass2SimpleRDBMS_tool', 'arguments': {}}]",[],2025-03-04T13:50:41.810906
Get the results of applying PNML2XML to ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi and then review Mantis2XML configuration,multi_tool,1,1.0,2,2,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | list_transformation_Mantis2XML_tool({}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.get_tool(),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}, {'tool_name': 'list_transformation_Mantis2XML_tool', 'arguments': {}}]",[],2025-03-04T13:50:46.837221
Apply XML2Ant to ./atl_zoo/Ant2Maven/example/build1.xmi and verify its integrity before checking SimpleClass2SimpleRDBMS,multi_tool,1,1.0,2,2,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({}) | apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | list_transformation_SimpleClass2SimpleRDBMS_tool({}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.get_tool(),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}, {'tool_name': 'list_transformation_SimpleClass2SimpleRDBMS_tool', 'arguments': {}}]",[],2025-03-04T13:51:00.067275
Transform ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi with PNML2XML and once you're done check the Mantis2XML config,multi_tool,1,1.0,2,2,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | list_transformation_Mantis2XML_tool({}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.get_tool(),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}, {'tool_name': 'list_transformation_Mantis2XML_tool', 'arguments': {}}]",[],2025-03-04T13:51:05.144175
"Once you've applied XML2Ant to ./atl_zoo/Ant2Maven/example/build1.xmi, inspect the SimpleClass2SimpleRDBMS settings",multi_tool,1,0.0,2,0,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.get_tool(),[],"[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}, {'api_name': 'SimpleClass2SimpleRDBMS.get_tool', 'arguments': ''}]",2025-03-04T13:51:10.496374
"Apply PNML2XML to ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi, then review the status of Mantis2XML",multi_tool,1,1.0,2,2,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | list_transformation_Mantis2XML_tool({}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.get_tool(),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}, {'tool_name': 'list_transformation_Mantis2XML_tool', 'arguments': {}}]",[],2025-03-04T13:51:16.407221
Use XML2Ant on ./atl_zoo/Ant2Maven/example/build1.xmi and afterwards check the configuration for SimpleClass2SimpleRDBMS,multi_tool,1,1.0,2,2,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | list_transformation_SimpleClass2SimpleRDBMS_tool({}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.get_tool(),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}, {'tool_name': 'list_transformation_SimpleClass2SimpleRDBMS_tool', 'arguments': {}}]",[],2025-03-04T13:51:23.065698
apply PNML2XML to ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi once then get the configuration for Mantis2XML,multi_tool,1,1.0,2,2,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | list_transformation_Mantis2XML_tool({}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.get_tool(),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}, {'tool_name': 'list_transformation_Mantis2XML_tool', 'arguments': {}}]",[],2025-03-04T13:51:29.650376
Transform ./atl_zoo/Ant2Maven/example/build1.xmi with XML2Ant after that check the SimpleClass2SimpleRDBMS settings,multi_tool,1,1.0,2,2,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | list_transformation_SimpleClass2SimpleRDBMS_tool({}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.get_tool(),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}, {'tool_name': 'list_transformation_SimpleClass2SimpleRDBMS_tool', 'arguments': {}}]",[],2025-03-04T13:51:34.217900
Get the results of applying PNML2XML to ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi and then review Mantis2XML configuration,multi_tool,1,1.0,2,2,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | list_transformation_Mantis2XML_tool({}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.get_tool(),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}, {'tool_name': 'list_transformation_Mantis2XML_tool', 'arguments': {}}]",[],2025-03-04T13:51:41.372078
Apply XML2Ant to ./atl_zoo/Ant2Maven/example/build1.xmi and verify its integrity before checking SimpleClass2SimpleRDBMS,multi_tool,1,0.5,2,1,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.get_tool(),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}]","[{'api_name': 'SimpleClass2SimpleRDBMS.get_tool', 'arguments': ''}]",2025-03-04T13:51:46.954293
Transform ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi with PNML2XML and once you're done check the Mantis2XML config,multi_tool,1,1.0,2,2,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | list_transformation_Mantis2XML_tool({}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.get_tool(),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}, {'tool_name': 'list_transformation_Mantis2XML_tool', 'arguments': {}}]",[],2025-03-04T13:51:53.955524
"Once you've applied XML2Ant to ./atl_zoo/Ant2Maven/example/build1.xmi, inspect the SimpleClass2SimpleRDBMS settings",multi_tool,1,0.5,2,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | list_transformation_SimpleClass2SimpleRDBMS_tool({}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.get_tool(),"[{'tool_name': 'list_transformation_SimpleClass2SimpleRDBMS_tool', 'arguments': {}}]","[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}]",2025-03-04T13:51:59.850814
"Apply PNML2XML to ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi, then review the status of Mantis2XML",multi_tool,1,1.0,2,2,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | list_transformation_Mantis2XML_tool({}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.get_tool(),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}, {'tool_name': 'list_transformation_Mantis2XML_tool', 'arguments': {}}]",[],2025-03-04T13:52:05.452729
Use XML2Ant on ./atl_zoo/Ant2Maven/example/build1.xmi and afterwards check the configuration for SimpleClass2SimpleRDBMS,multi_tool,1,1.0,2,2,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | list_transformation_SimpleClass2SimpleRDBMS_tool({}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.get_tool(),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}, {'tool_name': 'list_transformation_SimpleClass2SimpleRDBMS_tool', 'arguments': {}}]",[],2025-03-04T13:52:12.038042
apply PNML2XML to ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi once then get the configuration for Mantis2XML,multi_tool,1,1.0,2,2,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | list_transformation_Mantis2XML_tool({}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.get_tool(),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}, {'tool_name': 'list_transformation_Mantis2XML_tool', 'arguments': {}}]",[],2025-03-04T13:52:18.288010
Transform ./atl_zoo/Ant2Maven/example/build1.xmi with XML2Ant after that check the SimpleClass2SimpleRDBMS settings,multi_tool,1,1.0,2,2,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | list_transformation_SimpleClass2SimpleRDBMS_tool({}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.get_tool(),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}, {'tool_name': 'list_transformation_SimpleClass2SimpleRDBMS_tool', 'arguments': {}}]",[],2025-03-04T13:52:23.308376
Get the results of applying KM32EMF to ./atl_zoo/KM32EMF/Sample-KM3.xmi and then review KM32DSL configuration,multi_tool,1,1.0,2,2,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | list_transformation_KM32DSL_tool({}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.get_tool(),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}, {'tool_name': 'list_transformation_KM32DSL_tool', 'arguments': {}}]",[],2025-03-04T13:52:29.975412
Apply PNML2XML to ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi and verify its integrity before checking Mantis2XML,multi_tool,1,0.5,2,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/PNML_to_XML_example.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.get_tool(),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]","[{'api_name': 'Mantis2XML.get_tool', 'arguments': ''}]",2025-03-04T13:52:39.234841
Transform ./atl_zoo/Ant2Maven/example/build1.xmi with XML2Ant and once you're done check the SimpleClass2SimpleRDBMS config,multi_tool,1,1.0,2,2,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': ''}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': ''}) | list_transformation_SimpleClass2SimpleRDBMS_tool({'name': 'SimpleClass2SimpleRDBMS'}) | list_transformation_SimpleClass2SimpleRDBMS_tool({'transformation_name': 'SimpleClass2SimpleRDBMS'}) | list_transformation_SimpleClass2SimpleRDBMS_tool({}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.get_tool(),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}, {'tool_name': 'list_transformation_SimpleClass2SimpleRDBMS_tool', 'arguments': {}}]",[],2025-03-04T13:52:47.081475
"Once you've applied KM32EMF to ./atl_zoo/KM32EMF/Sample-KM3.xmi, inspect the KM32DSL settings",multi_tool,1,0.5,2,1,list_transformation_KM32DSL_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | list_transformation_KM32DSL_tool({}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.get_tool(),"[{'tool_name': 'list_transformation_KM32DSL_tool', 'arguments': {}}]","[{'api_name': 'KM32EMF.apply_tool', 'arguments': './atl_zoo/KM32EMF/Sample-KM3.xmi'}]",2025-03-04T13:52:55.133574
"Apply PNML2XML to ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi, then review the status of Mantis2XML",multi_tool,1,1.0,2,2,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | list_transformation_Mantis2XML_tool({}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.get_tool(),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}, {'tool_name': 'list_transformation_Mantis2XML_tool', 'arguments': {}}]",[],2025-03-04T13:53:00.578851
Use XML2Ant on ./atl_zoo/Ant2Maven/example/build1.xmi and afterwards check the configuration for SimpleClass2SimpleRDBMS,multi_tool,1,1.0,2,2,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | list_transformation_SimpleClass2SimpleRDBMS_tool({}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.get_tool(),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}, {'tool_name': 'list_transformation_SimpleClass2SimpleRDBMS_tool', 'arguments': {}}]",[],2025-03-04T13:53:07.221861
apply KM32EMF to ./atl_zoo/KM32EMF/Sample-KM3.xmi once then get the configuration for KM32DSL,multi_tool,1,1.0,2,2,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | list_transformation_KM32DSL_tool({}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.get_tool(),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}, {'tool_name': 'list_transformation_KM32DSL_tool', 'arguments': {}}]",[],2025-03-04T13:53:13.571204
Transform ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi with PNML2XML after that check the Mantis2XML settings,multi_tool,1,1.0,2,2,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | list_transformation_Mantis2XML_tool({}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.get_tool(),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}, {'tool_name': 'list_transformation_Mantis2XML_tool', 'arguments': {}}]",[],2025-03-04T13:53:19.753658
Get the results of applying XML2Ant to ./atl_zoo/Ant2Maven/example/build1.xmi and then review SimpleClass2SimpleRDBMS configuration,multi_tool,1,1.0,2,2,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | list_transformation_SimpleClass2SimpleRDBMS_tool({}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.get_tool(),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}, {'tool_name': 'list_transformation_SimpleClass2SimpleRDBMS_tool', 'arguments': {}}]",[],2025-03-04T13:53:26.830216
Apply KM32EMF to ./atl_zoo/KM32EMF/Sample-KM3.xmi and verify its integrity before checking KM32DSL,multi_tool,1,1.0,2,2,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | list_transformation_KM32DSL_tool({}) | list_transformation_KM32EMF_tool({}) | list_transformation_Families2Persons_tool({}) | apply_Families2Persons_transformation_tool({}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.get_tool(),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}, {'tool_name': 'list_transformation_KM32DSL_tool', 'arguments': {}}]",[],2025-03-04T13:53:37.174276
Transform ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi with PNML2XML and once you're done check the Mantis2XML config,multi_tool,1,1.0,2,2,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | list_transformation_Mantis2XML_tool({}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.get_tool(),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}, {'tool_name': 'list_transformation_Mantis2XML_tool', 'arguments': {}}]",[],2025-03-04T13:53:43.982590
"Once you've applied XML2Ant to ./atl_zoo/Ant2Maven/example/build1.xmi, inspect the SimpleClass2SimpleRDBMS settings",multi_tool,1,0.0,2,0,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.get_tool(),[],"[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}, {'api_name': 'SimpleClass2SimpleRDBMS.get_tool', 'arguments': ''}]",2025-03-04T13:53:49.348511
"Apply KM32EMF to ./atl_zoo/KM32EMF/Sample-KM3.xmi, then review the status of KM32DSL",multi_tool,1,1.0,2,2,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | list_transformation_KM32DSL_tool({}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.get_tool(),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}, {'tool_name': 'list_transformation_KM32DSL_tool', 'arguments': {}}]",[],2025-03-04T13:53:56.748709
Use PNML2XML on ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi and afterwards check the configuration for Mantis2XML,multi_tool,1,1.0,2,2,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | list_transformation_Mantis2XML_tool({}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.get_tool(),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}, {'tool_name': 'list_transformation_Mantis2XML_tool', 'arguments': {}}]",[],2025-03-04T13:54:01.690419
apply XML2Ant to ./atl_zoo/Ant2Maven/example/build1.xmi once then get the configuration for SimpleClass2SimpleRDBMS,multi_tool,1,1.0,2,2,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | list_transformation_SimpleClass2SimpleRDBMS_tool({}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.get_tool(),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}, {'tool_name': 'list_transformation_SimpleClass2SimpleRDBMS_tool', 'arguments': {}}]",[],2025-03-04T13:54:09.663831
Transform ./atl_zoo/KM32EMF/Sample-KM3.xmi with KM32EMF after that check the KM32DSL settings,multi_tool,1,1.0,2,2,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | list_transformation_KM32DSL_tool({}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.get_tool(),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}, {'tool_name': 'list_transformation_KM32DSL_tool', 'arguments': {}}]",[],2025-03-04T13:54:15.679043
Get the results of applying PNML2XML to ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi and then review Mantis2XML configuration,multi_tool,1,1.0,2,2,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | list_transformation_Mantis2XML_tool({}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.get_tool(),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}, {'tool_name': 'list_transformation_Mantis2XML_tool', 'arguments': {}}]",[],2025-03-04T13:54:20.944368
Apply XML2Ant to ./atl_zoo/Ant2Maven/example/build1.xmi and verify its integrity before checking SimpleClass2SimpleRDBMS,multi_tool,1,0.5,2,1,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.get_tool(),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}]","[{'api_name': 'SimpleClass2SimpleRDBMS.get_tool', 'arguments': ''}]",2025-03-04T13:54:26.864052
Transform ./atl_zoo/KM32EMF/Sample-KM3.xmi with KM32EMF and once you're done check the KM32DSL config,multi_tool,1,1.0,2,2,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | list_transformation_KM32DSL_tool({}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.get_tool(),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}, {'tool_name': 'list_transformation_KM32DSL_tool', 'arguments': {}}]",[],2025-03-04T13:54:32.413233
"Once you've applied PNML2XML to ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi, inspect the Mantis2XML settings",multi_tool,1,0.0,2,0,list_transformation_Mantis2XML_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.get_tool(),[],"[{'api_name': 'PNML2XML.apply_tool', 'arguments': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}, {'api_name': 'Mantis2XML.get_tool', 'arguments': ''}]",2025-03-04T13:54:37.356215
"Apply XML2Ant to ./atl_zoo/Ant2Maven/example/build1.xmi, then review the status of SimpleClass2SimpleRDBMS",multi_tool,1,1.0,2,2,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | list_transformation_SimpleClass2SimpleRDBMS_tool({}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.get_tool(),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}, {'tool_name': 'list_transformation_SimpleClass2SimpleRDBMS_tool', 'arguments': {}}]",[],2025-03-04T13:54:43.427875
Use KM32EMF on ./atl_zoo/KM32EMF/Sample-KM3.xmi and afterwards check the configuration for KM32DSL,multi_tool,1,1.0,2,2,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | list_transformation_KM32DSL_tool({}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.get_tool(),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}, {'tool_name': 'list_transformation_KM32DSL_tool', 'arguments': {}}]",[],2025-03-04T13:54:49.689536
apply PNML2XML to ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi once then get the configuration for Mantis2XML,multi_tool,1,1.0,2,2,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | list_transformation_Mantis2XML_tool({}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.get_tool(),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}, {'tool_name': 'list_transformation_Mantis2XML_tool', 'arguments': {}}]",[],2025-03-04T13:54:55.850386
Transform ./atl_zoo/Ant2Maven/example/build1.xmi with XML2Ant after that check the SimpleClass2SimpleRDBMS settings,multi_tool,1,1.0,2,2,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | list_transformation_SimpleClass2SimpleRDBMS_tool({}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.get_tool(),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}, {'tool_name': 'list_transformation_SimpleClass2SimpleRDBMS_tool', 'arguments': {}}]",[],2025-03-04T13:55:01.108747
Apply KM32EMF to ./atl_zoo/KM32EMF/Sample-KM3.xmi and then apply KM32DSL to ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi.,multi_tool,1,1.0,2,2,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32EMF_tool({}) | list_transformation_KM32DSL_tool({}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}, {'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T13:55:08.978530
Transform ./atl_zoo/KM32EMF/Sample-KM3.xmi using KM32EMF and then apply transformations to ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi using KM32DSL.,multi_tool,1,1.0,2,2,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32EMF_tool({}) | list_transformation_KM32DSL_tool({}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}, {'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T13:55:17.229058
Transform ./atl_zoo/KM32EMF/Sample-KM3.xmi using KM32EMF and then transform ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi using KM32DSL after the first application.,multi_tool,1,1.0,2,2,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}, {'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T13:55:23.668583
"Transform ./atl_zoo/KM32EMF/Sample-KM3.xmi using KM32EMF then transform ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi using KM32DSL,",multi_tool,1,1.0,2,2,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32EMF_tool({}) | list_transformation_KM32DSL_tool({}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}, {'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T13:55:30.986549
Apply KM32EMF to ./atl_zoo/KM32EMF/Sample-KM3.xmi followed by applying KM32DSL to ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi,multi_tool,1,0.0,2,0,No tools called,KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),[],"[{'api_name': 'KM32EMF.apply_tool', 'arguments': './atl_zoo/KM32EMF/Sample-KM3.xmi'}, {'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T13:55:34.486091
"Once you've processed ./atl_zoo/KM32EMF/Sample-KM3.xmi with KM32EMF, apply KM32DSL to ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi",multi_tool,1,0.5,2,1,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32DSL_tool({}) | apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | list_transformation_KM32OWL_tool({}) | apply_KM32OWL_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]","[{'api_name': 'KM32EMF.apply_tool', 'arguments': './atl_zoo/KM32EMF/Sample-KM3.xmi'}]",2025-03-04T13:55:43.617532
KM32EMF applies to ./atl_zoo/KM32EMF/Sample-KM3.xmi before KM32DSL is applied to ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi,multi_tool,1,1.0,2,2,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32EMF_tool({}) | list_transformation_KM32DSL_tool({}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}, {'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T13:55:50.645357
"Apply KM32EMF to ./atl_zoo/KM32EMF/Sample-KM3.xmi and then KM32DSL to ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi,",multi_tool,1,1.0,2,2,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32EMF_tool({}) | list_transformation_KM32DSL_tool({}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}, {'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T13:55:58.423623
Apply PNML2XML to ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi and then apply Mantis2XML to ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi.,multi_tool,1,1.0,2,2,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}, {'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T13:56:05.118247
Transform ./atl_zoo/Ant2Maven/example/build1.xmi using XML2Ant and then apply transformations to ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi using SimpleClass2SimpleRDBMS.,multi_tool,1,1.0,2,2,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}, {'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T13:56:10.583819
Transform ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi using PNML2XML and then transform ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi using Mantis2XML after the first application.,multi_tool,1,1.0,2,2,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}, {'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T13:56:17.231369
"Transform ./atl_zoo/Ant2Maven/example/build1.xmi using XML2Ant then transform ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi using SimpleClass2SimpleRDBMS,",multi_tool,1,1.0,2,2,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}, {'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T13:56:22.820874
Apply PNML2XML to ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi followed by applying Mantis2XML to ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi,multi_tool,1,1.0,2,2,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | list_transformation_PNML2XML_tool({}) | apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | list_transformation_Mantis2XML_tool({}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}, {'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T13:56:32.657219
"Once you've processed ./atl_zoo/Ant2Maven/example/build1.xmi with XML2Ant, apply SimpleClass2SimpleRDBMS to ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi",multi_tool,1,0.5,2,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]","[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}]",2025-03-04T13:56:39.017670
PNML2XML applies to ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi before Mantis2XML is applied to ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi,multi_tool,1,1.0,2,2,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | list_transformation_PNML2XML_tool({}) | list_transformation_Mantis2XML_tool({}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}, {'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T13:56:45.957430
"Apply XML2Ant to ./atl_zoo/Ant2Maven/example/build1.xmi and then SimpleClass2SimpleRDBMS to ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi,",multi_tool,1,1.0,2,2,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}, {'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T13:56:51.955698
Apply PNML2XML to ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi and then apply Mantis2XML to ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi.,multi_tool,1,1.0,2,2,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}, {'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T13:56:58.839897
Transform ./atl_zoo/Ant2Maven/example/build1.xmi using XML2Ant and then apply transformations to ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi using SimpleClass2SimpleRDBMS.,multi_tool,1,1.0,2,2,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}, {'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T13:57:03.945660
Transform ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi using PNML2XML and then transform ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi using Mantis2XML after the first application.,multi_tool,1,1.0,2,2,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | list_transformation_PNML2XML_tool({}) | list_transformation_Mantis2XML_tool({}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}, {'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T13:57:09.885235
"Transform ./atl_zoo/Ant2Maven/example/build1.xmi using XML2Ant then transform ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi using SimpleClass2SimpleRDBMS,",multi_tool,1,1.0,2,2,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}, {'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T13:57:15.089913
Apply PNML2XML to ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi followed by applying Mantis2XML to ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi,multi_tool,1,1.0,2,2,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | list_transformation_PNML2XML_tool({}) | apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | list_transformation_Mantis2XML_tool({}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}, {'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T13:57:22.853011
"Once you've processed ./atl_zoo/Ant2Maven/example/build1.xmi with XML2Ant, apply SimpleClass2SimpleRDBMS to ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi",multi_tool,1,0.5,2,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]","[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}]",2025-03-04T13:57:29.003262
PNML2XML applies to ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi before Mantis2XML is applied to ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi,multi_tool,1,1.0,2,2,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | list_transformation_PNML2XML_tool({}) | list_transformation_Mantis2XML_tool({}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}, {'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T13:57:37.582977
"Apply XML2Ant to ./atl_zoo/Ant2Maven/example/build1.xmi and then SimpleClass2SimpleRDBMS to ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi,",multi_tool,1,1.0,2,2,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}, {'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T13:57:43.920428
Apply KM32EMF to ./atl_zoo/KM32EMF/Sample-KM3.xmi and then apply KM32DSL to ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi.,multi_tool,1,1.0,2,2,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}, {'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T13:57:52.747335
Transform ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi using PNML2XML and then apply transformations to ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi using Mantis2XML.,multi_tool,1,1.0,2,2,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}, {'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T13:57:58.589452
Transform ./atl_zoo/Ant2Maven/example/build1.xmi using XML2Ant and then transform ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi using SimpleClass2SimpleRDBMS after the first application.,multi_tool,1,1.0,2,2,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}, {'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T13:58:09.011458
"Transform ./atl_zoo/KM32EMF/Sample-KM3.xmi using KM32EMF then transform ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi using KM32DSL,",multi_tool,1,1.0,2,2,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32EMF_tool({}) | list_transformation_KM32DSL_tool({}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}, {'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T13:58:15.603162
Apply PNML2XML to ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi followed by applying Mantis2XML to ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi,multi_tool,1,1.0,2,2,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | list_transformation_PNML2XML_tool({}) | apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | list_transformation_Mantis2XML_tool({}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}, {'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T13:58:23.148747
"Once you've processed ./atl_zoo/Ant2Maven/example/build1.xmi with XML2Ant, apply SimpleClass2SimpleRDBMS to ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi",multi_tool,1,0.5,2,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]","[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}]",2025-03-04T13:58:29.319699
KM32EMF applies to ./atl_zoo/KM32EMF/Sample-KM3.xmi before KM32DSL is applied to ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi,multi_tool,1,1.0,2,2,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32EMF_tool({}) | list_transformation_KM32DSL_tool({}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}, {'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T13:58:38.955908
"Apply PNML2XML to ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi and then Mantis2XML to ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi,",multi_tool,1,1.0,2,2,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | list_transformation_PNML2XML_tool({}) | list_transformation_Mantis2XML_tool({}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}, {'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T13:58:48.235169
Apply XML2Ant to ./atl_zoo/Ant2Maven/example/build1.xmi and then apply SimpleClass2SimpleRDBMS to ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi.,multi_tool,1,1.0,2,2,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}, {'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T13:58:54.063964
Transform ./atl_zoo/KM32EMF/Sample-KM3.xmi using KM32EMF and then apply transformations to ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi using KM32DSL.,multi_tool,1,1.0,2,2,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32EMF_tool({}) | list_transformation_KM32DSL_tool({}) | apply_KM32EMF_transformation_tool({'__file': './KM3.ecore'}) | apply_KM32DSL_transformation_tool({'__file': './Metamodels/KM3.ecore'}) | apply_KM32EMF_transformation_tool({'input_file': './KM3.ecore'}) | apply_KM32EMF_transformation_tool({'input_file': './KM3.ecore'}) | apply_KM32EMF_transformation_tool({'input_file': './KM3.ecore'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}, {'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T13:59:05.755942
Transform ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi using PNML2XML and then transform ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi using Mantis2XML after the first application.,multi_tool,1,1.0,2,2,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}, {'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T13:59:11.540876
"Transform ./atl_zoo/Ant2Maven/example/build1.xmi using XML2Ant then transform ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi using SimpleClass2SimpleRDBMS,",multi_tool,1,1.0,2,2,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}, {'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T13:59:19.331862
Apply KM32EMF to ./atl_zoo/KM32EMF/Sample-KM3.xmi followed by applying KM32DSL to ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi,multi_tool,1,1.0,2,2,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32EMF_tool({}) | list_transformation_KM32DSL_tool({}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}, {'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T13:59:31.233108
"Once you've processed ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi with PNML2XML, apply Mantis2XML to ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi",multi_tool,1,0.5,2,1,apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]","[{'api_name': 'PNML2XML.apply_tool', 'arguments': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}]",2025-03-04T13:59:37.059198
XML2Ant applies to ./atl_zoo/Ant2Maven/example/build1.xmi before SimpleClass2SimpleRDBMS is applied to ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi,multi_tool,1,1.0,2,2,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}, {'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T13:59:43.996942
"Apply KM32EMF to ./atl_zoo/KM32EMF/Sample-KM3.xmi and then KM32DSL to ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi,",multi_tool,1,1.0,2,2,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32EMF_tool({}) | list_transformation_KM32DSL_tool({}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}, {'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T13:59:50.928205
Apply PNML2XML to ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi and then apply Mantis2XML to ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi.,multi_tool,1,1.0,2,2,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}, {'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T13:59:57.043739
Transform ./atl_zoo/Ant2Maven/example/build1.xmi using XML2Ant and then apply transformations to ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi using SimpleClass2SimpleRDBMS.,multi_tool,1,1.0,2,2,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}, {'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T14:00:03.936624
Transform ./atl_zoo/KM32EMF/Sample-KM3.xmi using KM32EMF and then transform ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi using KM32DSL after the first application.,multi_tool,1,1.0,2,2,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32EMF_tool({}) | list_transformation_KM32DSL_tool({}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}, {'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T14:00:09.795050
"Transform ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi using PNML2XML then transform ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi using Mantis2XML,",multi_tool,1,1.0,2,2,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | list_transformation_PNML2XML_tool({}) | list_transformation_Mantis2XML_tool({}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}, {'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T14:00:18.184352
Apply XML2Ant to ./atl_zoo/Ant2Maven/example/build1.xmi followed by applying SimpleClass2SimpleRDBMS to ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi,multi_tool,1,1.0,2,2,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}, {'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T14:00:23.763269
"Once you've processed ./atl_zoo/KM32EMF/Sample-KM3.xmi with KM32EMF, apply KM32DSL to ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi",multi_tool,1,0.0,2,0,No tools called,KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),[],"[{'api_name': 'KM32EMF.apply_tool', 'arguments': './atl_zoo/KM32EMF/Sample-KM3.xmi'}, {'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:00:41.909912
PNML2XML applies to ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi before Mantis2XML is applied to ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi,multi_tool,1,1.0,2,2,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | list_transformation_PNML2XML_tool({}) | list_transformation_Mantis2XML_tool({}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}, {'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T14:00:49.347172
"Apply XML2Ant to ./atl_zoo/Ant2Maven/example/build1.xmi and then SimpleClass2SimpleRDBMS to ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi,",multi_tool,1,1.0,2,2,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}, {'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T14:00:57.595013
Apply KM32EMF to ./atl_zoo/KM32EMF/Sample-KM3.xmi and then apply KM32DSL to ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi.,multi_tool,1,1.0,2,2,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32EMF_tool({}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | list_transformation_KM32DSL_tool({}) | apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}, {'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T14:01:10.033754
Transform ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi using PNML2XML and then apply transformations to ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi using Mantis2XML.,multi_tool,1,0.0,2,0,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),[],"[{'api_name': 'PNML2XML.apply_tool', 'arguments': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}, {'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T14:01:17.334398
"After obtaining the configuration, I need you to show me the configuration settings of the transformation that transforms a KM3 into a EMF model and then transform ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi from this model KM3 to a DSL model",multi_tool,2,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32EMF_tool({}),KM32EMF.get_tool() | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'list_transformation_KM32EMF_tool', 'arguments': {}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:01:25.795504
"Apply this transformation to get the required output, once you have the configuration settings for transforming a KM3 into a EMF model then transform ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi from this model KM3 to a DSL model",multi_tool,2,0.0,2,0,No tools called,KM32EMF.get_tool() | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),[],"[{'api_name': 'KM32EMF.get_tool', 'arguments': ''}, {'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:01:42.981644
"To complete the task, first get the required configuration, then apply it to transform a KM3 into a EMF model once, after which you can transform ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi from this model KM3 to a DSL model",multi_tool,2,0.0,2,0,No tools called,KM32EMF.get_tool() | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),[],"[{'api_name': 'KM32EMF.get_tool', 'arguments': ''}, {'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:01:59.842451
"Once I have the necessary configuration for transforming a KM3 into a EMF model, apply this to transform ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi from this model KM3 to a DSL model",multi_tool,2,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32EMF_tool({}),KM32EMF.get_tool() | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'list_transformation_KM32EMF_tool', 'arguments': {}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:02:05.868868
"Now, show me the required settings for transforming a KM3 into a EMF model and then apply them to transform ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi from this model KM3 to a DSL model",multi_tool,2,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32EMF_tool({}),KM32EMF.get_tool() | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'list_transformation_KM32EMF_tool', 'arguments': {}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:02:12.876445
"After I have your confirmation, show me the configuration that enables the transformation of KM3 into EMF and then apply this to transform ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi from this model KM3 to a DSL model",multi_tool,2,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32EMF_tool({}),KM32EMF.get_tool() | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'list_transformation_KM32EMF_tool', 'arguments': {}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:02:19.181848
Show me the settings that enable the transformation of KM3 into EMF and apply them to transform ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi from this model KM3 to a DSL model,multi_tool,2,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32EMF_tool({}),KM32EMF.get_tool() | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'list_transformation_KM32EMF_tool', 'arguments': {}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:02:25.434468
"Apply these settings once you have displayed them, show me the required configuration for transforming KM3 into EMF and then apply this to transform ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi from this model KM3 to a DSL model",multi_tool,2,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32EMF_tool({}),KM32EMF.get_tool() | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'list_transformation_KM32EMF_tool', 'arguments': {}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:02:32.007120
"After obtaining the configuration, I need you to show me the configuration settings of the transformation that transforms a XML into a Ant model and then transform ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi from this model SimpleClass to a SimpleRDBMS model",multi_tool,2,0.0,2,0,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.get_tool() | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),[],"[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}, {'api_name': 'SimpleClass2SimpleRDBMS.apply_tool', 'arguments': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}]",2025-03-04T14:02:37.428774
"Apply this transformation to get the required output, once you have the configuration settings for transforming a PNML into a XML model transform ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi from this model Mantis to a XML model",multi_tool,2,0.0,2,0,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.get_tool() | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),[],"[{'api_name': 'PNML2XML.get_tool', 'arguments': ''}, {'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T14:02:44.413680
"To complete the task, first get the required configuration, then apply it to transform a XML into a Ant model once, after which you can transform ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi from this model SimpleClass to a SimpleRDBMS model",multi_tool,2,1.0,2,2,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | list_transformation_XML2Ant_tool({}) | list_transformation_SimpleClass2SimpleRDBMS_tool({}),XML2Ant.get_tool() | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'list_transformation_XML2Ant_tool', 'arguments': {}}, {'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T14:02:58.200501
"Once I have the necessary configuration for transforming a PNML into a XML model, apply this to transform ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi from this model Mantis to a XML model",multi_tool,2,0.0,2,0,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.get_tool() | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),[],"[{'api_name': 'PNML2XML.get_tool', 'arguments': ''}, {'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T14:03:06.575295
"Now, show me the required settings for transforming a XML into a Ant model and then apply them to transform ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi from this model SimpleClass to a SimpleRDBMS model",multi_tool,2,0.0,2,0,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | list_transformation_XML2Ant({}),XML2Ant.get_tool() | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),[],"[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}, {'api_name': 'SimpleClass2SimpleRDBMS.apply_tool', 'arguments': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}]",2025-03-04T14:03:18.483005
"After I have your confirmation, show me the configuration that enables the transformation of PNML into XML and then apply this to transform ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi from this model Mantis to a XML model",multi_tool,2,0.5,2,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | list_transformation_PNML2XML_tool({}) | apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.get_tool() | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'list_transformation_PNML2XML_tool', 'arguments': {}}]","[{'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T14:03:28.078763
Show me the settings that enable the transformation of XML into Ant and apply them to transform ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi from this model SimpleClass to a SimpleRDBMS model,multi_tool,2,0.0,2,0,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.get_tool() | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),[],"[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}, {'api_name': 'SimpleClass2SimpleRDBMS.apply_tool', 'arguments': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}]",2025-03-04T14:03:33.067070
"Apply these settings once you have displayed them, show me the required configuration for transforming PNML into XML and then apply this to transform ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi from this model Mantis to a XML model",multi_tool,2,0.0,2,0,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.get_tool() | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),[],"[{'api_name': 'PNML2XML.get_tool', 'arguments': ''}, {'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T14:03:42.368238
"After obtaining the configuration, I need you to show me the configuration settings of the transformation that transforms a XML into a Ant model and then transform ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi from this model SimpleClass to a SimpleRDBMS model",multi_tool,2,0.5,2,1,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | list_transformation_XML2Ant_tool({}) | apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.get_tool() | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'list_transformation_XML2Ant_tool', 'arguments': {}}]","[{'api_name': 'SimpleClass2SimpleRDBMS.apply_tool', 'arguments': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}]",2025-03-04T14:03:53.302182
"Apply this transformation to get the required output, once you have the configuration settings for transforming a PNML into a XML model transform ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi from this model Mantis to a XML model",multi_tool,2,0.0,2,0,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.get_tool() | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),[],"[{'api_name': 'PNML2XML.get_tool', 'arguments': ''}, {'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T14:04:00.064675
"To complete the task, first get the required configuration, then apply it to transform a XML into a Ant model once, after which you can transform ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi from this model SimpleClass to a SimpleRDBMS model",multi_tool,2,0.5,2,1,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.get_tool() | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]","[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}]",2025-03-04T14:04:13.255826
"Once I have the necessary configuration for transforming a PNML into a XML model, apply this to transform ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi from this model Mantis to a XML model",multi_tool,2,0.0,2,0,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.get_tool() | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),[],"[{'api_name': 'PNML2XML.get_tool', 'arguments': ''}, {'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T14:04:20.696358
"Now, show me the required settings for transforming a XML into a Ant model and then apply them to transform ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi from this model SimpleClass to a SimpleRDBMS model",multi_tool,2,0.0,2,0,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | list_transformation_XML2XSLT_tool({}),XML2Ant.get_tool() | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),[],"[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}, {'api_name': 'SimpleClass2SimpleRDBMS.apply_tool', 'arguments': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}]",2025-03-04T14:04:30.514878
"After I have your confirmation, show me the configuration that enables the transformation of PNML into XML and then apply this to transform ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi from this model Mantis to a XML model",multi_tool,2,0.5,2,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | list_transformation_PNML2XML_tool({}),PNML2XML.get_tool() | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'list_transformation_PNML2XML_tool', 'arguments': {}}]","[{'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T14:04:35.726410
Show me the settings that enable the transformation of XML into Ant and apply them to transform ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi from this model SimpleClass to a SimpleRDBMS model,multi_tool,2,0.0,2,0,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.get_tool() | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),[],"[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}, {'api_name': 'SimpleClass2SimpleRDBMS.apply_tool', 'arguments': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}]",2025-03-04T14:04:41.912385
"Apply these settings once you have displayed them, show me the required configuration for transforming PNML into XML and then apply this to transform ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi from this model Mantis to a XML model",multi_tool,2,0.0,2,0,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.get_tool() | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),[],"[{'api_name': 'PNML2XML.get_tool', 'arguments': ''}, {'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T14:04:49.615361
"After obtaining the configuration, I need you to show me the configuration settings of the transformation that transforms a XML into a Ant model and then transform ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi from this model SimpleClass to a SimpleRDBMS model",multi_tool,2,0.0,2,0,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.get_tool() | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),[],"[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}, {'api_name': 'SimpleClass2SimpleRDBMS.apply_tool', 'arguments': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}]",2025-03-04T14:04:55.496991
"Apply this transformation to get the required output, once you have the configuration settings for transforming a KM3 into a EMF model transform ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi from this model KM3 to a DSL model",multi_tool,2,0.0,2,0,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32EMF.get_tool() | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),[],"[{'api_name': 'KM32EMF.get_tool', 'arguments': ''}, {'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:05:02.255030
"To complete the task, first get the required configuration, then apply it to transform a PNML into a XML model once, after which you can transform ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi from this model Mantis to a XML model",multi_tool,2,0.0,2,0,No tools called,PNML2XML.get_tool() | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),[],"[{'api_name': 'PNML2XML.get_tool', 'arguments': ''}, {'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T14:05:17.760503
"Once I have the necessary configuration for transforming a XML into a Ant model, apply this to transform ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi from this model SimpleClass to a SimpleRDBMS model",multi_tool,2,0.0,2,0,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.get_tool() | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),[],"[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}, {'api_name': 'SimpleClass2SimpleRDBMS.apply_tool', 'arguments': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}]",2025-03-04T14:05:21.602755
"Now, show me the required settings for transforming a KM3 into a EMF model and then apply them to transform ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi from this model KM3 to a DSL model",multi_tool,2,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32EMF_tool({}),KM32EMF.get_tool() | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'list_transformation_KM32EMF_tool', 'arguments': {}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:05:26.982441
"After I have your confirmation, show me the configuration that enables the transformation of PNML into XML and then apply this to transform ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi from this model Mantis to a XML model",multi_tool,2,0.0,2,0,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.get_tool() | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),[],"[{'api_name': 'PNML2XML.get_tool', 'arguments': ''}, {'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T14:05:33.188727
Show me the settings that enable the transformation of XML into Ant and apply them to transform ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi from this model SimpleClass to a SimpleRDBMS model,multi_tool,2,0.0,2,0,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.get_tool() | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),[],"[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}, {'api_name': 'SimpleClass2SimpleRDBMS.apply_tool', 'arguments': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}]",2025-03-04T14:05:41.452300
"Apply these settings once you have displayed them, show me the required configuration for transforming KM3 into EMF and then apply this to transform ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi from this model KM3 to a DSL model",multi_tool,2,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32EMF_tool({}),KM32EMF.get_tool() | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'list_transformation_KM32EMF_tool', 'arguments': {}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:05:48.324954
"After obtaining the configuration, I need you to show me the configuration settings of the transformation that transforms a PNML into a XML model and then transform ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi from this model Mantis to a XML model",multi_tool,2,0.0,2,0,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.get_tool() | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),[],"[{'api_name': 'PNML2XML.get_tool', 'arguments': ''}, {'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T14:05:53.664458
"Apply this transformation to get the required output, once you have the configuration settings for transforming a XML into a Ant model transform ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi from this model SimpleClass to a SimpleRDBMS model",multi_tool,2,0.5,2,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.get_tool() | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]","[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}]",2025-03-04T14:05:58.342624
"To complete the task, first get the required configuration, then apply it to transform a KM3 into a EMF model once, after which you can transform ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi from this model KM3 to a DSL model",multi_tool,2,0.0,2,0,No tools called,KM32EMF.get_tool() | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),[],"[{'api_name': 'KM32EMF.get_tool', 'arguments': ''}, {'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:06:13.767375
"Once I have the necessary configuration for transforming a PNML into a XML model, apply this to transform ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi from this model Mantis to a XML model",multi_tool,2,0.0,2,0,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.get_tool() | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),[],"[{'api_name': 'PNML2XML.get_tool', 'arguments': ''}, {'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T14:06:20.823599
"Now, show me the required settings for transforming a XML into a Ant model and then apply them to transform ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi from this model SimpleClass to a SimpleRDBMS model",multi_tool,2,0.0,2,0,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.get_tool() | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),[],"[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}, {'api_name': 'SimpleClass2SimpleRDBMS.apply_tool', 'arguments': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}]",2025-03-04T14:06:27.734379
"After I have your confirmation, show me the configuration that enables the transformation of KM3 into EMF and then apply this to transform ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi from this model KM3 to a DSL model",multi_tool,2,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32EMF_tool({}),KM32EMF.get_tool() | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'list_transformation_KM32EMF_tool', 'arguments': {}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:06:34.114632
Show me the settings that enable the transformation of PNML into XML and apply them to transform ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi from this model Mantis to a XML model,multi_tool,2,0.0,2,0,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.get_tool() | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),[],"[{'api_name': 'PNML2XML.get_tool', 'arguments': ''}, {'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T14:06:39.832081
"Apply these settings once you have displayed them, show me the required configuration for transforming XML into Ant and then apply this to transform ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi from this model SimpleClass to a SimpleRDBMS model",multi_tool,2,0.0,2,0,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.get_tool() | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),[],"[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}, {'api_name': 'SimpleClass2SimpleRDBMS.apply_tool', 'arguments': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}]",2025-03-04T14:06:46.443499
"After obtaining the configuration, I need you to show me the configuration settings of the transformation that transforms a KM3 into a EMF model and then transform ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi from this model KM3 to a DSL model",multi_tool,2,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32EMF_tool({}),KM32EMF.get_tool() | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'list_transformation_KM32EMF_tool', 'arguments': {}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:06:52.315455
"Apply this transformation to get the required output, once you have the configuration settings for transforming a PNML into a XML model transform ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi from this model Mantis to a XML model",multi_tool,2,0.0,2,0,"apply_PNML2XML_transformation_tool({'input_str': ""'./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'""})",PNML2XML.get_tool() | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),[],"[{'api_name': 'PNML2XML.get_tool', 'arguments': ''}, {'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T14:06:58.055162
"To complete the task, first get the required configuration, then apply it to transform a XML into a Ant model once, after which you can transform ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi from this model SimpleClass to a SimpleRDBMS model",multi_tool,2,0.5,2,1,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.get_tool() | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]","[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}]",2025-03-04T14:07:03.701807
"Once I have the necessary configuration for transforming a KM3 into a EMF model, apply this to transform ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi from this model KM3 to a DSL model",multi_tool,2,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32EMF_tool({}),KM32EMF.get_tool() | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'list_transformation_KM32EMF_tool', 'arguments': {}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:07:07.477397
"Now, show me the required settings for transforming a PNML into a XML model and then apply them to transform ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi from this model Mantis to a XML model",multi_tool,2,0.0,2,0,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.get_tool() | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),[],"[{'api_name': 'PNML2XML.get_tool', 'arguments': ''}, {'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T14:07:12.826827
"After I have your confirmation, show me the configuration that enables the transformation of XML into Ant and then apply this to transform ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi from this model SimpleClass to a SimpleRDBMS model",multi_tool,2,0.0,2,0,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.get_tool() | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),[],"[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}, {'api_name': 'SimpleClass2SimpleRDBMS.apply_tool', 'arguments': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}]",2025-03-04T14:07:18.399107
Show me the settings that enable the transformation of KM3 into EMF and apply them to transform ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi from this model KM3 to a DSL model,multi_tool,2,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32EMF_tool({}),KM32EMF.get_tool() | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'list_transformation_KM32EMF_tool', 'arguments': {}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:07:26.259190
"Apply these settings once you have displayed them, show me the required configuration for transforming PNML into XML and then apply this to transform ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi from this model Mantis to a XML model",multi_tool,2,0.0,2,0,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.get_tool() | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),[],"[{'api_name': 'PNML2XML.get_tool', 'arguments': ''}, {'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T14:07:33.952328
"After obtaining the configuration, I need you to show me the configuration settings of the transformation that transforms a XML into a Ant model and then transform ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi from this model SimpleClass to a SimpleRDBMS model",multi_tool,2,0.0,2,0,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | list_transformation_XML2XSLT_tool({}) | list_transformation_Families2Persons_tool({}) | list_transformation_MySQL2KM3_tool({}) | list_transformation_Ant2Maven_tool({}) | list_transformation_KM32OWL_tool({}) | list_transformation_Families2Persons_tool({}) | list_transformation_MySQL2KM3_tool({}) | list_transformation_Ant2Maven_tool({}) | list_transformation_KM32OWL_tool({}),XML2Ant.get_tool() | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),[],"[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}, {'api_name': 'SimpleClass2SimpleRDBMS.apply_tool', 'arguments': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}]",2025-03-04T14:07:48.567173
"Apply this transformation to get the required output, once you have the configuration settings for transforming a KM3 into a EMF model then transform ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi from this model KM3 to a DSL model",multi_tool,2,0.0,2,0,No tools called,KM32EMF.get_tool() | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),[],"[{'api_name': 'KM32EMF.get_tool', 'arguments': ''}, {'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:08:07.571803
"Show me the configuration that transforms a KM3 into a EMF, then show me the configuration that converts a KM3 into a DSL",multi_tool,2,0.0,2,0,apply_KM32EMF_transformation_tool({'input_str': ''}) | apply_KM32DSL_transformation_tool({'input_str': ''}) | apply_KM32EMF_transformation_tool({'input_str': '/path/to/km3_model.xmi'}) | apply_KM32DSL_transformation_tool({'input_str': '/path/to/km3_model.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': '/path/to/km3_model.xmi'}) | apply_KM32DSL_transformation_tool({'input_str': '/path/to/km3_model.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': '/path/to/km3_model.xmi'}) | apply_KM32DSL_transformation_tool({'input_str': '/path/to/km3_model.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': 'https://example.com/km3_model.xmi'}) | apply_KM32DSL_transformation_tool({'input_str': '/path/to/km3_model.xmi'}),KM32EMF.get_tool() | KM32DSL.get_tool(),[],"[{'api_name': 'KM32EMF.get_tool', 'arguments': ''}, {'api_name': 'KM32DSL.get_tool', 'arguments': ''}]",2025-03-04T14:08:21.157922
Show the configuration for transforming a KM3 to a EMF and then show the configuration for converting a KM3 to a DSL,multi_tool,2,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': ''}) | apply_KM32DSL_transformation_tool({'input_str': ''}) | apply_KM32EMF_transformation_tool({'input_str': '/path/to/km3_model.xmi'}) | apply_KM32DSL_transformation_tool({'input_str': '/path/to/km3_model.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': '/path/to/km3_model.xmi'}) | apply_KM32DSL_transformation_tool({'input_str': '/path/to/km3_model.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': '/path/to/km3_model.xmi'}) | apply_KM32DSL_transformation_tool({'input_str': '/path/to/km3_model.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': 'https://example.com/km3_model.xmi'}) | list_transformation_KM32DSL_tool({}) | list_transformation_KM32OWL_tool({}) | list_transformation_KM32EMF_transformation_tool({}) | list_transformation_Families2Persons_tool({}) | list_transformation_MySQL2KM3_tool({}) | list_transformation_Ant2Maven_tool({}) | list_transformation_KM32OWL_tool({}),KM32EMF.get_tool() | KM32DSL.get_tool(),"[{'tool_name': 'list_transformation_KM32DSL_tool', 'arguments': {}}]","[{'api_name': 'KM32EMF.get_tool', 'arguments': ''}]",2025-03-04T14:08:38.602397
Show the configuration settings of the transformation that converts a KM3 to a EMF and then show the settings for converting a KM3 to a DSL,multi_tool,2,1.0,2,2,list_transformation_KM32EMF_tool({'input_str': ''}) | apply_KM32EMF_transformation_tool({'input_str': ''}) | list_transformation_KM32DSL_tool({'input_str': ''}) | apply_KM32DSL_transformation_tool({'input_str': ''}),KM32EMF.get_tool() | KM32DSL.get_tool(),"[{'tool_name': 'list_transformation_KM32EMF_tool', 'arguments': {'input_str': ''}}, {'tool_name': 'list_transformation_KM32DSL_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T14:08:48.453724
Show me the configuration for transforming KM3 to EMF and then show me the settings for converting KM3 to DSL,multi_tool,2,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': ''}) | list_transformation_KM32DSL_tool({'input_str': ''}),KM32EMF.get_tool() | KM32DSL.get_tool(),"[{'tool_name': 'list_transformation_KM32DSL_tool', 'arguments': {'input_str': ''}}]","[{'api_name': 'KM32EMF.get_tool', 'arguments': ''}]",2025-03-04T14:08:54.529965
Show the configuration for transforming a KM3 to a EMF and then display the settings for converting a KM3 to a DSL,multi_tool,2,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': ''}) | list_transformation_KM32DSL_tool({'input_str': ''}) | apply_KM32EMF_transformation_tool({'input_str': './Metamodels/KM3.ecore'}),KM32EMF.get_tool() | KM32DSL.get_tool(),"[{'tool_name': 'list_transformation_KM32DSL_tool', 'arguments': {'input_str': ''}}]","[{'api_name': 'KM32EMF.get_tool', 'arguments': ''}]",2025-03-04T14:09:03.354850
Show me the configuration settings of the transformation that converts a KM3 to a EMF and then display the settings for converting a KM3 to a DSL,multi_tool,2,0.5,2,1,list_transformation_KM32EMF_tool({'input_str': ''}) | apply_KM32EMF_transformation_tool({'input_str': ''}),KM32EMF.get_tool() | KM32DSL.get_tool(),"[{'tool_name': 'list_transformation_KM32EMF_tool', 'arguments': {'input_str': ''}}]","[{'api_name': 'KM32DSL.get_tool', 'arguments': ''}]",2025-03-04T14:09:09.918947
Show the configuration settings of the transformation that transforms a KM3 into a EMF and then display the settings for converting a KM3 to a DSL,multi_tool,2,0.5,2,1,list_transformation_KM32EMF_tool({'input_str': ''}) | apply_KM32EMF_transformation_tool({'input_str': ''}),KM32EMF.get_tool() | KM32DSL.get_tool(),"[{'tool_name': 'list_transformation_KM32EMF_tool', 'arguments': {'input_str': ''}}]","[{'api_name': 'KM32DSL.get_tool', 'arguments': ''}]",2025-03-04T14:09:16.479463
Show the configuration for transforming a KM3 to a EMF and then show the settings for converting a KM3 to a DSL,multi_tool,2,0.0,2,0,apply_KM32EMF_transformation_tool({'input_str': ''}) | apply_KM32DSL_transformation_tool({'input_str': ''}),KM32EMF.get_tool() | KM32DSL.get_tool(),[],"[{'api_name': 'KM32EMF.get_tool', 'arguments': ''}, {'api_name': 'KM32DSL.get_tool', 'arguments': ''}]",2025-03-04T14:09:23.570186
Show the configuration settings of the transformation that converts a KM3 to a EMF and then show me the settings for converting a KM3 to a DSL,multi_tool,2,1.0,2,2,list_transformation_KM32EMF_tool({'input_str': ''}) | apply_KM32EMF_transformation_tool({'input_str': ''}) | list_transformation_KM32EMF_tool({'input_str': ''}) | list_transformation_KM32DSL_tool({'input_str': ''}) | list_transformation_PNML2XML_tool({'input_str': ''}) | list_transformation_Mantis2XML_tool({'input_str': ''}) | list_transformation_SimpleClass2SimpleRDBMS_tool({'input_str': ''}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './SimpleClass.xmi'}),KM32EMF.get_tool() | KM32DSL.get_tool(),"[{'tool_name': 'list_transformation_KM32EMF_tool', 'arguments': {'input_str': ''}}, {'tool_name': 'list_transformation_KM32DSL_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T14:09:35.104544
"Show me the configuration that transforms a PNML into a XML, then show me the configuration that converts a Mantis into a XML",multi_tool,2,0.0,2,0,apply_PNML2XML_transformation_tool({'input_str': ''}) | apply_Mantis2XML_transformation_tool({'input_str': ''}),PNML2XML.get_tool() | Mantis2XML.get_tool(),[],"[{'api_name': 'PNML2XML.get_tool', 'arguments': ''}, {'api_name': 'Mantis2XML.get_tool', 'arguments': ''}]",2025-03-04T14:09:40.613440
Show the configuration for transforming a XML to a Ant and then show the configuration for converting a SimpleClass to a SimpleRDBMS,multi_tool,2,0.0,2,0,apply_XML2Ant_transformation_tool({'input_str': '<xml>...</xml>'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': '/path/to/SimpleClass.model'}),XML2Ant.get_tool() | SimpleClass2SimpleRDBMS.get_tool(),[],"[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}, {'api_name': 'SimpleClass2SimpleRDBMS.get_tool', 'arguments': ''}]",2025-03-04T14:09:47.549938
Show the configuration settings of the transformation that converts a PNML to a XML and then show the settings for converting a Mantis to a XML,multi_tool,2,1.0,2,2,list_transformation_PNML2XML_tool({'input_str': ''}) | list_transformation_Mantis2XML_tool({'input_str': ''}),PNML2XML.get_tool() | Mantis2XML.get_tool(),"[{'tool_name': 'list_transformation_PNML2XML_tool', 'arguments': {'input_str': ''}}, {'tool_name': 'list_transformation_Mantis2XML_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T14:09:50.933964
Show me the configuration for transforming XML to Ant and then show me the settings for converting SimpleClass to SimpleRDBMS,multi_tool,2,0.0,2,0,apply_XML2Ant_transformation_tool({'input_str': ''}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': ''}),XML2Ant.get_tool() | SimpleClass2SimpleRDBMS.get_tool(),[],"[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}, {'api_name': 'SimpleClass2SimpleRDBMS.get_tool', 'arguments': ''}]",2025-03-04T14:09:57.746097
Show the configuration for transforming a PNML to a XML and then display the settings for converting a Mantis to a XML,multi_tool,2,0.0,2,0,apply_PNML2XML_transformation_tool({'input_str': ''}) | apply_Mantis2XML_transformation_tool({'input_str': ''}),PNML2XML.get_tool() | Mantis2XML.get_tool(),[],"[{'api_name': 'PNML2XML.get_tool', 'arguments': ''}, {'api_name': 'Mantis2XML.get_tool', 'arguments': ''}]",2025-03-04T14:10:02.884572
Show me the configuration settings of the transformation that converts a XML to a Ant and then display the settings for converting a SimpleClass to a SimpleRDBMS,multi_tool,2,0.0,2,0,apply_XML2Ant_transformation_tool({'input_str': '<xml>...</xml>'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': '<simpleclass>...</simpleclass>'}),XML2Ant.get_tool() | SimpleClass2SimpleRDBMS.get_tool(),[],"[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}, {'api_name': 'SimpleClass2SimpleRDBMS.get_tool', 'arguments': ''}]",2025-03-04T14:10:08.277707
Show the configuration settings of the transformation that transforms a PNML into a XML and then display the settings for converting a Mantis to a XML,multi_tool,2,1.0,2,2,list_transformation_PNML2XML_tool({'input_str': ''}) | apply_PNML2XML_transformation_tool({'input_str': ''}) | list_transformation_Mantis2XML_tool({'input_str': ''}),PNML2XML.get_tool() | Mantis2XML.get_tool(),"[{'tool_name': 'list_transformation_PNML2XML_tool', 'arguments': {'input_str': ''}}, {'tool_name': 'list_transformation_Mantis2XML_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T14:10:17.162425
Show the configuration for transforming a XML to a Ant and then show the settings for converting a SimpleClass to a SimpleRDBMS,multi_tool,2,0.0,2,0,apply_XML2Ant_transformation_tool({'input_str': '<xml>...</xml>'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': '/path/to/SimpleClass.model'}),XML2Ant.get_tool() | SimpleClass2SimpleRDBMS.get_tool(),[],"[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}, {'api_name': 'SimpleClass2SimpleRDBMS.get_tool', 'arguments': ''}]",2025-03-04T14:10:21.884271
Show the configuration settings of the transformation that converts a PNML to a XML and then show me the settings for converting a Mantis to a XML,multi_tool,2,1.0,2,2,list_transformation_PNML2XML_tool({'input_str': ''}) | apply_PNML2XML_transformation_tool({'input_str': ''}) | list_transformation_Mantis2XML_tool({'input_str': ''}),PNML2XML.get_tool() | Mantis2XML.get_tool(),"[{'tool_name': 'list_transformation_PNML2XML_tool', 'arguments': {'input_str': ''}}, {'tool_name': 'list_transformation_Mantis2XML_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T14:10:30.024863
"Show me the configuration that transforms a XML into a Ant, then show me the configuration that converts a SimpleClass into a SimpleRDBMS",multi_tool,2,0.0,2,0,apply_XML2Ant_transformation_tool({'input_str': ''}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({}) | apply_XML2Ant_transformation_tool({'input_str': '/path/to/your/xml/file.xml'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': '/path/to/your/SimpleClass.xmi'}) | apply_XML2Ant_transformation_tool({'input_str': '/path/to/example.xml'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': '/path/to/SimpleClass.xmi'}) | apply_XML2Ant_transformation_tool({'input_str': '/path/to/example.xml'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': '/path/to/SimpleClass.xmi'}) | list_transformation_KM32DSL_tool({}) | list_transformation_KM32EMF_tool({}) | list_transformation_Families2Persons_tool({}) | apply_Families2Persons_transformation_tool({}),XML2Ant.get_tool() | SimpleClass2SimpleRDBMS.get_tool(),[],"[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}, {'api_name': 'SimpleClass2SimpleRDBMS.get_tool', 'arguments': ''}]",2025-03-04T14:10:43.934798
Show the configuration for transforming a PNML to a XML and then show the configuration for converting a Mantis to a XML,multi_tool,2,0.0,2,0,apply_PNML2XML_transformation_tool({'input_str': ''}) | apply_Mantis2XML_transformation_tool({'input_str': ''}),PNML2XML.get_tool() | Mantis2XML.get_tool(),[],"[{'api_name': 'PNML2XML.get_tool', 'arguments': ''}, {'api_name': 'Mantis2XML.get_tool', 'arguments': ''}]",2025-03-04T14:10:49.991469
Show the configuration settings of the transformation that converts a XML to a Ant and then show the settings for converting a SimpleClass to a SimpleRDBMS,multi_tool,2,0.0,2,0,apply_XML2Ant_transformation_tool({'input_str': '<xml>...</xml>'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': '<simpleclass>...</simpleclass>'}),XML2Ant.get_tool() | SimpleClass2SimpleRDBMS.get_tool(),[],"[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}, {'api_name': 'SimpleClass2SimpleRDBMS.get_tool', 'arguments': ''}]",2025-03-04T14:10:55.720492
Show me the configuration for transforming PNML to XML and then show me the settings for converting Mantis to XML,multi_tool,2,0.0,2,0,apply_PNML2XML_transformation_tool({'input_str': ''}) | apply_Mantis2XML_transformation_tool({'input_str': ''}),PNML2XML.get_tool() | Mantis2XML.get_tool(),[],"[{'api_name': 'PNML2XML.get_tool', 'arguments': ''}, {'api_name': 'Mantis2XML.get_tool', 'arguments': ''}]",2025-03-04T14:11:00.983713
Show the configuration for transforming a XML to a Ant and then display the settings for converting a SimpleClass to a SimpleRDBMS,multi_tool,2,0.0,2,0,apply_XML2Ant_transformation_tool({'input_str': '<xml>...</xml>'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': '/path/to/SimpleClass.model'}),XML2Ant.get_tool() | SimpleClass2SimpleRDBMS.get_tool(),[],"[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}, {'api_name': 'SimpleClass2SimpleRDBMS.get_tool', 'arguments': ''}]",2025-03-04T14:11:06.752244
Show me the configuration settings of the transformation that converts a PNML to a XML and then display the settings for converting a Mantis to a XML,multi_tool,2,1.0,2,2,list_transformation_PNML2XML_tool({'input_str': ''}) | apply_PNML2XML_transformation_tool({'input_str': ''}) | list_transformation_Mantis2XML_tool({'input_str': ''}) | apply_Mantis2XML_transformation_tool({'input_str': ''}),PNML2XML.get_tool() | Mantis2XML.get_tool(),"[{'tool_name': 'list_transformation_PNML2XML_tool', 'arguments': {'input_str': ''}}, {'tool_name': 'list_transformation_Mantis2XML_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T14:11:12.679025
Show the configuration settings of the transformation that transforms a XML into a Ant and then display the settings for converting a SimpleClass to a SimpleRDBMS,multi_tool,2,0.0,2,0,apply_XML2Ant_transformation_tool({'input_str': 'SimpleClass'}),XML2Ant.get_tool() | SimpleClass2SimpleRDBMS.get_tool(),[],"[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}, {'api_name': 'SimpleClass2SimpleRDBMS.get_tool', 'arguments': ''}]",2025-03-04T14:11:18.692408
Show the configuration for transforming a PNML to a XML and then show the settings for converting a Mantis to a XML,multi_tool,2,1.0,2,2,apply_PNML2XML_transformation_tool({'input_str': ''}) | apply_Mantis2XML_transformation_tool({'input_str': ''}) | apply_PNML2XML_transformation_tool({'input_str': '/path/to/pnml_file.pnml'}) | apply_Mantis2XML_transformation_tool({'input_str': '/path/to/mantis_model.mantis'}) | apply_PNML2XML_transformation_tool({'input_str': '/path/to/pnml_file.pnml'}) | apply_Mantis2XML_transformation_tool({'input_str': '/path/to/mantis_model.mantis'}) | list_transformation_PNML2XML_tool({}) | list_transformation_Mantis2XML_tool({}),PNML2XML.get_tool() | Mantis2XML.get_tool(),"[{'tool_name': 'list_transformation_PNML2XML_tool', 'arguments': {}}, {'tool_name': 'list_transformation_Mantis2XML_tool', 'arguments': {}}]",[],2025-03-04T14:11:28.214536
Show the configuration settings of the transformation that converts a XML to a Ant and then show me the settings for converting a SimpleClass to a SimpleRDBMS,multi_tool,2,0.5,2,1,apply_XML2Ant_transformation_tool({'input_str': '<xml>...</xml>'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': '/path/to/SimpleClass.model'}) | list_transformation_XML2XSLT_tool({'input_str': ''}) | list_transformation_SimpleClass2SimpleRDBMS_tool({'input_str': ''}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './simple_class.xmi'}),XML2Ant.get_tool() | SimpleClass2SimpleRDBMS.get_tool(),"[{'tool_name': 'list_transformation_SimpleClass2SimpleRDBMS_tool', 'arguments': {'input_str': ''}}]","[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}]",2025-03-04T14:11:37.683331
"Show me the configuration that transforms a PNML into a XML, then show me the configuration that converts a Mantis into a XML",multi_tool,2,0.0,2,0,apply_PNML2XML_transformation_tool({'input_str': ''}) | apply_Mantis2XML_transformation_tool({'input_str': ''}),PNML2XML.get_tool() | Mantis2XML.get_tool(),[],"[{'api_name': 'PNML2XML.get_tool', 'arguments': ''}, {'api_name': 'Mantis2XML.get_tool', 'arguments': ''}]",2025-03-04T14:11:42.620824
Show the configuration for transforming a XML to a Ant and then show the configuration for converting a SimpleClass to a SimpleRDBMS,multi_tool,2,0.0,2,0,apply_XML2Ant_transformation_tool({'input_str': '<xml>...</xml>'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': '/path/to/SimpleClass.model'}),XML2Ant.get_tool() | SimpleClass2SimpleRDBMS.get_tool(),[],"[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}, {'api_name': 'SimpleClass2SimpleRDBMS.get_tool', 'arguments': ''}]",2025-03-04T14:11:48.647520
Show the configuration settings of the transformation that converts a KM3 to a EMF and then show the settings for converting a KM3 to a DSL,multi_tool,2,1.0,2,2,list_transformation_KM32EMF_tool({'input_str': ''}) | apply_KM32EMF_transformation_tool({'input_str': ''}) | list_transformation_KM32DSL_tool({'input_str': ''}) | apply_KM32DSL_transformation_tool({'input_str': ''}),KM32EMF.get_tool() | KM32DSL.get_tool(),"[{'tool_name': 'list_transformation_KM32EMF_tool', 'arguments': {'input_str': ''}}, {'tool_name': 'list_transformation_KM32DSL_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T14:11:55.993680
Show me the configuration for transforming PNML to XML and then show me the settings for converting Mantis to XML,multi_tool,2,0.0,2,0,apply_PNML2XML_transformation_tool({'input_str': ''}) | apply_Mantis2XML_transformation_tool({'input_str': ''}),PNML2XML.get_tool() | Mantis2XML.get_tool(),[],"[{'api_name': 'PNML2XML.get_tool', 'arguments': ''}, {'api_name': 'Mantis2XML.get_tool', 'arguments': ''}]",2025-03-04T14:12:01.183822
Show the configuration for transforming a XML to a Ant and then display the settings for converting a SimpleClass to a SimpleRDBMS,multi_tool,2,0.0,2,0,apply_XML2Ant_transformation_tool({'input_str': '<xml>...</xml>'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': '/path/to/SimpleClass.model'}),XML2Ant.get_tool() | SimpleClass2SimpleRDBMS.get_tool(),[],"[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}, {'api_name': 'SimpleClass2SimpleRDBMS.get_tool', 'arguments': ''}]",2025-03-04T14:12:06.975382
Show me the configuration settings of the transformation that converts a KM3 to a EMF and then display the settings for converting a KM3 to a DSL,multi_tool,2,0.5,2,1,list_transformation_KM32EMF_tool({'input_str': ''}) | apply_KM32EMF_transformation_tool({'input_str': ''}),KM32EMF.get_tool() | KM32DSL.get_tool(),"[{'tool_name': 'list_transformation_KM32EMF_tool', 'arguments': {'input_str': ''}}]","[{'api_name': 'KM32DSL.get_tool', 'arguments': ''}]",2025-03-04T14:12:12.776587
Show the configuration settings of the transformation that transforms a PNML into a XML and then display the settings for converting a Mantis to a XML,multi_tool,2,1.0,2,2,list_transformation_PNML2XML_tool({'input_str': ''}) | apply_PNML2XML_transformation_tool({'input_str': ''}) | list_transformation_Mantis2XML_tool({'input_str': ''}),PNML2XML.get_tool() | Mantis2XML.get_tool(),"[{'tool_name': 'list_transformation_PNML2XML_tool', 'arguments': {'input_str': ''}}, {'tool_name': 'list_transformation_Mantis2XML_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T14:12:21.808334
Show the configuration for transforming a XML to a Ant and then show the settings for converting a SimpleClass to a SimpleRDBMS,multi_tool,2,0.0,2,0,apply_XML2Ant_transformation_tool({'input_str': '<xml>...</xml>'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': '/path/to/SimpleClass.model'}),XML2Ant.get_tool() | SimpleClass2SimpleRDBMS.get_tool(),[],"[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}, {'api_name': 'SimpleClass2SimpleRDBMS.get_tool', 'arguments': ''}]",2025-03-04T14:12:27.412777
Show the configuration settings of the transformation that converts a KM3 to a EMF and then show me the settings for converting a KM3 to a DSL,multi_tool,2,0.5,2,1,list_transformation_KM32EMF_tool({'input_str': ''}) | apply_KM32EMF_transformation_tool({'input_str': ''}),KM32EMF.get_tool() | KM32DSL.get_tool(),"[{'tool_name': 'list_transformation_KM32EMF_tool', 'arguments': {'input_str': ''}}]","[{'api_name': 'KM32DSL.get_tool', 'arguments': ''}]",2025-03-04T14:12:33.178850
"Show me the configuration that transforms a PNML into a XML, then show me the configuration that converts a Mantis into a XML",multi_tool,2,0.0,2,0,apply_PNML2XML_transformation_tool({'input_str': ''}) | apply_Mantis2XML_transformation_tool({'input_str': ''}),PNML2XML.get_tool() | Mantis2XML.get_tool(),[],"[{'api_name': 'PNML2XML.get_tool', 'arguments': ''}, {'api_name': 'Mantis2XML.get_tool', 'arguments': ''}]",2025-03-04T14:12:38.148456
Show the configuration for transforming a XML to a Ant and then show the configuration for converting a SimpleClass to a SimpleRDBMS,multi_tool,2,0.0,2,0,apply_XML2Ant_transformation_tool({'input_str': '<xml>...</xml>'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': '/path/to/SimpleClass.model'}),XML2Ant.get_tool() | SimpleClass2SimpleRDBMS.get_tool(),[],"[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}, {'api_name': 'SimpleClass2SimpleRDBMS.get_tool', 'arguments': ''}]",2025-03-04T14:12:44.063201
Show the configuration settings of the transformation that converts a KM3 to a EMF and then show the settings for converting a KM3 to a DSL,multi_tool,2,1.0,2,2,list_transformation_KM32EMF_tool({'input_str': ''}) | apply_KM32EMF_transformation_tool({'input_str': ''}) | list_transformation_KM32DSL_tool({'input_str': ''}) | apply_KM32DSL_transformation_tool({'input_str': ''}),KM32EMF.get_tool() | KM32DSL.get_tool(),"[{'tool_name': 'list_transformation_KM32EMF_tool', 'arguments': {'input_str': ''}}, {'tool_name': 'list_transformation_KM32DSL_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T14:12:49.406822
Show me the configuration for transforming PNML to XML and then show me the settings for converting Mantis to XML,multi_tool,2,0.0,2,0,apply_PNML2XML_transformation_tool({'input_str': ''}) | apply_Mantis2XML_transformation_tool({'input_str': ''}),PNML2XML.get_tool() | Mantis2XML.get_tool(),[],"[{'api_name': 'PNML2XML.get_tool', 'arguments': ''}, {'api_name': 'Mantis2XML.get_tool', 'arguments': ''}]",2025-03-04T14:12:52.920380
Show the configuration for transforming a XML to a Ant and then display the settings for converting a SimpleClass to a SimpleRDBMS,multi_tool,2,0.0,2,0,apply_XML2Ant_transformation_tool({'input_str': '<xml>...</xml>'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': '/path/to/SimpleClass.model'}),XML2Ant.get_tool() | SimpleClass2SimpleRDBMS.get_tool(),[],"[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}, {'api_name': 'SimpleClass2SimpleRDBMS.get_tool', 'arguments': ''}]",2025-03-04T14:12:57.564040
Show me the configuration settings of the transformation that converts a KM3 to a EMF and then display the settings for converting a KM3 to a DSL,multi_tool,2,0.5,2,1,list_transformation_KM32EMF_tool({'input_str': ''}) | apply_KM32EMF_transformation_tool({'input_str': ''}),KM32EMF.get_tool() | KM32DSL.get_tool(),"[{'tool_name': 'list_transformation_KM32EMF_tool', 'arguments': {'input_str': ''}}]","[{'api_name': 'KM32DSL.get_tool', 'arguments': ''}]",2025-03-04T14:13:03.567211
Show the configuration settings of the transformation that transforms a PNML into a XML and then display the settings for converting a Mantis to a XML,multi_tool,2,1.0,2,2,list_transformation_PNML2XML_tool({'input_str': ''}) | apply_PNML2XML_transformation_tool({'input_str': ''}) | list_transformation_Mantis2XML_tool({'input_str': ''}),PNML2XML.get_tool() | Mantis2XML.get_tool(),"[{'tool_name': 'list_transformation_PNML2XML_tool', 'arguments': {'input_str': ''}}, {'tool_name': 'list_transformation_Mantis2XML_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T14:13:09.972425
Show the configuration for transforming a XML to a Ant and then show the settings for converting a SimpleClass to a SimpleRDBMS,multi_tool,2,0.0,2,0,apply_XML2Ant_transformation_tool({'input_str': '<xml>...</xml>'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': '/path/to/SimpleClass.model'}),XML2Ant.get_tool() | SimpleClass2SimpleRDBMS.get_tool(),[],"[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}, {'api_name': 'SimpleClass2SimpleRDBMS.get_tool', 'arguments': ''}]",2025-03-04T14:13:15.881840
Show the configuration settings of the transformation that converts a KM3 to a EMF and then show me the settings for converting a KM3 to a DSL,multi_tool,2,1.0,2,2,list_transformation_KM32EMF_tool({'input_str': ''}) | apply_KM32EMF_transformation_tool({'input_str': ''}) | list_transformation_KM32DSL_tool({'input_str': ''}) | apply_KM32DSL_transformation_tool({'input_str': ''}),KM32EMF.get_tool() | KM32DSL.get_tool(),"[{'tool_name': 'list_transformation_KM32EMF_tool', 'arguments': {'input_str': ''}}, {'tool_name': 'list_transformation_KM32DSL_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T14:13:24.391337
"Show me the configuration that transforms a PNML into a XML, then show me the configuration that converts a Mantis into a XML",multi_tool,2,0.0,2,0,apply_PNML2XML_transformation_tool({'input_str': ''}) | apply_Mantis2XML_transformation_tool({'input_str': ''}),PNML2XML.get_tool() | Mantis2XML.get_tool(),[],"[{'api_name': 'PNML2XML.get_tool', 'arguments': ''}, {'api_name': 'Mantis2XML.get_tool', 'arguments': ''}]",2025-03-04T14:13:28.027604
Show the configuration for transforming a XML to a Ant and then show the configuration for converting a SimpleClass to a SimpleRDBMS,multi_tool,2,0.0,2,0,apply_XML2Ant_transformation_tool({'input_str': '<xml>...</xml>'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': '/path/to/SimpleClass.model'}),XML2Ant.get_tool() | SimpleClass2SimpleRDBMS.get_tool(),[],"[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}, {'api_name': 'SimpleClass2SimpleRDBMS.get_tool', 'arguments': ''}]",2025-03-04T14:13:33.613935
Show the configuration settings of the transformation that converts a KM3 to a EMF and then show the settings for converting a KM3 to a DSL,multi_tool,2,1.0,2,2,list_transformation_KM32EMF_tool({'input_str': ''}) | apply_KM32EMF_transformation_tool({'input_str': ''}) | list_transformation_KM32DSL_tool({'input_str': ''}) | apply_KM32DSL_transformation_tool({'input_str': ''}),KM32EMF.get_tool() | KM32DSL.get_tool(),"[{'tool_name': 'list_transformation_KM32EMF_tool', 'arguments': {'input_str': ''}}, {'tool_name': 'list_transformation_KM32DSL_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T14:13:41.637613
Show me the configuration for transforming PNML to XML and then show me the settings for converting Mantis to XML,multi_tool,2,0.0,2,0,apply_PNML2XML_transformation_tool({'input_str': ''}) | apply_Mantis2XML_transformation_tool({'input_str': ''}),PNML2XML.get_tool() | Mantis2XML.get_tool(),[],"[{'api_name': 'PNML2XML.get_tool', 'arguments': ''}, {'api_name': 'Mantis2XML.get_tool', 'arguments': ''}]",2025-03-04T14:13:45.026833
Show the configuration for transforming a XML to a Ant and then display the settings for converting a SimpleClass to a SimpleRDBMS,multi_tool,2,0.0,2,0,apply_XML2Ant_transformation_tool({'input_str': '<xml>...</xml>'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': '/path/to/SimpleClass.model'}),XML2Ant.get_tool() | SimpleClass2SimpleRDBMS.get_tool(),[],"[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}, {'api_name': 'SimpleClass2SimpleRDBMS.get_tool', 'arguments': ''}]",2025-03-04T14:13:49.119190
KM3 model ./atl_zoo/KM32EMF/Sample-KM3.xmi should transform into EMF and its configuration compared to that of transforming a KM3 into a DSL,multi_tool,2,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.get_tool(),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]","[{'api_name': 'KM32DSL.get_tool', 'arguments': ''}]",2025-03-04T14:13:54.628555
Transform the KM3 model ./atl_zoo/KM32EMF/Sample-KM3.xmi to EMF then compare the configurations of the transformation that transforms a KM3 into a DSL,multi_tool,2,1.0,2,2,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | list_transformation_KM32DSL_tool({}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.get_tool(),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}, {'tool_name': 'list_transformation_KM32DSL_tool', 'arguments': {}}]",[],2025-03-04T14:14:00.336226
"After transforming the KM3 model ./atl_zoo/KM32EMF/Sample-KM3.xmi to EMF, compare the configurations of the transformation that transforms a KM3 into a DSL",multi_tool,2,0.0,2,0,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.get_tool(),[],"[{'api_name': 'KM32EMF.apply_tool', 'arguments': './atl_zoo/KM32EMF/Sample-KM3.xmi'}, {'api_name': 'KM32DSL.get_tool', 'arguments': ''}]",2025-03-04T14:14:07.179165
The first step is to transform the KM3 model ./atl_zoo/KM32EMF/Sample-KM3.xmi to EMF then compare the configurations of the transformation that transforms a KM3 into a DSL,multi_tool,2,1.0,2,2,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | list_transformation_KM32DSL_tool({}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.get_tool(),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}, {'tool_name': 'list_transformation_KM32DSL_tool', 'arguments': {}}]",[],2025-03-04T14:14:13.728745
Transforming the KM3 model ./atl_zoo/KM32EMF/Sample-KM3.xmi to EMF results in a new configuration then compare it with the original transformation that transforms a KM3 into a DSL,multi_tool,2,1.0,2,2,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | list_transformation_KM32DSL_tool({}) | apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.get_tool(),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}, {'tool_name': 'list_transformation_KM32DSL_tool', 'arguments': {}}]",[],2025-03-04T14:14:19.778389
"Compare the configurations of the transformations applied to the KM3 model ./atl_zoo/KM32EMF/Sample-KM3.xmi, which was transformed from KM3 to EMF and also KM3 to DSL",multi_tool,2,0.0,2,0,list_transformation_KM32DSL_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | list_transformation_KM32OWL_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.get_tool(),[],"[{'api_name': 'KM32EMF.apply_tool', 'arguments': './atl_zoo/KM32EMF/Sample-KM3.xmi'}, {'api_name': 'KM32DSL.get_tool', 'arguments': ''}]",2025-03-04T14:14:27.751829
The new configuration obtained from transforming the KM3 model ./atl_zoo/KM32EMF/Sample-KM3.xmi to EMF now needs an additional step: apply the transformation that transforms a KM3 into a DSL,multi_tool,2,0.0,2,0,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.get_tool(),[],"[{'api_name': 'KM32EMF.apply_tool', 'arguments': './atl_zoo/KM32EMF/Sample-KM3.xmi'}, {'api_name': 'KM32DSL.get_tool', 'arguments': ''}]",2025-03-04T14:14:32.151759
KM3 model ./atl_zoo/KM32EMF/Sample-KM3.xmi transform into EMF then compare its configurations with those of a transformation that turns KM3 into DSL.,multi_tool,2,1.0,2,2,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32DSL_transformation_tool({}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | list_transformation_KM32DSL_tool({}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | list_transformation_KM32DSL_tool({}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.get_tool(),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}, {'tool_name': 'list_transformation_KM32DSL_tool', 'arguments': {}}]",[],2025-03-04T14:14:39.804900
PNML model ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi should transform into XML and its configuration compared to that of transforming a Mantis into a XML,multi_tool,2,0.0,2,0,No tools called,PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.get_tool(),[],"[{'api_name': 'PNML2XML.apply_tool', 'arguments': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}, {'api_name': 'Mantis2XML.get_tool', 'arguments': ''}]",2025-03-04T14:14:43.713193
Transform the XML model ./atl_zoo/Ant2Maven/example/build1.xmi to Ant then compare the configurations of the transformation that transforms a SimpleClass into a SimpleRDBMS,multi_tool,2,1.0,2,2,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | list_transformation_SimpleClass2SimpleRDBMS_tool({}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.get_tool(),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}, {'tool_name': 'list_transformation_SimpleClass2SimpleRDBMS_tool', 'arguments': {}}]",[],2025-03-04T14:14:51.713671
"After transforming the PNML model ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi to XML, compare the configurations of the transformation that transforms a Mantis into a XML",multi_tool,2,1.0,2,2,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | list_transformation_Mantis2XML_tool({}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.get_tool(),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}, {'tool_name': 'list_transformation_Mantis2XML_tool', 'arguments': {}}]",[],2025-03-04T14:14:58.044135
The first step is to transform the XML model ./atl_zoo/Ant2Maven/example/build1.xmi to Ant then compare the configurations of the transformation that transforms a SimpleClass into a SimpleRDBMS,multi_tool,2,1.0,2,2,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | list_transformation_SimpleClass2SimpleRDBMS_tool({}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.get_tool(),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}, {'tool_name': 'list_transformation_SimpleClass2SimpleRDBMS_tool', 'arguments': {}}]",[],2025-03-04T14:15:04.252866
Transforming the PNML model ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi to XML results in a new configuration then compare it with the original transformation that transforms a Mantis into a XML,multi_tool,2,1.0,2,2,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/Mantis.xmi'}) | list_transformation_Mantis2XML_tool({}) | list_transformation_PNML2XML_tool({}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.get_tool(),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}, {'tool_name': 'list_transformation_Mantis2XML_tool', 'arguments': {}}]",[],2025-03-04T14:15:13.263438
"Compare the configurations of the transformations applied to the XML model ./atl_zoo/Ant2Maven/example/build1.xmi, which was transformed from XML to Ant and also SimpleClass to SimpleRDBMS",multi_tool,2,0.0,2,0,list_transformation_XML2XSLT_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.get_tool(),[],"[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}, {'api_name': 'SimpleClass2SimpleRDBMS.get_tool', 'arguments': ''}]",2025-03-04T14:15:19.151271
The new configuration obtained from transforming the PNML model ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi to XML now needs an additional step: apply the transformation that transforms a Mantis into a XML,multi_tool,2,0.5,2,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.get_tool(),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]","[{'api_name': 'Mantis2XML.get_tool', 'arguments': ''}]",2025-03-04T14:15:29.840770
XML model ./atl_zoo/Ant2Maven/example/build1.xmi transform into Ant then compare its configurations with those of a transformation that turns SimpleClass into SimpleRDBMS.,multi_tool,2,1.0,2,2,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | list_transformation_SimpleClass2SimpleRDBMS_tool({}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.get_tool(),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}, {'tool_name': 'list_transformation_SimpleClass2SimpleRDBMS_tool', 'arguments': {}}]",[],2025-03-04T14:15:45.861735
PNML model ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi should transform into XML and its configuration compared to that of transforming a Mantis into a XML,multi_tool,2,0.0,2,0,No tools called,PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.get_tool(),[],"[{'api_name': 'PNML2XML.apply_tool', 'arguments': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}, {'api_name': 'Mantis2XML.get_tool', 'arguments': ''}]",2025-03-04T14:15:49.527534
Transform the XML model ./atl_zoo/Ant2Maven/example/build1.xmi to Ant then compare the configurations of the transformation that transforms a SimpleClass into a SimpleRDBMS,multi_tool,2,1.0,2,2,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | list_transformation_SimpleClass2SimpleRDBMS_tool({}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.get_tool(),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}, {'tool_name': 'list_transformation_SimpleClass2SimpleRDBMS_tool', 'arguments': {}}]",[],2025-03-04T14:15:58.999604
"After transforming the PNML model ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi to XML, compare the configurations of the transformation that transforms a Mantis into a XML",multi_tool,2,1.0,2,2,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | list_transformation_Mantis2XML_tool({}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.get_tool(),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}, {'tool_name': 'list_transformation_Mantis2XML_tool', 'arguments': {}}]",[],2025-03-04T14:16:04.578087
The first step is to transform the XML model ./atl_zoo/Ant2Maven/example/build1.xmi to Ant then compare the configurations of the transformation that transforms a SimpleClass into a SimpleRDBMS,multi_tool,2,1.0,2,2,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | list_transformation_SimpleClass2SimpleRDBMS_tool({}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.get_tool(),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}, {'tool_name': 'list_transformation_SimpleClass2SimpleRDBMS_tool', 'arguments': {}}]",[],2025-03-04T14:16:11.058396
Transforming the PNML model ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi to XML results in a new configuration then compare it with the original transformation that transforms a Mantis into a XML,multi_tool,2,0.5,2,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/Mantis.xmi'}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/Mantis.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.get_tool(),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]","[{'api_name': 'Mantis2XML.get_tool', 'arguments': ''}]",2025-03-04T14:16:19.250034
"Compare the configurations of the transformations applied to the XML model ./atl_zoo/Ant2Maven/example/build1.xmi, which was transformed from XML to Ant and also SimpleClass to SimpleRDBMS",multi_tool,2,0.0,2,0,list_transformation_XML2XSLT_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | list_transformation_XML2XSLT_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.get_tool(),[],"[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}, {'api_name': 'SimpleClass2SimpleRDBMS.get_tool', 'arguments': ''}]",2025-03-04T14:16:26.210931
The new configuration obtained from transforming the PNML model ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi to XML now needs an additional step: apply the transformation that transforms a Mantis into a XML,multi_tool,2,0.5,2,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_PNML2XSLT_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.get_tool(),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]","[{'api_name': 'Mantis2XML.get_tool', 'arguments': ''}]",2025-03-04T14:16:31.926523
XML model ./atl_zoo/Ant2Maven/example/build1.xmi transform into Ant then compare its configurations with those of a transformation that turns SimpleClass into SimpleRDBMS.,multi_tool,2,0.0,2,0,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.get_tool(),[],"[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}, {'api_name': 'SimpleClass2SimpleRDBMS.get_tool', 'arguments': ''}]",2025-03-04T14:16:39.484183
KM3 model ./atl_zoo/KM32EMF/Sample-KM3.xmi should transform into EMF and its configuration compared to that of transforming a KM3 into a DSL,multi_tool,2,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.get_tool(),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]","[{'api_name': 'KM32DSL.get_tool', 'arguments': ''}]",2025-03-04T14:16:46.938261
Transform the PNML model ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi to XML then compare the configurations of the transformation that transforms a Mantis into a XML,multi_tool,2,1.0,2,2,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | list_transformation_Mantis2XML_tool({}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.get_tool(),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}, {'tool_name': 'list_transformation_Mantis2XML_tool', 'arguments': {}}]",[],2025-03-04T14:16:52.976359
"After transforming the XML model ./atl_zoo/Ant2Maven/example/build1.xmi to Ant, compare the configurations of the transformation that transforms a SimpleClass into a SimpleRDBMS",multi_tool,2,1.0,2,2,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | list_transformation_SimpleClass2SimpleRDBMS_tool({}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.get_tool(),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}, {'tool_name': 'list_transformation_SimpleClass2SimpleRDBMS_tool', 'arguments': {}}]",[],2025-03-04T14:17:02.753137
The first step is to transform the KM3 model ./atl_zoo/KM32EMF/Sample-KM3.xmi to EMF then compare the configurations of the transformation that transforms a KM3 into a DSL,multi_tool,2,1.0,2,2,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | list_transformation_KM32DSL_tool({}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.get_tool(),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}, {'tool_name': 'list_transformation_KM32DSL_tool', 'arguments': {}}]",[],2025-03-04T14:17:08.518909
Transforming the PNML model ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi to XML results in a new configuration then compare it with the original transformation that transforms a Mantis into a XML,multi_tool,2,0.5,2,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/Mantis.xmi'}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/Mantis.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.get_tool(),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]","[{'api_name': 'Mantis2XML.get_tool', 'arguments': ''}]",2025-03-04T14:17:20.443753
"Compare the configurations of the transformations applied to the XML model ./atl_zoo/Ant2Maven/example/build1.xmi, which was transformed from XML to Ant and also SimpleClass to SimpleRDBMS",multi_tool,2,0.0,2,0,list_transformation_PNML2XML_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_KM32OWL_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | list_transformation_SimpleClass2SimpleRDBMS_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.get_tool(),[],"[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}, {'api_name': 'SimpleClass2SimpleRDBMS.get_tool', 'arguments': ''}]",2025-03-04T14:17:24.757426
The new configuration obtained from transforming the KM3 model ./atl_zoo/KM32EMF/Sample-KM3.xmi to EMF now needs an additional step: apply the transformation that transforms a KM3 into a DSL,multi_tool,2,0.5,2,1,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | list_transformation_KM32DSL_tool({}) | list_transformation_KM32OWL_tool({}) | apply_KM32OWL_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.get_tool(),"[{'tool_name': 'list_transformation_KM32DSL_tool', 'arguments': {}}]","[{'api_name': 'KM32EMF.apply_tool', 'arguments': './atl_zoo/KM32EMF/Sample-KM3.xmi'}]",2025-03-04T14:17:31.167188
PNML model ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi transform into XML then compare its configurations with those of a transformation that turns Mantis into XML.,multi_tool,2,0.0,2,0,No tools called,PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.get_tool(),[],"[{'api_name': 'PNML2XML.apply_tool', 'arguments': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}, {'api_name': 'Mantis2XML.get_tool', 'arguments': ''}]",2025-03-04T14:17:34.063065
XML model ./atl_zoo/Ant2Maven/example/build1.xmi should transform into Ant and its configuration compared to that of transforming a SimpleClass into a SimpleRDBMS,multi_tool,2,0.0,2,0,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.get_tool(),[],"[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}, {'api_name': 'SimpleClass2SimpleRDBMS.get_tool', 'arguments': ''}]",2025-03-04T14:17:42.912318
Transform the KM3 model ./atl_zoo/KM32EMF/Sample-KM3.xmi to EMF then compare the configurations of the transformation that transforms a KM3 into a DSL,multi_tool,2,1.0,2,2,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | list_transformation_KM32DSL_tool({}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.get_tool(),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}, {'tool_name': 'list_transformation_KM32DSL_tool', 'arguments': {}}]",[],2025-03-04T14:17:48.723911
"After transforming the PNML model ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi to XML, compare the configurations of the transformation that transforms a Mantis into a XML",multi_tool,2,1.0,2,2,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | list_transformation_Mantis2XML_tool({}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.get_tool(),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}, {'tool_name': 'list_transformation_Mantis2XML_tool', 'arguments': {}}]",[],2025-03-04T14:17:54.634478
The first step is to transform the XML model ./atl_zoo/Ant2Maven/example/build1.xmi to Ant then compare the configurations of the transformation that transforms a SimpleClass into a SimpleRDBMS,multi_tool,2,1.0,2,2,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | list_transformation_SimpleClass2SimpleRDBMS_tool({}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.get_tool(),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}, {'tool_name': 'list_transformation_SimpleClass2SimpleRDBMS_tool', 'arguments': {}}]",[],2025-03-04T14:17:59.940528
Transforming the KM3 model ./atl_zoo/KM32EMF/Sample-KM3.xmi to EMF results in a new configuration then compare it with the original transformation that transforms a KM3 into a DSL,multi_tool,2,1.0,2,2,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | list_transformation_KM32DSL_tool({}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.get_tool(),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}, {'tool_name': 'list_transformation_KM32DSL_tool', 'arguments': {}}]",[],2025-03-04T14:18:05.821330
"Compare the configurations of the transformations applied to the PNML model ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi, which was transformed from PNML to XML and also Mantis to XML",multi_tool,2,0.0,2,0,list_transformation_PNML2XML_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | list_transformation_Mantis2XML_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.get_tool(),[],"[{'api_name': 'PNML2XML.apply_tool', 'arguments': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}, {'api_name': 'Mantis2XML.get_tool', 'arguments': ''}]",2025-03-04T14:18:12.139900
The new configuration obtained from transforming the XML model ./atl_zoo/Ant2Maven/example/build1.xmi to Ant now needs an additional step: apply the transformation that transforms a SimpleClass into a SimpleRDBMS,multi_tool,2,0.0,2,0,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.get_tool(),[],"[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}, {'api_name': 'SimpleClass2SimpleRDBMS.get_tool', 'arguments': ''}]",2025-03-04T14:18:16.968311
KM3 model ./atl_zoo/KM32EMF/Sample-KM3.xmi transform into EMF then compare its configurations with those of a transformation that turns KM3 into DSL.,multi_tool,2,1.0,2,2,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32DSL_transformation_tool({}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | list_transformation_KM32DSL_tool({}) | list_transformation_KM32DSL_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.get_tool(),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}, {'tool_name': 'list_transformation_KM32DSL_tool', 'arguments': {}}]",[],2025-03-04T14:18:26.644825
PNML model ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi should transform into XML and its configuration compared to that of transforming a Mantis into a XML,multi_tool,2,0.0,2,0,No tools called,PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.get_tool(),[],"[{'api_name': 'PNML2XML.apply_tool', 'arguments': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}, {'api_name': 'Mantis2XML.get_tool', 'arguments': ''}]",2025-03-04T14:18:31.211966
Transform the XML model ./atl_zoo/Ant2Maven/example/build1.xmi to Ant then compare the configurations of the transformation that transforms a SimpleClass into a SimpleRDBMS,multi_tool,2,1.0,2,2,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | list_transformation_SimpleClass2SimpleRDBMS_tool({}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.get_tool(),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}, {'tool_name': 'list_transformation_SimpleClass2SimpleRDBMS_tool', 'arguments': {}}]",[],2025-03-04T14:18:38.672404
"After transforming the KM3 model ./atl_zoo/KM32EMF/Sample-KM3.xmi to EMF, compare the configurations of the transformation that transforms a KM3 into a DSL",multi_tool,2,0.0,2,0,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.get_tool(),[],"[{'api_name': 'KM32EMF.apply_tool', 'arguments': './atl_zoo/KM32EMF/Sample-KM3.xmi'}, {'api_name': 'KM32DSL.get_tool', 'arguments': ''}]",2025-03-04T14:18:44.407379
The first step is to transform the PNML model ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi to XML then compare the configurations of the transformation that transforms a Mantis into a XML,multi_tool,2,1.0,2,2,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | list_transformation_Mantis2XML_tool({}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.get_tool(),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}, {'tool_name': 'list_transformation_Mantis2XML_tool', 'arguments': {}}]",[],2025-03-04T14:18:51.172140
Transforming the XML model ./atl_zoo/Ant2Maven/example/build1.xmi to Ant results in a new configuration then compare it with the original transformation that transforms a SimpleClass into a SimpleRDBMS,multi_tool,2,0.5,2,1,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.get_tool(),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}]","[{'api_name': 'SimpleClass2SimpleRDBMS.get_tool', 'arguments': ''}]",2025-03-04T14:18:57.130141
"Compare the configurations of the transformations applied to the KM3 model ./atl_zoo/KM32EMF/Sample-KM3.xmi, which was transformed from KM3 to EMF and also KM3 to DSL",multi_tool,2,0.0,2,0,list_transformation_KM32DSL_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | list_transformation_KM32EMF_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.get_tool(),[],"[{'api_name': 'KM32EMF.apply_tool', 'arguments': './atl_zoo/KM32EMF/Sample-KM3.xmi'}, {'api_name': 'KM32DSL.get_tool', 'arguments': ''}]",2025-03-04T14:19:05.199431
The new configuration obtained from transforming the PNML model ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi to XML now needs an additional step: apply the transformation that transforms a Mantis into a XML,multi_tool,2,0.5,2,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.get_tool(),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]","[{'api_name': 'Mantis2XML.get_tool', 'arguments': ''}]",2025-03-04T14:19:12.123974
XML model ./atl_zoo/Ant2Maven/example/build1.xmi transform into Ant then compare its configurations with those of a transformation that turns SimpleClass into SimpleRDBMS.,multi_tool,2,0.5,2,1,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.get_tool(),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}]","[{'api_name': 'SimpleClass2SimpleRDBMS.get_tool', 'arguments': ''}]",2025-03-04T14:19:18.626601
KM3 model ./atl_zoo/KM32EMF/Sample-KM3.xmi should transform into EMF and its configuration compared to that of transforming a KM3 into a DSL,multi_tool,2,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.get_tool(),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]","[{'api_name': 'KM32DSL.get_tool', 'arguments': ''}]",2025-03-04T14:19:28.960808
Transform the PNML model ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi to XML then compare the configurations of the transformation that transforms a Mantis into a XML,multi_tool,2,1.0,2,2,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | list_transformation_Mantis2XML_tool({'input_str': ''}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.get_tool(),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}, {'tool_name': 'list_transformation_Mantis2XML_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T14:19:35.854852
Transform KM3 model at ./atl_zoo/KM32EMF/Sample-KM3.xmi to EMF then transform KM3 model at ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi to DSL,multi_tool,2,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:19:42.228954
"Transform KM3 model at ./atl_zoo/KM32EMF/Sample-KM3.xmi to EMF, followed by transforming the KM3 model at ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi to DSL",multi_tool,2,1.0,2,2,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}, {'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T14:19:47.880732
Convert the KM3 model at ./atl_zoo/KM32EMF/Sample-KM3.xmi to EMF and then transform the KM3 model at ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi to DSL,multi_tool,2,1.0,2,2,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}, {'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T14:19:54.088968
"After transforming the KM3 model at ./atl_zoo/KM32EMF/Sample-KM3.xmi to EMF, proceed with the task of transforming the KM3 model at ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi to DSL",multi_tool,2,1.0,2,2,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32DSL_tool({}) | apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32EMF_tool({}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | list_transformation_PNML2XML_tool({}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}, {'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T14:20:02.700988
Transform the KM3 model at ./atl_zoo/KM32EMF/Sample-KM3.xmi to EMF and subsequently transform the KM3 model at ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi to DSL,multi_tool,2,1.0,2,2,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}, {'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T14:20:09.153981
Transform the KM3 model at ./atl_zoo/KM32EMF/Sample-KM3.xmi to EMF and simultaneously transform the KM3 model at ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi to DSL,multi_tool,2,1.0,2,2,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}, {'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T14:20:15.884677
"Apply your transformation technique to the KM3 model at ./atl_zoo/KM32EMF/Sample-KM3.xmi to get EMF, then transform the KM3 model at ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi to DSL",multi_tool,2,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_SimpleClass2DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32EMF_tool({'input_str': ''}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:20:26.186809
Transform the KM3 model at ./atl_zoo/KM32EMF/Sample-KM3.xmi to EMF and continue on with transforming the KM3 model at ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi to DSL,multi_tool,2,1.0,2,2,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}, {'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T14:20:33.961947
Transform XML model at ./atl_zoo/Ant2Maven/example/build1.xmi to Ant then transform SimpleClass model at ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi to SimpleRDBMS,multi_tool,2,1.0,2,2,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}, {'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T14:20:43.823792
"Transform PNML model at ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi to XML, followed by transforming the Mantis model at ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi to XML",multi_tool,2,1.0,2,2,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}, {'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T14:20:50.858775
Convert the XML model at ./atl_zoo/Ant2Maven/example/build1.xmi to Ant and then transform the SimpleClass model at ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi to SimpleRDBMS,multi_tool,2,1.0,2,2,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}, {'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T14:21:03.324259
"After transforming the PNML model at ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi to XML, proceed with the task of transforming the Mantis model at ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi to XML",multi_tool,2,1.0,2,2,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | list_transformation_PNML2XML_tool({}) | list_transformation_Mantis2XML_tool({}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}, {'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T14:21:10.825380
Transform the XML model at ./atl_zoo/Ant2Maven/example/build1.xmi to Ant and subsequently transform the SimpleClass model at ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi to SimpleRDBMS,multi_tool,2,1.0,2,2,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}, {'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T14:21:16.205086
Transform the PNML model at ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi to XML and simultaneously transform the Mantis model at ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi to XML,multi_tool,2,1.0,2,2,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}, {'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T14:21:21.468446
"Apply your transformation technique to the XML model at ./atl_zoo/Ant2Maven/example/build1.xmi to get Ant, then transform the SimpleClass model at ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi to SimpleRDBMS",multi_tool,2,1.0,2,2,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}, {'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T14:21:28.924321
Transform the PNML model at ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi to XML and continue on with transforming the Mantis model at ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi to XML,multi_tool,2,1.0,2,2,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}, {'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T14:21:35.546157
Transform XML model at ./atl_zoo/Ant2Maven/example/build1.xmi to Ant then transform SimpleClass model at ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi to SimpleRDBMS,multi_tool,2,1.0,2,2,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}, {'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T14:21:48.694269
"Transform PNML model at ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi to XML, followed by transforming the Mantis model at ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi to XML",multi_tool,2,1.0,2,2,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}, {'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T14:21:55.469131
Convert the XML model at ./atl_zoo/Ant2Maven/example/build1.xmi to Ant and then transform the SimpleClass model at ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi to SimpleRDBMS,multi_tool,2,1.0,2,2,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}, {'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T14:22:07.606280
"After transforming the PNML model at ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi to XML, proceed with the task of transforming the Mantis model at ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi to XML",multi_tool,2,1.0,2,2,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}, {'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T14:22:13.019731
Transform the XML model at ./atl_zoo/Ant2Maven/example/build1.xmi to Ant and subsequently transform the SimpleClass model at ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi to SimpleRDBMS,multi_tool,2,1.0,2,2,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}, {'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T14:22:18.924236
Transform the PNML model at ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi to XML and simultaneously transform the Mantis model at ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi to XML,multi_tool,2,1.0,2,2,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}, {'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T14:22:25.266414
"Apply your transformation technique to the XML model at ./atl_zoo/Ant2Maven/example/build1.xmi to get Ant, then transform the SimpleClass model at ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi to SimpleRDBMS",multi_tool,2,1.0,2,2,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}, {'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T14:22:33.872055
Transform the PNML model at ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi to XML and continue on with transforming the Mantis model at ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi to XML,multi_tool,2,1.0,2,2,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}, {'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T14:22:39.823665
Transform XML model at ./atl_zoo/Ant2Maven/example/build1.xmi to Ant then transform SimpleClass model at ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi to SimpleRDBMS,multi_tool,2,1.0,2,2,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}, {'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T14:22:47.616038
"Transform KM3 model at ./atl_zoo/KM32EMF/Sample-KM3.xmi to EMF, followed by transforming the KM3 model at ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi to DSL",multi_tool,2,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | apply_KM32OWL_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32OWL_tool({}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/KM3Bridge/MetamodelBridge/Models/SimpleExample/KM3MM-SimpleExample.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:23:02.052962
Convert the PNML model at ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi to XML and then transform the Mantis model at ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi to XML,multi_tool,2,1.0,2,2,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}, {'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T14:23:09.883116
"After transforming the XML model at ./atl_zoo/Ant2Maven/example/build1.xmi to Ant, proceed with the task of transforming the SimpleClass model at ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi to SimpleRDBMS",multi_tool,2,1.0,2,2,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}, {'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T14:23:16.747744
Transform the KM3 model at ./atl_zoo/KM32EMF/Sample-KM3.xmi to EMF and subsequently transform the KM3 model at ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi to DSL,multi_tool,2,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32EMF_tool({}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32EMF_tool({}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:23:34.211280
Transform the PNML model at ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi to XML and simultaneously transform the Mantis model at ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi to XML,multi_tool,2,1.0,2,2,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}, {'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T14:23:39.805107
"Apply your transformation technique to the XML model at ./atl_zoo/Ant2Maven/example/build1.xmi to get Ant, then transform the SimpleClass model at ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi to SimpleRDBMS",multi_tool,2,1.0,2,2,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}, {'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T14:23:46.249905
Transform the KM3 model at ./atl_zoo/KM32EMF/Sample-KM3.xmi to EMF and continue on with transforming the KM3 model at ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi to DSL,multi_tool,2,1.0,2,2,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}, {'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T14:23:55.919963
Transform PNML model at ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi to XML then transform Mantis model at ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi to XML,multi_tool,2,1.0,2,2,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}, {'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T14:24:01.643625
"Transform XML model at ./atl_zoo/Ant2Maven/example/build1.xmi to Ant, followed by transforming the SimpleClass model at ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi to SimpleRDBMS",multi_tool,2,1.0,2,2,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}, {'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T14:24:10.755049
Convert the KM3 model at ./atl_zoo/KM32EMF/Sample-KM3.xmi to EMF and then transform the KM3 model at ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi to DSL,multi_tool,2,1.0,2,2,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}, {'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T14:24:16.882097
"After transforming the PNML model at ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi to XML, proceed with the task of transforming the Mantis model at ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi to XML",multi_tool,2,1.0,2,2,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | list_transformation_PNML2XML_tool({}) | list_transformation_Mantis2XML_tool({}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}, {'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T14:24:24.208170
Transform the XML model at ./atl_zoo/Ant2Maven/example/build1.xmi to Ant and subsequently transform the SimpleClass model at ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi to SimpleRDBMS,multi_tool,2,1.0,2,2,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}, {'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T14:24:30.116242
Transform the KM3 model at ./atl_zoo/KM32EMF/Sample-KM3.xmi to EMF and simultaneously transform the KM3 model at ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi to DSL,multi_tool,2,1.0,2,2,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}, {'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T14:24:36.625456
"Apply your transformation technique to the PNML model at ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi to get XML, then transform the Mantis model at ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi to XML",multi_tool,2,1.0,2,2,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}, {'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T14:24:42.679347
Transform the XML model at ./atl_zoo/Ant2Maven/example/build1.xmi to Ant and continue on with transforming the SimpleClass model at ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi to SimpleRDBMS,multi_tool,2,1.0,2,2,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}, {'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T14:24:51.075829
Transform KM3 model at ./atl_zoo/KM32EMF/Sample-KM3.xmi to EMF then transform KM3 model at ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi to DSL,multi_tool,2,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:25:00.945464
"Transform PNML model at ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi to XML, followed by transforming the Mantis model at ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi to XML",multi_tool,2,1.0,2,2,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}, {'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T14:25:06.692150
Convert the XML model at ./atl_zoo/Ant2Maven/example/build1.xmi to Ant and then transform the SimpleClass model at ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi to SimpleRDBMS,multi_tool,2,1.0,2,2,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}, {'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T14:25:18.332995
"After transforming the KM3 model at ./atl_zoo/KM32EMF/Sample-KM3.xmi to EMF, proceed with the task of transforming the KM3 model at ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi to DSL",multi_tool,2,1.0,2,2,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32DSL_tool({}) | apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32EMF_tool({}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | list_transformation_PNML2XML_tool({}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}, {'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T14:25:30.011896
Transform the PNML model at ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi to XML and subsequently transform the Mantis model at ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi to XML,multi_tool,2,0.0,2,0,No tools called,PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),[],"[{'api_name': 'PNML2XML.apply_tool', 'arguments': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}, {'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T14:25:32.792977
Transform the XML model at ./atl_zoo/Ant2Maven/example/build1.xmi to Ant and simultaneously transform the SimpleClass model at ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi to SimpleRDBMS,multi_tool,2,0.5,2,1,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]","[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}]",2025-03-04T14:25:45.226080
"Apply your transformation technique to the KM3 model at ./atl_zoo/KM32EMF/Sample-KM3.xmi to get EMF, then transform the KM3 model at ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi to DSL",multi_tool,2,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_SimpleClass2DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:25:49.691776
Transform the PNML model at ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi to XML and continue on with transforming the Mantis model at ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi to XML,multi_tool,2,1.0,2,2,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}, {'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T14:25:55.855414
Transform XML model at ./atl_zoo/Ant2Maven/example/build1.xmi to Ant then transform SimpleClass model at ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi to SimpleRDBMS,multi_tool,2,1.0,2,2,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}, {'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T14:26:04.539739
"Transform KM3 model at ./atl_zoo/KM32EMF/Sample-KM3.xmi to EMF, followed by transforming the KM3 model at ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi to DSL",multi_tool,2,1.0,2,2,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}, {'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T14:26:09.445801
"Apply your insights to this model ./atl_zoo/KM32EMF/Sample-KM3.xmi and create the EMF model, then transform this model ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi to DSL model.",multi_tool,3,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | list_transformation_DSL2XML_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32EMF_tool({'input_str': ''}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:26:16.162283
"Transform this model ./atl_zoo/KM32EMF/Sample-KM3.xmi into the new metamodel for EMF, then apply the changes to transform this model ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi into the new metamodel for DSL.",multi_tool,3,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_PNML2XMLTransformationTool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:26:24.783223
"Apply transformations to this model ./atl_zoo/KM32EMF/Sample-KM3.xmi and create a new metamodel named EMF, followed by transforming the model at ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi into its corresponding new metamodel DSL.",multi_tool,3,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32EMF_tool({}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | list_transformation_Families2Persons_tool({}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:26:38.023638
"Once you have applied the necessary changes, transform the original model ./atl_zoo/KM32EMF/Sample-KM3.xmi into a new metamodel for EMF, then immediately proceed to apply similar changes to the other model ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi and create a new metamodel DSL.",multi_tool,3,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:26:46.056136
"The first step involves converting this model ./atl_zoo/KM32EMF/Sample-KM3.xmi to the desired EMF format, followed by taking the second model ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi and transforming it into its corresponding DSL model.",multi_tool,3,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_DSLBridge_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32EMF_tool({}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:26:53.801623
"Create a new metamodel for EMF from the transformed model ./atl_zoo/KM32EMF/Sample-KM3.xmi, then apply the same transformation process to the other model at ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi in order to produce a new metamodel named DSL.",multi_tool,3,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32OWL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32OWL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32OWL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:27:07.399140
"Transform this original model ./atl_zoo/KM32EMF/Sample-KM3.xmi into its new form as the metamodel EMF, and afterwards apply similar transformations to transform the other model ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi into its corresponding new metamodel DSL.",multi_tool,3,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_DSL2EMF_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32EMF_tool({}) | apply_KM32EMF_transformation_tool({}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:27:15.394235
"Apply changes to this model ./atl_zoo/KM32EMF/Sample-KM3.xmi in order to create a new metamodel for EMF, and then apply transformations to the second model at ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi with the same effect of producing a new metamodel named DSL.",multi_tool,3,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32EMF_tool({}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | list_transformation_Families2Persons_tool({}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:27:28.350325
"Now that you have completed the initial transformation for the first model ./atl_zoo/KM32EMF/Sample-KM3.xmi into the metamodel EMF, transform this model ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi into its corresponding DSL form using the same applied method.",multi_tool,3,0.0,2,0,apply_KM32OWL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | apply_KM32OWL_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | list_transformation_KM32OWL_tool({}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),[],"[{'api_name': 'KM32EMF.apply_tool', 'arguments': './atl_zoo/KM32EMF/Sample-KM3.xmi'}, {'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:27:37.421474
"In order to complete the process of transformation, apply changes to this model ./atl_zoo/KM32EMF/Sample-KM3.xmi and create a new metamodel named EMF, followed by taking the other model at ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi and applying similar transformations in order to produce a new metamodel named DSL.",multi_tool,3,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:27:45.673007
"Proceed with converting this original model ./atl_zoo/KM32EMF/Sample-KM3.xmi into its new form as the metamodel EMF, then apply transformations to transform the other model ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi into its corresponding DSL.",multi_tool,3,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:27:53.523083
"Apply changes to both models at once and create a new metamodel for EMF from the first transformed model ./atl_zoo/KM32EMF/Sample-KM3.xmi, followed by taking the second model at ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi in order to produce a new metamodel named DSL.",multi_tool,3,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:28:00.321638
"Now that you have completed your initial transformation of this original model ./atl_zoo/KM32EMF/Sample-KM3.xmi into the new EMF form, apply similar transformations to transform this other model ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi into its corresponding DSL form.",multi_tool,3,0.0,2,0,apply_KM32OWL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | apply_KM32OWL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | apply_KM32OWL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),[],"[{'api_name': 'KM32EMF.apply_tool', 'arguments': './atl_zoo/KM32EMF/Sample-KM3.xmi'}, {'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:28:07.909148
"Transform this model ./atl_zoo/KM32EMF/Sample-KM3.xmi to EMF model after transforming that model, then transform this model ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi to DSL model once you've finished.",multi_tool,3,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_PNML2DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:28:13.500522
"Once you've completed your work on both models, apply the transformations: take the first model ./atl_zoo/KM32EMF/Sample-KM3.xmi and create a new EMF model. Next, do the same with the second model ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi, turning it into a brand-new DSL model as soon as possible.",multi_tool,3,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_DSLBridge_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32EMF_tool({}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:28:23.407262
"Apply the necessary changes to your original two models; begin by transforming this model ./atl_zoo/KM32EMF/Sample-KM3.xmi into a completely different version EMF model, then transform that process to this other model ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi and finish with a new version of it DSL model.",multi_tool,3,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_DSL2EMF_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | apply_DSL2KM3_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:28:30.796902
"Now that you're ready, apply the change: take the first path ./atl_zoo/KM32EMF/Sample-KM3.xmi model and convert it into a fresh EMF model. Just as quickly, move on to transforming this second model ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi into an entirely new DSL model.",multi_tool,3,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_DSL2EMF_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:28:41.548972
"Take a moment to get everything sorted; start by making the switch from this old model ./atl_zoo/KM32EMF/Sample-KM3.xmi to a shiny new EMF version. Then, take the second path model ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi and instantly turn it into its updated form DSL model as part of your larger plan.",multi_tool,3,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_DSL2EMF_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:28:51.705010
"Transform both paths first; apply these changes to the original models: begin with this model ./atl_zoo/KM32EMF/Sample-KM3.xmi and create a clean EMF model from it. While working, don't forget about this other model ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi that needs some work too - give it a complete makeover into its updated version DSL.",multi_tool,3,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_DSLBridge_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32EMF_tool({}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:29:00.333614
"You're almost there; all you need to do now is finalize the changes: start by taking the initial path ./atl_zoo/KM32EMF/Sample-KM3.xmi and reformatting it as a new EMF model. Don't wait for anything else, just make that happen. Next up, transform this other path ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi model into its newly upgraded form DSL.",multi_tool,3,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_DSLBridge_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:29:06.825796
"The process is almost complete; what's left to do now? Begin by taking the first model ./atl_zoo/KM32EMF/Sample-KM3.xmi and turning it into a revamped EMF version after doing that same thing for the second model ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi, which will be transformed into an entirely new DSL model as soon as you're done.",multi_tool,3,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_DSL2EMF_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:29:15.313666
Apply your work on both sides; take the original path ./atl_zoo/KM32EMF/Sample-KM3.xmi and convert it to its updated form EMF first. Don't stop there - immediately move on to working with the second model ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi and finish by turning it into a full-fledged new version DSL.,multi_tool,3,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_DSL2EMF_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | apply_DSL_to_EMF_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:29:24.594408
"Your transformation plan is coming together; now that you've got everything set up, apply these changes to your original models: transform this model ./atl_zoo/KM32EMF/Sample-KM3.xmi into its updated form EMF after getting the first part done. Follow that up by turning this second path model ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi into a completely new version of DSL.",multi_tool,3,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_DSL2EMF_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:29:35.328749
"This is it - all you need to do now is complete the final step: begin with this initial model ./atl_zoo/KM32EMF/Sample-KM3.xmi and take it through to its transformed state as EMF. While doing that, don't forget about the second path model ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi that needs a makeover too - have it turned into its fully updated form DSL.",multi_tool,3,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_DSLBridge_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32EMF_tool({}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:29:43.006258
"Now you're getting close; what's left is for you to finalize this process: take the original path ./atl_zoo/KM32EMF/Sample-KM3.xmi and reformat it as a new EMF version. Right after that, don't wait any longer - transform the other model ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi into its final form DSL.",multi_tool,3,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32EMF_tool({}) | apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | list_transformation_Families2Persons_tool({}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:29:53.313593
"Take your time; start by applying these changes to both paths: transform this model ./atl_zoo/KM32EMF/Sample-KM3.xmi into its updated version EMF first and foremost. While working on that part of the job, turn your attention to this second path model ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi and complete it as soon as you can with a full-fledged new version DSL.",multi_tool,3,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_DSL2EMF_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:30:03.267382
"This is the last step; make sure everything is taken care of: start by transforming this initial path ./atl_zoo/KM32EMF/Sample-KM3.xmi into its completely revamped form EMF. At the same time, transform the second model ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi into its newly upgraded state as DSL - that's it for now.",multi_tool,3,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_DSLBridge_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32EMF_tool({}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:30:11.725955
"Make one final change; begin with this first model ./atl_zoo/KM32EMF/Sample-KM3.xmi and give it a fresh new look as EMF after you've completed the initial task. Right next to that, work on transforming this second path model ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi into its full-up updated form DSL - all done.",multi_tool,3,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_DSL2EMF_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:30:20.596408
"Finally, complete your work; begin with this original model ./atl_zoo/KM32EMF/Sample-KM3.xmi and turn it over to its new EMF version as soon as possible. Then immediately move forward by taking this second model ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi in hand and give it the makeover of a brand-new DSL version - all set.",multi_tool,3,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_DSL2EMF_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:30:27.229650
"Your final step; right now is when you finalize your original path models: start with this initial model ./atl_zoo/KM32EMF/Sample-KM3.xmi, transform it into its updated state as EMF, then move on to giving the second model ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi a complete new makeover and finishing it off with an entirely new version of DSL.",multi_tool,3,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_DSL2EMF_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | apply_DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:30:34.155301
"Once all is said and done; your last task now is simply to finalize this process: take the first path model ./atl_zoo/KM32EMF/Sample-KM3.xmi and give it its newly formatted state as EMF. Right after that, make sure you transform the second path model ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi into its final form of DSL - that's all there is.",multi_tool,3,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_DSLBridge_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32EMF_tool({}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:30:43.209231
"You've got everything; last but not least, apply these changes to your original models: start with this initial model ./atl_zoo/KM32EMF/Sample-KM3.xmi and give it a new EMF version after doing the same thing for the second model ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi. That will turn it into an entirely new version of DSL - all complete.",multi_tool,3,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_DSL2EMF_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:30:49.662800
"Your last action; right now is when you wrap everything up: take this original path model ./atl_zoo/KM32EMF/Sample-KM3.xmi and convert it to its updated form EMF first off, then transform the second model ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi as well so that's a new DSL version for you.",multi_tool,3,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_DSL2EMF_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32EMF_tool({}) | apply_KM32EMF_transformation_tool({'__previous_input__': './KM3.ecore'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:30:59.352409
"Apply your insights to this model ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi and create the XML model, then transform this model ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi to XML model.",multi_tool,3,1.0,2,2,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}, {'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T14:31:10.126849
"Transform this model ./atl_zoo/Ant2Maven/example/build1.xmi into the new metamodel for Ant, then apply the changes to transform this model ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi into the new metamodel for SimpleRDBMS.",multi_tool,3,0.5,2,1,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | list_transformation_Ant2Maven_tool({}) | list_transformation_SimpleClass2SimpleRDBMS_tool({}) | apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]","[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}]",2025-03-04T14:31:25.773619
"Apply transformations to this model ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi and create a new metamodel named XML, followed by transforming the model at ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi into its corresponding new metamodel XML.",multi_tool,3,1.0,2,2,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}, {'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T14:31:33.004223
"Once you have applied the necessary changes, transform the original model ./atl_zoo/Ant2Maven/example/build1.xmi into a new metamodel for Ant, then immediately proceed to apply similar changes to the other model ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi and create a new metamodel SimpleRDBMS.",multi_tool,3,0.5,2,1,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | list_transformation_Ant2Maven_tool({}) | list_transformation_SimpleClass2SimpleRDBMS_tool({}) | apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]","[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}]",2025-03-04T14:31:45.270770
"The first step involves converting this model ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi to the desired XML format, followed by taking the second model ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi and transforming it into its corresponding XML model.",multi_tool,3,1.0,2,2,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}, {'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T14:31:50.252941
"Create a new metamodel for Ant from the transformed model ./atl_zoo/Ant2Maven/example/build1.xmi, then apply the same transformation process to the other model at ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi in order to produce a new metamodel named SimpleRDBMS.",multi_tool,3,0.5,2,1,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]","[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}]",2025-03-04T14:32:03.366245
"Transform this original model ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi into its new form as the metamodel XML, and afterwards apply similar transformations to transform the other model ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi into its corresponding new metamodel XML.",multi_tool,3,0.5,2,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_KM32OWL_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]","[{'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T14:32:10.143381
"Apply changes to this model ./atl_zoo/Ant2Maven/example/build1.xmi in order to create a new metamodel for Ant, and then apply transformations to the second model at ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi with the same effect of producing a new metamodel named SimpleRDBMS.",multi_tool,3,0.5,2,1,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | list_transformation_Ant2Maven_tool({}) | list_transformation_SimpleClass2SimpleRDBMS_tool({}) | apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]","[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}]",2025-03-04T14:32:23.102423
"Now that you have completed the initial transformation for the first model ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi into the metamodel XML, transform this model ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi into its corresponding XML form using the same applied method.",multi_tool,3,0.0,2,0,apply_KM32OWL_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_KM32OWL_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_KM32OWL_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),[],"[{'api_name': 'PNML2XML.apply_tool', 'arguments': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}, {'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T14:32:29.513038
"In order to complete the process of transformation, apply changes to this model ./atl_zoo/Ant2Maven/example/build1.xmi and create a new metamodel named Ant, followed by taking the other model at ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi and applying similar transformations in order to produce a new metamodel named SimpleRDBMS.",multi_tool,3,0.0,2,0,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | list_transformation_Ant2Maven_tool({}) | list_transformation_Families2Persons_tool({}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),[],"[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}, {'api_name': 'SimpleClass2SimpleRDBMS.apply_tool', 'arguments': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}]",2025-03-04T14:32:37.872088
"Proceed with converting this original model ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi into its new form as the metamodel XML, then apply transformations to transform the other model ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi into its corresponding XML.",multi_tool,3,0.5,2,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | list_transformation_PNML2XML_tool({}) | list_transformation_Families2Persons_tool({}) | apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]","[{'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T14:32:46.461651
"Apply changes to both models at once and create a new metamodel for Ant from the first transformed model ./atl_zoo/Ant2Maven/example/build1.xmi, followed by taking the second model at ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi in order to produce a new metamodel named SimpleRDBMS.",multi_tool,3,0.5,2,1,apply_KM32OWL_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | list_transformation_KM32OWL_tool({}) | list_transformation_SimpleClass2SimpleRDBMS_tool({}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]","[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}]",2025-03-04T14:32:55.209087
"Now that you have completed your initial transformation of this original model ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi into the new XML form, apply similar transformations to transform this other model ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi into its corresponding XML form.",multi_tool,3,0.0,2,0,apply_KM32OWL_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_KM32OWL_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_KM32OWL_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_KM32OWL_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),[],"[{'api_name': 'PNML2XML.apply_tool', 'arguments': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}, {'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T14:33:03.381012
"Transform this model ./atl_zoo/Ant2Maven/example/build1.xmi to Ant model after transforming that model, then transform this model ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi to SimpleRDBMS model once you've finished.",multi_tool,3,0.5,2,1,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]","[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}]",2025-03-04T14:33:10.508156
"Once you've completed your work on both models, apply the transformations: take the first model ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi and create a new XML model. Next, do the same with the second model ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi, turning it into a brand-new XML model as soon as possible.",multi_tool,3,0.5,2,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]","[{'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T14:33:22.013798
"Apply the necessary changes to your original two models; begin by transforming this model ./atl_zoo/Ant2Maven/example/build1.xmi into a completely different version Ant model, then transform that process to this other model ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi and finish with a new version of it SimpleRDBMS model.",multi_tool,3,0.0,2,0,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | apply_SimpleRDBMS_to_SimpleRDBMSTransformationTool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),[],"[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}, {'api_name': 'SimpleClass2SimpleRDBMS.apply_tool', 'arguments': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}]",2025-03-04T14:33:31.210617
"Now that you're ready, apply the change: take the first path ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi model and convert it into a fresh XML model. Just as quickly, move on to transforming this second model ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi into an entirely new XML model.",multi_tool,3,0.5,2,1,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_XML2PNML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | list_transformation_PNML2XML_tool({}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]","[{'api_name': 'PNML2XML.apply_tool', 'arguments': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}]",2025-03-04T14:33:41.070237
"Take a moment to get everything sorted; start by making the switch from this old model ./atl_zoo/Ant2Maven/example/build1.xmi to a shiny new Ant version. Then, take the second path model ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi and instantly turn it into its updated form SimpleRDBMS model as part of your larger plan.",multi_tool,3,0.0,2,0,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | list_transformation_Ant2Maven_tool({}) | list_transformation_Families2Persons_tool({}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),[],"[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}, {'api_name': 'SimpleClass2SimpleRDBMS.apply_tool', 'arguments': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}]",2025-03-04T14:33:49.631595
"Transform both paths first; apply these changes to the original models: begin with this model ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi and create a clean XML model from it. While working, don't forget about this other model ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi that needs some work too - give it a complete makeover into its updated version XML.",multi_tool,3,0.5,2,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | list_transformation_PNML2XML_tool({}) | list_transformation_Families2Persons_tool({}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]","[{'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T14:33:58.405335
"You're almost there; all you need to do now is finalize the changes: start by taking the initial path ./atl_zoo/Ant2Maven/example/build1.xmi and reformatting it as a new Ant model. Don't wait for anything else, just make that happen. Next up, transform this other path ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi model into its newly upgraded form SimpleRDBMS.",multi_tool,3,1.0,2,2,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}, {'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T14:34:04.445464
"The process is almost complete; what's left to do now? Begin by taking the first model ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi and turning it into a revamped XML version after doing that same thing for the second model ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi, which will be transformed into an entirely new XML model as soon as you're done.",multi_tool,3,0.5,2,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_MantisBTFile_to_XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]","[{'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T14:34:12.816768
Apply your work on both sides; take the original path ./atl_zoo/Ant2Maven/example/build1.xmi and convert it to its updated form Ant first. Don't stop there - immediately move on to working with the second model ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi and finish by turning it into a full-fledged new version SimpleRDBMS.,multi_tool,3,1.0,2,2,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | list_transformation_SimpleClass2SimpleRDBMS_tool({}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | list_transformation_SimpleClass2SimpleRDBMS_tool({}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}, {'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T14:34:22.220161
"Your transformation plan is coming together; now that you've got everything set up, apply these changes to your original models: transform this model ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi into its updated form XML after getting the first part done. Follow that up by turning this second path model ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi into a completely new version of XML.",multi_tool,3,0.5,2,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]","[{'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T14:34:35.965013
"This is it - all you need to do now is complete the final step: begin with this initial model ./atl_zoo/Ant2Maven/example/build1.xmi and take it through to its transformed state as Ant. While doing that, don't forget about the second path model ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi that needs a makeover too - have it turned into its fully updated form SimpleRDBMS.",multi_tool,3,0.0,2,0,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),[],"[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}, {'api_name': 'SimpleClass2SimpleRDBMS.apply_tool', 'arguments': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}]",2025-03-04T14:34:43.601978
"Now you're getting close; what's left is for you to finalize this process: take the original path ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi and reformat it as a new XML version. Right after that, don't wait any longer - transform the other model ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi into its final form XML.",multi_tool,3,0.0,2,0,apply_XML2PNML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_MantisBTFile_to_XMI_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),[],"[{'api_name': 'PNML2XML.apply_tool', 'arguments': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}, {'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T14:34:50.247334
"Take your time; start by applying these changes to both paths: transform this model ./atl_zoo/Ant2Maven/example/build1.xmi into its updated version Ant first and foremost. While working on that part of the job, turn your attention to this second path model ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi and complete it as soon as you can with a full-fledged new version SimpleRDBMS.",multi_tool,3,0.5,2,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_Maven2Ant_transformation_tool({'input_str': 'output_of_Ant2Maven_transformation'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]","[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}]",2025-03-04T14:35:04.334873
"This is the last step; make sure everything is taken care of: start by transforming this initial path ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi into its completely revamped form XML. At the same time, transform the second model ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi into its newly upgraded state as XML - that's it for now.",multi_tool,3,0.5,2,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_MantisBTFile_to_XMI_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]","[{'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T14:35:14.108550
"Make one final change; begin with this first model ./atl_zoo/Ant2Maven/example/build1.xmi and give it a fresh new look as Ant after you've completed the initial task. Right next to that, work on transforming this second path model ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi into its full-up updated form SimpleRDBMS - all done.",multi_tool,3,0.0,2,0,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),[],"[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}, {'api_name': 'SimpleClass2SimpleRDBMS.apply_tool', 'arguments': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}]",2025-03-04T14:35:27.088903
"Finally, complete your work; begin with this original model ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi and turn it over to its new XML version as soon as possible. Then immediately move forward by taking this second model ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi in hand and give it the makeover of a brand-new XML version - all set.",multi_tool,3,0.5,2,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_MantisBTFile_to_XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]","[{'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T14:35:32.663795
"Your final step; right now is when you finalize your original path models: start with this initial model ./atl_zoo/Ant2Maven/example/build1.xmi, transform it into its updated state as Ant, then move on to giving the second model ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi a complete new makeover and finishing it off with an entirely new version of SimpleRDBMS.",multi_tool,3,0.0,2,0,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | apply_SimpleRDBMS_to_SimpleRDBMS({}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),[],"[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}, {'api_name': 'SimpleClass2SimpleRDBMS.apply_tool', 'arguments': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}]",2025-03-04T14:35:38.805094
"Once all is said and done; your last task now is simply to finalize this process: take the first path model ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi and give it its newly formatted state as XML. Right after that, make sure you transform the second path model ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi into its final form of XML - that's all there is.",multi_tool,3,0.5,2,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_MantisBTFile_to_XMI_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]","[{'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T14:35:45.410681
"You've got everything; last but not least, apply these changes to your original models: start with this initial model ./atl_zoo/Ant2Maven/example/build1.xmi and give it a new Ant version after doing the same thing for the second model ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi. That will turn it into an entirely new version of SimpleRDBMS - all complete.",multi_tool,3,0.0,2,0,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | list_transformation_Ant2Maven_tool({}) | apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | list_transformation_Families2Persons_tool({}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),[],"[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}, {'api_name': 'SimpleClass2SimpleRDBMS.apply_tool', 'arguments': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}]",2025-03-04T14:35:59.207586
"Your last action; right now is when you wrap everything up: take this original path model ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi and convert it to its updated form XML first off, then transform the second model ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi as well so that's a new XML version for you.",multi_tool,3,0.0,2,0,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_XML2PNML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),[],"[{'api_name': 'PNML2XML.apply_tool', 'arguments': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}, {'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T14:36:06.280147
"Apply your insights to this model ./atl_zoo/Ant2Maven/example/build1.xmi and create the Ant model, then transform this model ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi to SimpleRDBMS model.",multi_tool,3,0.5,2,1,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]","[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}]",2025-03-04T14:36:14.529333
"Transform this model ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi into the new metamodel for XML, then apply the changes to transform this model ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi into the new metamodel for XML.",multi_tool,3,0.0,2,0,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),[],"[{'api_name': 'PNML2XML.apply_tool', 'arguments': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}, {'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T14:36:24.317954
"Apply transformations to this model ./atl_zoo/Ant2Maven/example/build1.xmi and create a new metamodel named Ant, followed by transforming the model at ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi into its corresponding new metamodel SimpleRDBMS.",multi_tool,3,0.5,2,1,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]","[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}]",2025-03-04T14:36:32.497203
"Once you have applied the necessary changes, transform the original model ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi into a new metamodel for XML, then immediately proceed to apply similar changes to the other model ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi and create a new metamodel XML.",multi_tool,3,0.0,2,0,apply_XML2PNML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_MantisBTFile_to_XMLOnlyTransformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),[],"[{'api_name': 'PNML2XML.apply_tool', 'arguments': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}, {'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T14:36:37.534011
"The first step involves converting this model ./atl_zoo/Ant2Maven/example/build1.xmi to the desired Ant format, followed by taking the second model ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi and transforming it into its corresponding SimpleRDBMS model.",multi_tool,3,1.0,2,2,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}, {'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T14:36:45.643186
"Create a new metamodel for XML from the transformed model ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi, then apply the same transformation process to the other model at ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi in order to produce a new metamodel named XML.",multi_tool,3,0.0,2,0,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | list_transformation_XML2XSLT_tool({}) | apply_XML2XSLT_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | list_transformation_Families2Persons_tool({}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),[],"[{'api_name': 'PNML2XML.apply_tool', 'arguments': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}, {'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T14:36:53.990291
"Transform this original model ./atl_zoo/Ant2Maven/example/build1.xmi into its new form as the metamodel Ant, and afterwards apply similar transformations to transform the other model ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi into its corresponding new metamodel SimpleRDBMS.",multi_tool,3,0.5,2,1,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]","[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}]",2025-03-04T14:37:00.960408
"Apply changes to this model ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi in order to create a new metamodel for XML, and then apply transformations to the second model at ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi with the same effect of producing a new metamodel named XML.",multi_tool,3,0.5,2,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | list_transformation_PNML2XML_tool({}) | list_transformation_Families2Persons_tool({}) | apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]","[{'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T14:37:09.159396
"Now that you have completed the initial transformation for the first model ./atl_zoo/Ant2Maven/example/build1.xmi into the metamodel Ant, transform this model ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi into its corresponding SimpleRDBMS form using the same applied method.",multi_tool,3,0.5,2,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]","[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}]",2025-03-04T14:37:17.310840
"In order to complete the process of transformation, apply changes to this model ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi and create a new metamodel named XML, followed by taking the other model at ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi and applying similar transformations in order to produce a new metamodel named XML.",multi_tool,3,0.5,2,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]","[{'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T14:37:24.189495
"Proceed with converting this original model ./atl_zoo/Ant2Maven/example/build1.xmi into its new form as the metamodel Ant, then apply transformations to transform the other model ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi into its corresponding SimpleRDBMS.",multi_tool,3,0.5,2,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]","[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}]",2025-03-04T14:37:30.641350
"Apply changes to both models at once and create a new metamodel for XML from the first transformed model ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi, followed by taking the second model at ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi in order to produce a new metamodel named XML.",multi_tool,3,0.0,2,0,apply_KM32OWL_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_KM32OWL_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_XML2KM3_transformation_tool({'input_str': 'http://example.org/KM3'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),[],"[{'api_name': 'PNML2XML.apply_tool', 'arguments': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}, {'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T14:37:46.618502
"Now that you have completed your initial transformation of this original model ./atl_zoo/Ant2Maven/example/build1.xmi into the new Ant form, apply similar transformations to transform this other model ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi into its corresponding SimpleRDBMS form.",multi_tool,3,0.5,2,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | list_transformation_SimpleClass2SimpleRDBMS_tool({}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]","[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}]",2025-03-04T14:37:51.387655
"Transform this model ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi to XML model after transforming that model, then transform this model ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi to XML model once you've finished.",multi_tool,3,1.0,2,2,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}, {'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T14:37:59.144240
"Once you've completed your work on both models, apply the transformations: take the first model ./atl_zoo/Ant2Maven/example/build1.xmi and create a new Ant model. Next, do the same with the second model ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi, turning it into a brand-new SimpleRDBMS model as soon as possible.",multi_tool,3,0.0,2,0,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),[],"[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}, {'api_name': 'SimpleClass2SimpleRDBMS.apply_tool', 'arguments': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}]",2025-03-04T14:38:07.013024
"Apply the necessary changes to your original two models; begin by transforming this model ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi into a completely different version XML model, then transform that process to this other model ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi and finish with a new version of it XML model.",multi_tool,3,0.5,2,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_KM32OWL_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_XML2XSLT_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | list_transformation_PNML2XML_tool({}) | apply_KM32OWL_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | list_transformation_XML2XSLT_tool({}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]","[{'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T14:38:16.489190
"Now that you're ready, apply the change: take the first path ./atl_zoo/Ant2Maven/example/build1.xmi model and convert it into a fresh Ant model. Just as quickly, move on to transforming this second model ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi into an entirely new SimpleRDBMS model.",multi_tool,3,0.5,2,1,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]","[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}]",2025-03-04T14:38:23.187768
"Take a moment to get everything sorted; start by making the switch from this old model ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi to a shiny new XML version. Then, take the second path model ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi and instantly turn it into its updated form XML model as part of your larger plan.",multi_tool,3,0.5,2,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]","[{'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T14:38:30.080912
"Transform both paths first; apply these changes to the original models: begin with this model ./atl_zoo/Ant2Maven/example/build1.xmi and create a clean Ant model from it. While working, don't forget about this other model ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi that needs some work too - give it a complete makeover into its updated version SimpleRDBMS.",multi_tool,3,0.0,2,0,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | list_transformation_SimpleClass2SimpleRDBMS_tool({}) | apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | list_transformation_Mantis2XML_tool({}) | apply_MySQL2KM3_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | list_transformation_Ant2Maven_tool({}) | apply_KM32OWL_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),[],"[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}, {'api_name': 'SimpleClass2SimpleRDBMS.apply_tool', 'arguments': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}]",2025-03-04T14:38:38.823914
"You're almost there; all you need to do now is finalize the changes: start by taking the initial path ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi and reformatting it as a new XML model. Don't wait for anything else, just make that happen. Next up, transform this other path ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi model into its newly upgraded form XML.",multi_tool,3,0.5,2,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]","[{'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T14:38:47.278333
"The process is almost complete; what's left to do now? Begin by taking the first model ./atl_zoo/Ant2Maven/example/build1.xmi and turning it into a revamped Ant version after doing that same thing for the second model ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi, which will be transformed into an entirely new SimpleRDBMS model as soon as you're done.",multi_tool,3,0.0,2,0,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2RDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),[],"[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}, {'api_name': 'SimpleClass2SimpleRDBMS.apply_tool', 'arguments': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}]",2025-03-04T14:38:55.400843
Apply your work on both sides; take the original path ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi and convert it to its updated form XML first. Don't stop there - immediately move on to working with the second model ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi and finish by turning it into a full-fledged new version XML.,multi_tool,3,0.0,2,0,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_XML2XSLT_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_MySQL2KM3_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),[],"[{'api_name': 'PNML2XML.apply_tool', 'arguments': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}, {'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T14:39:09.897077
"Your transformation plan is coming together; now that you've got everything set up, apply these changes to your original models: transform this model ./atl_zoo/Ant2Maven/example/build1.xmi into its updated form Ant after getting the first part done. Follow that up by turning this second path model ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi into a completely new version of SimpleRDBMS.",multi_tool,3,0.5,2,1,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | list_transformation_Ant2Maven_tool({}) | list_transformation_SimpleClass2SimpleRDBMS_tool({}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]","[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}]",2025-03-04T14:39:19.280987
"This is it - all you need to do now is complete the final step: begin with this initial model ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi and take it through to its transformed state as XML. While doing that, don't forget about the second path model ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi that needs a makeover too - have it turned into its fully updated form XML.",multi_tool,3,0.5,2,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]","[{'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T14:39:32.256286
"Now you're getting close; what's left is for you to finalize this process: take the original path ./atl_zoo/Ant2Maven/example/build1.xmi and reformat it as a new Ant version. Right after that, don't wait any longer - transform the other model ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi into its final form SimpleRDBMS.",multi_tool,3,0.0,2,0,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | list_transformation_Ant2Maven_tool({}) | list_transformation_Families2Persons_tool({}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),[],"[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}, {'api_name': 'SimpleClass2SimpleRDBMS.apply_tool', 'arguments': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}]",2025-03-04T14:39:39.120627
"Take your time; start by applying these changes to both paths: transform this model ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi into its updated version XML first and foremost. While working on that part of the job, turn your attention to this second path model ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi and complete it as soon as you can with a full-fledged new version XML.",multi_tool,3,0.5,2,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | list_transformation_PNML2XML_tool({}) | apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | list_transformation_Families2Persons_tool({}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | list_transformation_SimpleClass2SimpleRDBMS_tool({}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]","[{'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T14:39:53.537911
"This is the last step; make sure everything is taken care of: start by transforming this initial path ./atl_zoo/Ant2Maven/example/build1.xmi into its completely revamped form Ant. At the same time, transform the second model ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi into its newly upgraded state as SimpleRDBMS - that's it for now.",multi_tool,3,0.0,2,0,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),[],"[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}, {'api_name': 'SimpleClass2SimpleRDBMS.apply_tool', 'arguments': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}]",2025-03-04T14:40:03.047441
"Make one final change; begin with this first model ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi and give it a fresh new look as XML after you've completed the initial task. Right next to that, work on transforming this second path model ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi into its full-up updated form XML - all done.",multi_tool,3,0.5,2,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]","[{'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T14:40:14.920543
"Finally, complete your work; begin with this original model ./atl_zoo/Ant2Maven/example/build1.xmi and turn it over to its new Ant version as soon as possible. Then immediately move forward by taking this second model ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi in hand and give it the makeover of a brand-new SimpleRDBMS version - all set.",multi_tool,3,0.0,2,0,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | list_transformation_Ant2Maven_tool({}) | list_transformation_Families2Persons_tool({}) | apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),[],"[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}, {'api_name': 'SimpleClass2SimpleRDBMS.apply_tool', 'arguments': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}]",2025-03-04T14:40:29.621158
"Your final step; right now is when you finalize your original path models: start with this initial model ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi, transform it into its updated state as XML, then move on to giving the second model ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi a complete new makeover and finishing it off with an entirely new version of XML.",multi_tool,3,0.5,2,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]","[{'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T14:40:40.597295
"Once all is said and done; your last task now is simply to finalize this process: take the first path model ./atl_zoo/Ant2Maven/example/build1.xmi and give it its newly formatted state as Ant. Right after that, make sure you transform the second path model ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi into its final form of SimpleRDBMS - that's all there is.",multi_tool,3,0.0,2,0,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),[],"[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}, {'api_name': 'SimpleClass2SimpleRDBMS.apply_tool', 'arguments': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}]",2025-03-04T14:40:50.550234
"You've got everything; last but not least, apply these changes to your original models: start with this initial model ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi and give it a new XML version after doing the same thing for the second model ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi. That will turn it into an entirely new version of XML - all complete.",multi_tool,3,0.5,2,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_MantisBTFile_to_XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]","[{'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T14:40:59.399103
"Your last action; right now is when you wrap everything up: take this original path model ./atl_zoo/Ant2Maven/example/build1.xmi and convert it to its updated form Ant first off, then transform the second model ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi as well so that's a new SimpleRDBMS version for you.",multi_tool,3,0.0,2,0,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),[],"[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}, {'api_name': 'SimpleClass2SimpleRDBMS.apply_tool', 'arguments': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}]",2025-03-04T14:41:11.633205
"Apply your insights to this model ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi and create the XML model, then transform this model ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi to XML model.",multi_tool,3,1.0,2,2,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}, {'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T14:41:24.259147
"Transform this model ./atl_zoo/Ant2Maven/example/build1.xmi into the new metamodel for Ant, then apply the changes to transform this model ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi into the new metamodel for SimpleRDBMS.",multi_tool,3,0.5,2,1,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | list_transformation_Ant2Maven_tool({}) | list_transformation_SimpleClass2SimpleRDBMS_tool({}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]","[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}]",2025-03-04T14:41:30.889308
"Apply transformations to this model ./atl_zoo/KM32EMF/Sample-KM3.xmi and create a new metamodel named EMF, followed by transforming the model at ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi into its corresponding new metamodel DSL.",multi_tool,3,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32EMF_tool({}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | list_transformation_KM32EMF_tool({}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | list_transformation_Persons_tool({}) | apply_Families2Persons_transformation_tool({'input_str': './families/KM3.ecore'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:41:42.329555
"Once you have applied the necessary changes, transform the original model ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi into a new metamodel for XML, then immediately proceed to apply similar changes to the other model ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi and create a new metamodel XML.",multi_tool,3,0.0,2,0,apply_XML2PNML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_MantisBTFile_to_XMLOnlyTransformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),[],"[{'api_name': 'PNML2XML.apply_tool', 'arguments': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}, {'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T14:41:47.518176
"The first step involves converting this model ./atl_zoo/Ant2Maven/example/build1.xmi to the desired Ant format, followed by taking the second model ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi and transforming it into its corresponding SimpleRDBMS model.",multi_tool,3,1.0,2,2,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}, {'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T14:41:56.347071
"Create a new metamodel for EMF from the transformed model ./atl_zoo/KM32EMF/Sample-KM3.xmi, then apply the same transformation process to the other model at ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi in order to produce a new metamodel named DSL.",multi_tool,3,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32OWL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32OWL_tool({}) | apply_KM32OWL_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:42:04.571422
"Transform this original model ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi into its new form as the metamodel XML, and afterwards apply similar transformations to transform the other model ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi into its corresponding new metamodel XML.",multi_tool,3,0.5,2,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_KM32OWL_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]","[{'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T14:42:12.500071
"Apply changes to this model ./atl_zoo/Ant2Maven/example/build1.xmi in order to create a new metamodel for Ant, and then apply transformations to the second model at ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi with the same effect of producing a new metamodel named SimpleRDBMS.",multi_tool,3,0.5,2,1,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | list_transformation_Ant2Maven_tool({}) | list_transformation_SimpleClass2SimpleRDBMS_tool({}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]","[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}]",2025-03-04T14:42:25.131078
"Now that you have completed the initial transformation for the first model ./atl_zoo/KM32EMF/Sample-KM3.xmi into the metamodel EMF, transform this model ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi into its corresponding DSL form using the same applied method.",multi_tool,3,0.0,2,0,apply_KM32OWL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32OWL_tool({}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),[],"[{'api_name': 'KM32EMF.apply_tool', 'arguments': './atl_zoo/KM32EMF/Sample-KM3.xmi'}, {'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:42:30.774936
"In order to complete the process of transformation, apply changes to this model ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi and create a new metamodel named XML, followed by taking the other model at ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi and applying similar transformations in order to produce a new metamodel named XML.",multi_tool,3,0.5,2,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]","[{'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T14:42:38.376306
"Proceed with converting this original model ./atl_zoo/Ant2Maven/example/build1.xmi into its new form as the metamodel Ant, then apply transformations to transform the other model ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi into its corresponding SimpleRDBMS.",multi_tool,3,0.5,2,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]","[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}]",2025-03-04T14:42:47.068492
"Apply changes to both models at once and create a new metamodel for EMF from the first transformed model ./atl_zoo/KM32EMF/Sample-KM3.xmi, followed by taking the second model at ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi in order to produce a new metamodel named DSL.",multi_tool,3,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:42:53.349031
"Now that you have completed your initial transformation of this original model ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi into the new XML form, apply similar transformations to transform this other model ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi into its corresponding XML form.",multi_tool,3,0.0,2,0,apply_KM32OWL_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_KM32OWL_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_KM32OWL_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_KM32OWL_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),[],"[{'api_name': 'PNML2XML.apply_tool', 'arguments': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}, {'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T14:43:00.409622
"Transform this model ./atl_zoo/Ant2Maven/example/build1.xmi to Ant model after transforming that model, then transform this model ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi to SimpleRDBMS model once you've finished.",multi_tool,3,0.5,2,1,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | list_transformation_Ant2Maven_tool({}) | list_transformation_SimpleClass2SimpleRDBMS_tool({}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]","[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}]",2025-03-04T14:43:08.698687
"Once you've completed your work on both models, apply the transformations: take the first model ./atl_zoo/KM32EMF/Sample-KM3.xmi and create a new EMF model. Next, do the same with the second model ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi, turning it into a brand-new DSL model as soon as possible.",multi_tool,3,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_DSLBridge_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:43:15.050142
"Apply the necessary changes to your original two models; begin by transforming this model ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi into a completely different version XML model, then transform that process to this other model ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi and finish with a new version of it XML model.",multi_tool,3,0.5,2,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_MantisBTFile_to_XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_XML2PNML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]","[{'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T14:43:21.532256
"Now that you're ready, apply the change: take the first path ./atl_zoo/Ant2Maven/example/build1.xmi model and convert it into a fresh Ant model. Just as quickly, move on to transforming this second model ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi into an entirely new SimpleRDBMS model.",multi_tool,3,0.5,2,1,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]","[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}]",2025-03-04T14:43:31.825324
"Take a moment to get everything sorted; start by making the switch from this old model ./atl_zoo/KM32EMF/Sample-KM3.xmi to a shiny new EMF version. Then, take the second path model ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi and instantly turn it into its updated form DSL model as part of your larger plan.",multi_tool,3,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_DSL2EMF_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:43:38.715772
"Transform both paths first; apply these changes to the original models: begin with this model ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi and create a clean XML model from it. While working, don't forget about this other model ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi that needs some work too - give it a complete makeover into its updated version XML.",multi_tool,3,0.5,2,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | list_transformation_PNML2XML_tool({}) | list_transformation_Families2Persons_tool({}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]","[{'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T14:43:46.002579
"You're almost there; all you need to do now is finalize the changes: start by taking the initial path ./atl_zoo/Ant2Maven/example/build1.xmi and reformatting it as a new Ant model. Don't wait for anything else, just make that happen. Next up, transform this other path ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi model into its newly upgraded form SimpleRDBMS.",multi_tool,3,1.0,2,2,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}, {'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T14:43:51.967067
"The process is almost complete; what's left to do now? Begin by taking the first model ./atl_zoo/KM32EMF/Sample-KM3.xmi and turning it into a revamped EMF version after doing that same thing for the second model ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi, which will be transformed into an entirely new DSL model as soon as you're done.",multi_tool,3,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_DSL2EMF_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:43:57.986192
Apply your work on both sides; take the original path ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi and convert it to its updated form XML first. Don't stop there - immediately move on to working with the second model ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi and finish by turning it into a full-fledged new version XML.,multi_tool,3,0.0,2,0,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_XML2XSLT_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_MySQL2KM3_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_XML2XSLT_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_MySQL2KM3_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),[],"[{'api_name': 'PNML2XML.apply_tool', 'arguments': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}, {'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T14:44:11.343234
"Your transformation plan is coming together; now that you've got everything set up, apply these changes to your original models: transform this model ./atl_zoo/Ant2Maven/example/build1.xmi into its updated form Ant after getting the first part done. Follow that up by turning this second path model ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi into a completely new version of SimpleRDBMS.",multi_tool,3,0.5,2,1,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | list_transformation_Ant2Maven_tool({}) | list_transformation_SimpleClass2SimpleRDBMS_tool({}) | apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]","[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}]",2025-03-04T14:44:27.211074
"This is it - all you need to do now is complete the final step: begin with this initial model ./atl_zoo/KM32EMF/Sample-KM3.xmi and take it through to its transformed state as EMF. While doing that, don't forget about the second path model ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi that needs a makeover too - have it turned into its fully updated form DSL.",multi_tool,3,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_DSLBridge_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32EMF_tool({}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:44:35.521301
"Now you're getting close; what's left is for you to finalize this process: take the original path ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi and reformat it as a new XML version. Right after that, don't wait any longer - transform the other model ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi into its final form XML.",multi_tool,3,0.5,2,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]","[{'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T14:44:46.817731
"Take your time; start by applying these changes to both paths: transform this model ./atl_zoo/Ant2Maven/example/build1.xmi into its updated version Ant first and foremost. While working on that part of the job, turn your attention to this second path model ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi and complete it as soon as you can with a full-fledged new version SimpleRDBMS.",multi_tool,3,0.5,2,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]","[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}]",2025-03-04T14:45:03.162473
"This is the last step; make sure everything is taken care of: start by transforming this initial path ./atl_zoo/KM32EMF/Sample-KM3.xmi into its completely revamped form EMF. At the same time, transform the second model ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi into its newly upgraded state as DSL - that's it for now.",multi_tool,3,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_DSLBridge_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32EMF_tool({'input_str': ''}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:45:11.632431
"Make one final change; begin with this first model ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi and give it a fresh new look as XML after you've completed the initial task. Right next to that, work on transforming this second path model ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi into its full-up updated form XML - all done.",multi_tool,3,0.5,2,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]","[{'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T14:45:23.596961
"Finally, complete your work; begin with this original model ./atl_zoo/Ant2Maven/example/build1.xmi and turn it over to its new Ant version as soon as possible. Then immediately move forward by taking this second model ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi in hand and give it the makeover of a brand-new SimpleRDBMS version - all set.",multi_tool,3,0.0,2,0,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | list_transformation_Ant2Maven_tool({}) | list_transformation_Families2Persons_tool({}) | apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),[],"[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}, {'api_name': 'SimpleClass2SimpleRDBMS.apply_tool', 'arguments': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}]",2025-03-04T14:45:40.212041
"Your final step; right now is when you finalize your original path models: start with this initial model ./atl_zoo/KM32EMF/Sample-KM3.xmi, transform it into its updated state as EMF, then move on to giving the second model ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi a complete new makeover and finishing it off with an entirely new version of DSL.",multi_tool,3,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_DSL2EMF_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | apply_DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:45:46.445030
"Once all is said and done; your last task now is simply to finalize this process: take the first path model ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi and give it its newly formatted state as XML. Right after that, make sure you transform the second path model ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi into its final form of XML - that's all there is.",multi_tool,3,0.5,2,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_MantisBTFile_to_XMI_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]","[{'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T14:45:51.771537
"You've got everything; last but not least, apply these changes to your original models: start with this initial model ./atl_zoo/Ant2Maven/example/build1.xmi and give it a new Ant version after doing the same thing for the second model ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi. That will turn it into an entirely new version of SimpleRDBMS - all complete.",multi_tool,3,0.0,2,0,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | list_transformation_Ant2Maven_tool({}) | list_transformation_Families2Persons_tool({}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),[],"[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}, {'api_name': 'SimpleClass2SimpleRDBMS.apply_tool', 'arguments': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}]",2025-03-04T14:46:00.320116
"Your last action; right now is when you wrap everything up: take this original path model ./atl_zoo/KM32EMF/Sample-KM3.xmi and convert it to its updated form EMF first off, then transform the second model ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi as well so that's a new DSL version for you.",multi_tool,3,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_DSL2EMF_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:46:06.934502
"Apply your insights to this model ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi and create the XML model, then transform this model ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi to XML model.",multi_tool,3,1.0,2,2,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}, {'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T14:46:19.047257
"Transform this model ./atl_zoo/Ant2Maven/example/build1.xmi into the new metamodel for Ant, then apply the changes to transform this model ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi into the new metamodel for SimpleRDBMS.",multi_tool,3,0.5,2,1,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | list_transformation_Ant2Maven_tool({}) | list_transformation_SimpleClass2SimpleRDBMS_tool({}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]","[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}]",2025-03-04T14:46:25.804824
"Apply transformations to this model ./atl_zoo/KM32EMF/Sample-KM3.xmi and create a new metamodel named EMF, followed by transforming the model at ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi into its corresponding new metamodel DSL.",multi_tool,3,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:46:32.124499
"Once you have applied the necessary changes, transform the original model ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi into a new metamodel for XML, then immediately proceed to apply similar changes to the other model ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi and create a new metamodel XML.",multi_tool,3,0.0,2,0,apply_XML2PNML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_MantisBTFile_to_PNML({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_PNML_to_XML({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),[],"[{'api_name': 'PNML2XML.apply_tool', 'arguments': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}, {'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T14:46:40.623964
"The first step involves converting this model ./atl_zoo/Ant2Maven/example/build1.xmi to the desired Ant format, followed by taking the second model ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi and transforming it into its corresponding SimpleRDBMS model.",multi_tool,3,1.0,2,2,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}, {'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T14:46:49.240693
"Create a new metamodel for EMF from the transformed model ./atl_zoo/KM32EMF/Sample-KM3.xmi, then apply the same transformation process to the other model at ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi in order to produce a new metamodel named DSL.",multi_tool,3,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32OWL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:46:55.669989
"Transform this original model ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi into its new form as the metamodel XML, and afterwards apply similar transformations to transform the other model ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi into its corresponding new metamodel XML.",multi_tool,3,0.5,2,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_KM32OWL_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_KM32OWL_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]","[{'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T14:47:13.514405
"Apply changes to this model ./atl_zoo/Ant2Maven/example/build1.xmi in order to create a new metamodel for Ant, and then apply transformations to the second model at ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi with the same effect of producing a new metamodel named SimpleRDBMS.",multi_tool,3,0.5,2,1,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | list_transformation_Ant2Maven_tool({}) | list_transformation_SimpleClass2SimpleRDBMS_tool({}) | apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]","[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}]",2025-03-04T14:47:29.438219
"Now that you have completed the initial transformation for the first model ./atl_zoo/KM32EMF/Sample-KM3.xmi into the metamodel EMF, transform this model ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi into its corresponding DSL form using the same applied method.",multi_tool,3,0.0,2,0,apply_KM32OWL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32OWL_tool({}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),[],"[{'api_name': 'KM32EMF.apply_tool', 'arguments': './atl_zoo/KM32EMF/Sample-KM3.xmi'}, {'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:47:36.102506
"In order to complete the process of transformation, apply changes to this model ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi and create a new metamodel named XML, followed by taking the other model at ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi and applying similar transformations in order to produce a new metamodel named XML.",multi_tool,3,0.5,2,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]","[{'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T14:47:42.260221
"Proceed with converting this original model ./atl_zoo/Ant2Maven/example/build1.xmi into its new form as the metamodel Ant, then apply transformations to transform the other model ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi into its corresponding SimpleRDBMS.",multi_tool,3,0.5,2,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]","[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}]",2025-03-04T14:47:49.021043
"Apply changes to both models at once and create a new metamodel for EMF from the first transformed model ./atl_zoo/KM32EMF/Sample-KM3.xmi, followed by taking the second model at ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi in order to produce a new metamodel named DSL.",multi_tool,3,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:47:59.187612
"Now that you have completed your initial transformation of this original model ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi into the new XML form, apply similar transformations to transform this other model ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi into its corresponding XML form.",multi_tool,3,0.0,2,0,apply_KM32OWL_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_KM32OWL_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_KM32OWL_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_KM32OWL_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),[],"[{'api_name': 'PNML2XML.apply_tool', 'arguments': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}, {'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T14:48:07.032670
"Transform this model ./atl_zoo/Ant2Maven/example/build1.xmi to Ant model after transforming that model, then transform this model ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi to SimpleRDBMS model once you've finished.",multi_tool,3,0.5,2,1,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | list_transformation_Ant2Maven_tool({}) | list_transformation_SimpleClass2SimpleRDBMS_tool({}) | list_transformation_Ant2Maven_tool({}) | list_transformation_SimpleClass2SimpleRDBMS_tool({}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]","[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}]",2025-03-04T14:48:23.665656
"Once you've completed your work on both models, apply the transformations: take the first model ./atl_zoo/KM32EMF/Sample-KM3.xmi and create a new EMF model. Next, do the same with the second model ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi, turning it into a brand-new DSL model as soon as possible.",multi_tool,3,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_DSLBridge_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32EMF_tool({}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:48:32.145074
"Apply the necessary changes to your original two models; begin by transforming this model ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi into a completely different version XML model, then transform that process to this other model ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi and finish with a new version of it XML model.",multi_tool,3,0.5,2,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_KM32OWL_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_XML2XSLT_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | list_transformation_PNML2XML_tool({}) | apply_KM32OWL_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | list_transformation_XML2XSLT_tool({}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]","[{'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T14:48:41.562672
"Now that you're ready, apply the change: take the first path ./atl_zoo/Ant2Maven/example/build1.xmi model and convert it into a fresh Ant model. Just as quickly, move on to transforming this second model ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi into an entirely new SimpleRDBMS model.",multi_tool,3,0.5,2,1,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]","[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}]",2025-03-04T14:48:51.196270
"Take a moment to get everything sorted; start by making the switch from this old model ./atl_zoo/KM32EMF/Sample-KM3.xmi to a shiny new EMF version. Then, take the second path model ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi and instantly turn it into its updated form DSL model as part of your larger plan.",multi_tool,3,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_DSL2EMF_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:49:00.543422
"Transform both paths first; apply these changes to the original models: begin with this model ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi and create a clean XML model from it. While working, don't forget about this other model ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi that needs some work too - give it a complete makeover into its updated version XML.",multi_tool,3,0.5,2,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | list_transformation_PNML2XML_tool({}) | list_transformation_Families2Persons_tool({}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]","[{'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T14:49:10.216347
"You're almost there; all you need to do now is finalize the changes: start by taking the initial path ./atl_zoo/Ant2Maven/example/build1.xmi and reformatting it as a new Ant model. Don't wait for anything else, just make that happen. Next up, transform this other path ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi model into its newly upgraded form SimpleRDBMS.",multi_tool,3,0.5,2,1,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}]","[{'api_name': 'SimpleClass2SimpleRDBMS.apply_tool', 'arguments': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}]",2025-03-04T14:49:19.664827
"The process is almost complete; what's left to do now? Begin by taking the first model ./atl_zoo/KM32EMF/Sample-KM3.xmi and turning it into a revamped EMF version after doing that same thing for the second model ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi, which will be transformed into an entirely new DSL model as soon as you're done.",multi_tool,3,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_DSL2EMF_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:49:27.903701
Apply your work on both sides; take the original path ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi and convert it to its updated form XML first. Don't stop there - immediately move on to working with the second model ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi and finish by turning it into a full-fledged new version XML.,multi_tool,3,0.0,2,0,apply_XML2PNML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_MantisBTFile_to_XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),[],"[{'api_name': 'PNML2XML.apply_tool', 'arguments': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}, {'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T14:49:33.155018
"Your transformation plan is coming together; now that you've got everything set up, apply these changes to your original models: transform this model ./atl_zoo/Ant2Maven/example/build1.xmi into its updated form Ant after getting the first part done. Follow that up by turning this second path model ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi into a completely new version of SimpleRDBMS.",multi_tool,3,0.5,2,1,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]","[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}]",2025-03-04T14:49:53.754214
"This is it - all you need to do now is complete the final step: begin with this initial model ./atl_zoo/KM32EMF/Sample-KM3.xmi and take it through to its transformed state as EMF. While doing that, don't forget about the second path model ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi that needs a makeover too - have it turned into its fully updated form DSL.",multi_tool,3,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_DSLBridge_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32EMF_tool({}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:50:03.307320
"Now you're getting close; what's left is for you to finalize this process: take the original path ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi and reformat it as a new XML version. Right after that, don't wait any longer - transform the other model ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi into its final form XML.",multi_tool,3,0.0,2,0,apply_XML2PNML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_MantisBTFile_to_XMI_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),[],"[{'api_name': 'PNML2XML.apply_tool', 'arguments': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}, {'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T14:50:09.152223
"Take your time; start by applying these changes to both paths: transform this model ./atl_zoo/Ant2Maven/example/build1.xmi into its updated version Ant first and foremost. While working on that part of the job, turn your attention to this second path model ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi and complete it as soon as you can with a full-fledged new version SimpleRDBMS.",multi_tool,3,0.0,2,0,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | list_transformation_PNML2XML_tool({}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),[],"[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}, {'api_name': 'SimpleClass2SimpleRDBMS.apply_tool', 'arguments': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}]",2025-03-04T14:50:23.853916
"This is the last step; make sure everything is taken care of: start by transforming this initial path ./atl_zoo/KM32EMF/Sample-KM3.xmi into its completely revamped form EMF. At the same time, transform the second model ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi into its newly upgraded state as DSL - that's it for now.",multi_tool,3,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_DSLBridge_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32EMF_tool({}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:50:30.959996
"Make one final change; begin with this first model ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi and give it a fresh new look as XML after you've completed the initial task. Right next to that, work on transforming this second path model ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi into its full-up updated form XML - all done.",multi_tool,3,0.5,2,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]","[{'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T14:50:42.626816
"Finally, complete your work; begin with this original model ./atl_zoo/Ant2Maven/example/build1.xmi and turn it over to its new Ant version as soon as possible. Then immediately move forward by taking this second model ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi in hand and give it the makeover of a brand-new SimpleRDBMS version - all set.",multi_tool,3,0.0,2,0,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | list_transformation_Ant2Maven_tool({}) | list_transformation_Families2Persons_tool({}) | apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),[],"[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}, {'api_name': 'SimpleClass2SimpleRDBMS.apply_tool', 'arguments': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}]",2025-03-04T14:50:54.621485
"Your final step; right now is when you finalize your original path models: start with this initial model ./atl_zoo/KM32EMF/Sample-KM3.xmi, transform it into its updated state as EMF, then move on to giving the second model ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi a complete new makeover and finishing it off with an entirely new version of DSL.",multi_tool,3,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_DSL2EMF_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | apply_DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:51:02.800175
"Once all is said and done; your last task now is simply to finalize this process: take the first path model ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi and give it its newly formatted state as XML. Right after that, make sure you transform the second path model ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi into its final form of XML - that's all there is.",multi_tool,3,0.5,2,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_MantisBTFile_to_XMI({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]","[{'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T14:51:09.904386
"You've got everything; last but not least, apply these changes to your original models: start with this initial model ./atl_zoo/Ant2Maven/example/build1.xmi and give it a new Ant version after doing the same thing for the second model ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi. That will turn it into an entirely new version of SimpleRDBMS - all complete.",multi_tool,3,0.0,2,0,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | list_transformation_Ant2Maven_tool({}) | apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | list_transformation_Families2Persons_tool({}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),[],"[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}, {'api_name': 'SimpleClass2SimpleRDBMS.apply_tool', 'arguments': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}]",2025-03-04T14:51:23.652517
"Your last action; right now is when you wrap everything up: take this original path model ./atl_zoo/KM32EMF/Sample-KM3.xmi and convert it to its updated form EMF first off, then transform the second model ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi as well so that's a new DSL version for you.",multi_tool,3,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_DSLBridge_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32EMF_tool({}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:51:31.410480
"Apply your insights to this model ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi and create the XML model, then transform this model ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi to XML model.",multi_tool,3,1.0,2,2,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}, {'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T14:51:39.408100
"Transform this model ./atl_zoo/Ant2Maven/example/build1.xmi into the new metamodel for Ant, then apply the changes to transform this model ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi into the new metamodel for SimpleRDBMS.",multi_tool,3,0.5,2,1,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | list_transformation_Ant2Maven_tool({}) | list_transformation_SimpleClass2SimpleRDBMS_tool({}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]","[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}]",2025-03-04T14:51:47.190971
"Apply transformations to this model ./atl_zoo/KM32EMF/Sample-KM3.xmi and create a new metamodel named EMF, followed by transforming the model at ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi into its corresponding new metamodel DSL.",multi_tool,3,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:51:53.008886
"Once you have applied the necessary changes, transform the original model ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi into a new metamodel for XML, then immediately proceed to apply similar changes to the other model ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi and create a new metamodel XML.",multi_tool,3,0.0,2,0,apply_XML2PNML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_MantisBTFile_to_XMLOnlyTransformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),[],"[{'api_name': 'PNML2XML.apply_tool', 'arguments': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}, {'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T14:51:58.631614
"The first step involves converting this model ./atl_zoo/Ant2Maven/example/build1.xmi to the desired Ant format, followed by taking the second model ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi and transforming it into its corresponding SimpleRDBMS model.",multi_tool,3,1.0,2,2,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}, {'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T14:52:06.558415
"Create a new metamodel for EMF from the transformed model ./atl_zoo/KM32EMF/Sample-KM3.xmi, then apply the same transformation process to the other model at ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi in order to produce a new metamodel named DSL.",multi_tool,3,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32OWL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32OWL_tool({}) | apply_KM32OWL_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | list_transformation_KM32EMF_tool({}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32OWL/SimpleExample.xmi'}) | list_transformation_KM32OWL_tool({}) | apply_KM32OWL_transformation_tool({'input_str': './atl_zoo/KM32OWL/SimpleExample.xmi'}) | list_transformation_KM32EMF_tool({}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/SimpleExample.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:52:19.426861
"Transform this original model ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi into its new form as the metamodel XML, and afterwards apply similar transformations to transform the other model ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi into its corresponding new metamodel XML.",multi_tool,3,0.5,2,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_KM32OWL_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_KM32OWL_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]","[{'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T14:52:35.353268
"Apply changes to this model ./atl_zoo/Ant2Maven/example/build1.xmi in order to create a new metamodel for Ant, and then apply transformations to the second model at ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi with the same effect of producing a new metamodel named SimpleRDBMS.",multi_tool,3,0.5,2,1,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | list_transformation_Ant2Maven_tool({}) | list_transformation_SimpleClass2SimpleRDBMS_tool({}) | apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]","[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}]",2025-03-04T14:52:51.464083
"Now that you have completed the initial transformation for the first model ./atl_zoo/KM32EMF/Sample-KM3.xmi into the metamodel EMF, transform this model ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi into its corresponding DSL form using the same applied method.",multi_tool,3,0.0,2,0,apply_KM32OWL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),[],"[{'api_name': 'KM32EMF.apply_tool', 'arguments': './atl_zoo/KM32EMF/Sample-KM3.xmi'}, {'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:52:58.390972
"In order to complete the process of transformation, apply changes to this model ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi and create a new metamodel named XML, followed by taking the other model at ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi and applying similar transformations in order to produce a new metamodel named XML.",multi_tool,3,0.5,2,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Mantis2PNML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/PNML_transformed.xml'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]","[{'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T14:53:15.907506
"Proceed with converting this original model ./atl_zoo/Ant2Maven/example/build1.xmi into its new form as the metamodel Ant, then apply transformations to transform the other model ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi into its corresponding SimpleRDBMS.",multi_tool,3,0.5,2,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]","[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}]",2025-03-04T14:53:30.252675
"Apply changes to both models at once and create a new metamodel for EMF from the first transformed model ./atl_zoo/KM32EMF/Sample-KM3.xmi, followed by taking the second model at ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi in order to produce a new metamodel named DSL.",multi_tool,3,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:53:40.811096
"Now that you have completed your initial transformation of this original model ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi into the new XML form, apply similar transformations to transform this other model ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi into its corresponding XML form.",multi_tool,3,0.0,2,0,apply_KM32OWL_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_KM32OWL_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_KM32OWL_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_KM32OWL_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),[],"[{'api_name': 'PNML2XML.apply_tool', 'arguments': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}, {'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T14:53:49.105676
"Transform this model ./atl_zoo/Ant2Maven/example/build1.xmi to Ant model after transforming that model, then transform this model ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi to SimpleRDBMS model once you've finished.",multi_tool,3,0.5,2,1,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | list_transformation_Ant2Maven_tool({}) | list_transformation_SimpleClass2SimpleRDBMS_tool({}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]","[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}]",2025-03-04T14:53:57.558676
"Once you've completed your work on both models, apply the transformations: take the first model ./atl_zoo/KM32EMF/Sample-KM3.xmi and create a new EMF model. Next, do the same with the second model ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi, turning it into a brand-new DSL model as soon as possible.",multi_tool,3,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_DSLBridge_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32EMF_tool({}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:54:05.709623
"Apply the necessary changes to your original two models; begin by transforming this model ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi into a completely different version XML model, then transform that process to this other model ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi and finish with a new version of it XML model.",multi_tool,3,0.5,2,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_KM32OWL_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_XML2XSLT_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | list_transformation_PNML2XML_tool({}) | apply_KM32OWL_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | list_transformation_XML2XSLT_tool({}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]","[{'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T14:54:16.797635
"Now that you're ready, apply the change: take the first path ./atl_zoo/Ant2Maven/example/build1.xmi model and convert it into a fresh Ant model. Just as quickly, move on to transforming this second model ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi into an entirely new SimpleRDBMS model.",multi_tool,3,0.5,2,1,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]","[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}]",2025-03-04T14:54:39.121887
"Take a moment to get everything sorted; start by making the switch from this old model ./atl_zoo/KM32EMF/Sample-KM3.xmi to a shiny new EMF version. Then, take the second path model ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi and instantly turn it into its updated form DSL model as part of your larger plan.",multi_tool,3,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_DSL2EMF_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32EMF_tool({}) | list_transformation_KM32OWL_tool({}) | list_transformation_PNML2XML_tool({}) | list_transformation_Mantis2XML_tool({}) | list_transformation_SimpleClass2SimpleRDBMS_tool({}) | list_transformation_PNML2XML_tool({}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input': './SimpleClass.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input': './SimpleClass.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:54:52.870716
"Transform both paths first; apply these changes to the original models: begin with this model ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi and create a clean XML model from it. While working, don't forget about this other model ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi that needs some work too - give it a complete makeover into its updated version XML.",multi_tool,3,0.5,2,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | list_transformation_PNML2XML_tool({}) | list_transformation_Families2Persons_tool({}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]","[{'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T14:55:02.637190
"You're almost there; all you need to do now is finalize the changes: start by taking the initial path ./atl_zoo/Ant2Maven/example/build1.xmi and reformatting it as a new Ant model. Don't wait for anything else, just make that happen. Next up, transform this other path ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi model into its newly upgraded form SimpleRDBMS.",multi_tool,3,0.5,2,1,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}]","[{'api_name': 'SimpleClass2SimpleRDBMS.apply_tool', 'arguments': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}]",2025-03-04T14:55:13.785037
"The process is almost complete; what's left to do now? Begin by taking the first model ./atl_zoo/KM32EMF/Sample-KM3.xmi and turning it into a revamped EMF version after doing that same thing for the second model ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi, which will be transformed into an entirely new DSL model as soon as you're done.",multi_tool,3,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_DSL2EMF_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:55:20.459496
Apply your work on both sides; take the original path ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi and convert it to its updated form XML first. Don't stop there - immediately move on to working with the second model ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi and finish by turning it into a full-fledged new version XML.,multi_tool,3,0.0,2,0,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),[],"[{'api_name': 'PNML2XML.apply_tool', 'arguments': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}, {'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T14:55:33.764624
"Your transformation plan is coming together; now that you've got everything set up, apply these changes to your original models: transform this model ./atl_zoo/Ant2Maven/example/build1.xmi into its updated form Ant after getting the first part done. Follow that up by turning this second path model ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi into a completely new version of SimpleRDBMS.",multi_tool,3,0.5,2,1,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | list_transformation_Ant2Maven_tool({}) | list_transformation_SimpleClass2SimpleRDBMS_tool({}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]","[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}]",2025-03-04T14:55:42.693994
"This is it - all you need to do now is complete the final step: begin with this initial model ./atl_zoo/KM32EMF/Sample-KM3.xmi and take it through to its transformed state as EMF. While doing that, don't forget about the second path model ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi that needs a makeover too - have it turned into its fully updated form DSL.",multi_tool,3,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_DSLBridge_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32EMF_tool({}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:55:51.179998
"Now you're getting close; what's left is for you to finalize this process: take the original path ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi and reformat it as a new XML version. Right after that, don't wait any longer - transform the other model ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi into its final form XML.",multi_tool,3,0.0,2,0,apply_XML2PNML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_MantisBTFile_to_XMI_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),[],"[{'api_name': 'PNML2XML.apply_tool', 'arguments': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}, {'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T14:55:57.303904
"Take your time; start by applying these changes to both paths: transform this model ./atl_zoo/Ant2Maven/example/build1.xmi into its updated version Ant first and foremost. While working on that part of the job, turn your attention to this second path model ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi and complete it as soon as you can with a full-fledged new version SimpleRDBMS.",multi_tool,3,0.5,2,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]","[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}]",2025-03-04T14:56:06.068548
"This is the last step; make sure everything is taken care of: start by transforming this initial path ./atl_zoo/KM32EMF/Sample-KM3.xmi into its completely revamped form EMF. At the same time, transform the second model ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi into its newly upgraded state as DSL - that's it for now.",multi_tool,3,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_DSL2EMF_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:56:12.062394
"Make one final change; begin with this first model ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi and give it a fresh new look as XML after you've completed the initial task. Right next to that, work on transforming this second path model ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi into its full-up updated form XML - all done.",multi_tool,3,0.5,2,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]","[{'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T14:56:21.052090
"Finally, complete your work; begin with this original model ./atl_zoo/Ant2Maven/example/build1.xmi and turn it over to its new Ant version as soon as possible. Then immediately move forward by taking this second model ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi in hand and give it the makeover of a brand-new SimpleRDBMS version - all set.",multi_tool,3,0.0,2,0,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | list_transformation_Ant2Maven_tool({}) | list_transformation_Families2Persons_tool({}) | apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),[],"[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}, {'api_name': 'SimpleClass2SimpleRDBMS.apply_tool', 'arguments': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}]",2025-03-04T14:56:33.530876
"Your final step; right now is when you finalize your original path models: start with this initial model ./atl_zoo/KM32EMF/Sample-KM3.xmi, transform it into its updated state as EMF, then move on to giving the second model ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi a complete new makeover and finishing it off with an entirely new version of DSL.",multi_tool,3,0.5,2,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_DSL2EMF_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | apply_DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:56:42.086954
"Once all is said and done; your last task now is simply to finalize this process: take the first path model ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi and give it its newly formatted state as XML. Right after that, make sure you transform the second path model ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi into its final form of XML - that's all there is.",multi_tool,3,0.5,2,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_MantisBTFile_to_XMI_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]","[{'api_name': 'Mantis2XML.apply_tool', 'arguments': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}]",2025-03-04T14:56:50.875325
"You've got everything; last but not least, apply these changes to your original models: start with this initial model ./atl_zoo/Ant2Maven/example/build1.xmi and give it a new Ant version after doing the same thing for the second model ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi. That will turn it into an entirely new version of SimpleRDBMS - all complete.",multi_tool,3,0.0,2,0,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | list_transformation_Ant2Maven_tool({}) | apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | list_transformation_Families2Persons_tool({}) | apply_Families2Persons_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),[],"[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}, {'api_name': 'SimpleClass2SimpleRDBMS.apply_tool', 'arguments': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}]",2025-03-04T14:57:03.929254
"Your last action; right now is when you wrap everything up: take this original path model ./atl_zoo/KM32EMF/Sample-KM3.xmi and convert it to its updated form EMF first off, then transform the second model ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi as well so that's a new DSL version for you.",multi_tool,3,0.5,2,1,"apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_DSL2EMF_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32EMF_tool({}) | apply_KM32EMF_transformation_tool({'m': './KM3.ecore', 'p': './EMF.ecore'}) | apply_KM32EMF_transformation_tool({'st': './KM3.ecore'})",KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi) | KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]","[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T14:57:13.062078
"Apply your insights to this model ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi and create the XML model, then transform this model ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi to XML model.",multi_tool,3,1.0,2,2,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi) | Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}, {'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T14:57:22.727716
"Transform this model ./atl_zoo/Ant2Maven/example/build1.xmi into the new metamodel for Ant, then apply the changes to transform this model ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi into the new metamodel for SimpleRDBMS.",multi_tool,3,0.5,2,1,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi) | SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]","[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}]",2025-03-04T14:57:30.472092
Display the detailed configuration details for the KM32EMF transformation.,single_tool,1,1.0,1,1,list_transformation_KM32EMF_tool({'input_str': ''}),KM32EMF.get_tool(),"[{'tool_name': 'list_transformation_KM32EMF_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T14:57:35.832072
Show me the full configuration specifications for the KM32DSL transformation.,single_tool,1,1.0,1,1,list_transformation_KM32DSL_tool({'input_str': ''}),KM32DSL.get_tool(),"[{'tool_name': 'list_transformation_KM32DSL_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T14:57:40.665229
What are the configuration parameters for the PNML2XML transformation?,single_tool,1,1.0,1,1,list_transformation_PNML2XML_tool({'input_str': ''}),PNML2XML.get_tool(),"[{'tool_name': 'list_transformation_PNML2XML_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T14:57:45.549788
Can you show the detailed settings configured for the Mantis2XML transformation?,single_tool,1,1.0,1,1,list_transformation_Mantis2XML_tool({'input_str': ''}),Mantis2XML.get_tool(),"[{'tool_name': 'list_transformation_Mantis2XML_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T14:57:50.243136
Provide the detailed configuration information for the XML2Ant transformation.,single_tool,1,0.0,1,0,apply_XML2Ant_transformation_tool({'input_str': ''}),XML2Ant.get_tool(),[],"[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}]",2025-03-04T14:57:55.421972
Get me the complete configuration details for the SimpleClass2SimpleRDBMS transformation.,single_tool,1,1.0,1,1,list_transformation_SimpleClass2SimpleRDBMS_tool({'input_str': ''}),SimpleClass2SimpleRDBMS.get_tool(),"[{'tool_name': 'list_transformation_SimpleClass2SimpleRDBMS_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T14:57:59.802191
I need to see the default configuration values for the KM32EMF transformation.,single_tool,1,1.0,1,1,list_transformation_KM32EMF_tool({'input_str': ''}),KM32EMF.get_tool(),"[{'tool_name': 'list_transformation_KM32EMF_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T14:58:05.284503
What are the configuration options available for the KM32DSL transformation?,single_tool,1,1.0,1,1,list_transformation_KM32DSL_tool({'input_str': ''}),KM32DSL.get_tool(),"[{'tool_name': 'list_transformation_KM32DSL_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T14:58:09.908851
Show me the current settings configured for the PNML2XML transformation.,single_tool,1,1.0,1,1,list_transformation_PNML2XML_tool({'input_str': ''}),PNML2XML.get_tool(),"[{'tool_name': 'list_transformation_PNML2XML_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T14:58:15.304239
Can you display the detailed configuration specification for the Mantis2XML transformation?,single_tool,1,1.0,1,1,list_transformation_Mantis2XML_tool({'input_str': ''}),Mantis2XML.get_tool(),"[{'tool_name': 'list_transformation_Mantis2XML_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T14:58:20.826176
Get the detailed configuration parameters for the XML2Ant transformation.,single_tool,1,1.0,1,1,list_transformation_XML2Ant_tool({'input_str': ''}),XML2Ant.get_tool(),"[{'tool_name': 'list_transformation_XML2Ant_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T14:58:25.852570
Provide the full configuration details for the SimpleClass2SimpleRDBMS transformation.,single_tool,1,0.0,1,0,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': ''}),SimpleClass2SimpleRDBMS.get_tool(),[],"[{'api_name': 'SimpleClass2SimpleRDBMS.get_tool', 'arguments': ''}]",2025-03-04T14:58:29.874176
Show the detailed settings for the KM32EMF transformation.,single_tool,1,1.0,1,1,list_transformation_KM32EMF_tool({'input_str': ''}),KM32EMF.get_tool(),"[{'tool_name': 'list_transformation_KM32EMF_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T14:58:34.686123
What are the configuration values for the KM32DSL transformation?,single_tool,1,1.0,1,1,list_transformation_KM32DSL_tool({'input_str': ''}),KM32DSL.get_tool(),"[{'tool_name': 'list_transformation_KM32DSL_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T14:58:40.237638
I need to see the configured settings for the PNML2XML transformation.,single_tool,1,1.0,1,1,list_transformation_PNML2XML_tool({'input_str': ''}),PNML2XML.get_tool(),"[{'tool_name': 'list_transformation_PNML2XML_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T14:58:44.645984
Display the configuration parameters for the Mantis2XML transformation.,single_tool,1,1.0,1,1,list_transformation_Mantis2XML_tool({'input_str': ''}),Mantis2XML.get_tool(),"[{'tool_name': 'list_transformation_Mantis2XML_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T14:58:49.408537
Display the detailed configuration details for the XML2Ant transformation.,single_tool,1,1.0,1,1,list_transformation_XML2Ant_tool({'input_str': ''}),XML2Ant.get_tool(),"[{'tool_name': 'list_transformation_XML2Ant_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T14:58:53.040255
Show me the full configuration specifications for the SimpleClass2SimpleRDBMS transformation.,single_tool,1,0.0,1,0,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': ''}),SimpleClass2SimpleRDBMS.get_tool(),[],"[{'api_name': 'SimpleClass2SimpleRDBMS.get_tool', 'arguments': ''}]",2025-03-04T14:58:59.157944
What are the configuration parameters for the KM32EMF transformation?,single_tool,1,1.0,1,1,list_transformation_KM32EMF_tool({'input_str': ''}),KM32EMF.get_tool(),"[{'tool_name': 'list_transformation_KM32EMF_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T14:59:03.422593
Can you show the detailed settings configured for the KM32DSL transformation?,single_tool,1,1.0,1,1,list_transformation_KM32DSL_tool({'input_str': ''}),KM32DSL.get_tool(),"[{'tool_name': 'list_transformation_KM32DSL_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T14:59:09.020829
Provide the detailed configuration information for the PNML2XML transformation.,single_tool,1,1.0,1,1,list_transformation_PNML2XML_tool({'input_str': ''}),PNML2XML.get_tool(),"[{'tool_name': 'list_transformation_PNML2XML_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T14:59:15.622891
Get me the complete configuration details for the Mantis2XML transformation.,single_tool,1,1.0,1,1,list_transformation_Mantis2XML_tool({'input_str': ''}),Mantis2XML.get_tool(),"[{'tool_name': 'list_transformation_Mantis2XML_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T14:59:20.557669
I need to see the default configuration values for the XML2Ant transformation.,single_tool,1,0.0,1,0,apply_XML2Ant_transformation_tool({'input_str': ''}) | apply_XML2Ant_transformation_tool({'input_str': ''}),XML2Ant.get_tool(),[],"[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}]",2025-03-04T14:59:27.196615
What are the configuration options available for the SimpleClass2SimpleRDBMS transformation?,single_tool,1,1.0,1,1,list_transformation_SimpleClass2SimpleRDBMS_tool({'input_str': ''}),SimpleClass2SimpleRDBMS.get_tool(),"[{'tool_name': 'list_transformation_SimpleClass2SimpleRDBMS_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T14:59:31.633360
Show me the current settings configured for the KM32EMF transformation.,single_tool,1,1.0,1,1,list_transformation_KM32EMF_tool({'input_str': ''}),KM32EMF.get_tool(),"[{'tool_name': 'list_transformation_KM32EMF_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T14:59:36.167674
Can you display the detailed configuration specification for the KM32DSL transformation?,single_tool,1,1.0,1,1,list_transformation_KM32DSL_tool({'input_str': ''}),KM32DSL.get_tool(),"[{'tool_name': 'list_transformation_KM32DSL_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T14:59:41.126670
Get the detailed configuration parameters for the PNML2XML transformation.,single_tool,1,1.0,1,1,list_transformation_PNML2XML_tool({'input_str': ''}),PNML2XML.get_tool(),"[{'tool_name': 'list_transformation_PNML2XML_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T14:59:46.522137
Provide the full configuration details for the Mantis2XML transformation.,single_tool,1,1.0,1,1,apply_Mantis2XML_transformation_tool({'input_str': ''}) | list_transformation_Mantis2XML_tool({'input_str': ''}),Mantis2XML.get_tool(),"[{'tool_name': 'list_transformation_Mantis2XML_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T14:59:51.189251
Show the detailed settings for the XML2Ant transformation.,single_tool,1,0.0,1,0,apply_XML2Ant_transformation_tool({'input_str': ''}),XML2Ant.get_tool(),[],"[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}]",2025-03-04T14:59:55.990995
What are the configuration values for the SimpleClass2SimpleRDBMS transformation?,single_tool,1,1.0,1,1,list_transformation_SimpleClass2SimpleRDBMS_tool({'input_str': ''}) | list_transformation_SimpleClass2SimpleRDBMS_tool({'input_str': ''}),SimpleClass2SimpleRDBMS.get_tool(),"[{'tool_name': 'list_transformation_SimpleClass2SimpleRDBMS_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T15:00:00.415526
I need to see the configured settings for the KM32EMF transformation.,single_tool,1,1.0,1,1,list_transformation_KM32EMF_tool({'input_str': ''}),KM32EMF.get_tool(),"[{'tool_name': 'list_transformation_KM32EMF_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T15:00:05.899834
Display the configuration parameters for the KM32DSL transformation.,single_tool,1,1.0,1,1,list_transformation_KM32DSL_tool({'input_str': ''}),KM32DSL.get_tool(),"[{'tool_name': 'list_transformation_KM32DSL_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T15:00:11.988799
Display the detailed configuration details for the PNML2XML transformation.,single_tool,1,1.0,1,1,list_transformation_PNML2XML_tool({'input_str': ''}),PNML2XML.get_tool(),"[{'tool_name': 'list_transformation_PNML2XML_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T15:00:17.706786
Show me the full configuration specifications for the Mantis2XML transformation.,single_tool,1,1.0,1,1,list_transformation_Mantis2XML_tool({'input_str': ''}),Mantis2XML.get_tool(),"[{'tool_name': 'list_transformation_Mantis2XML_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T15:00:23.457685
What are the configuration parameters for the XML2Ant transformation?,single_tool,1,0.0,1,0,apply_XML2Ant_transformation_tool({'input_str': ''}),XML2Ant.get_tool(),[],"[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}]",2025-03-04T15:00:27.751651
Can you show the detailed settings configured for the SimpleClass2SimpleRDBMS transformation?,single_tool,1,0.0,1,0,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': ''}),SimpleClass2SimpleRDBMS.get_tool(),[],"[{'api_name': 'SimpleClass2SimpleRDBMS.get_tool', 'arguments': ''}]",2025-03-04T15:00:32.663196
Provide the detailed configuration information for the KM32EMF transformation.,single_tool,1,1.0,1,1,list_transformation_KM32EMF_tool({'input_str': ''}),KM32EMF.get_tool(),"[{'tool_name': 'list_transformation_KM32EMF_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T15:00:37.505962
Get me the complete configuration details for the KM32DSL transformation.,single_tool,1,1.0,1,1,list_transformation_KM32DSL_tool({'input_str': ''}),KM32DSL.get_tool(),"[{'tool_name': 'list_transformation_KM32DSL_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T15:00:42.485423
I need to see the default configuration values for the PNML2XML transformation.,single_tool,1,1.0,1,1,list_transformation_PNML2XML_tool({'input_str': ''}),PNML2XML.get_tool(),"[{'tool_name': 'list_transformation_PNML2XML_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T15:00:46.926590
What are the configuration options available for the Mantis2XML transformation?,single_tool,1,1.0,1,1,list_transformation_Mantis2XML_tool({'input_str': ''}),Mantis2XML.get_tool(),"[{'tool_name': 'list_transformation_Mantis2XML_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T15:00:51.572326
Show me the current settings configured for the XML2Ant transformation.,single_tool,1,0.0,1,0,apply_XML2Ant_transformation_tool({'input_str': ''}),XML2Ant.get_tool(),[],"[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}]",2025-03-04T15:00:55.870180
Can you display the detailed configuration specification for the SimpleClass2SimpleRDBMS transformation?,single_tool,1,1.0,1,1,list_transformation_SimpleClass2SimpleRDBMS_tool({'input_str': ''}),SimpleClass2SimpleRDBMS.get_tool(),"[{'tool_name': 'list_transformation_SimpleClass2SimpleRDBMS_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T15:01:00.304230
Get the detailed configuration parameters for the KM32EMF transformation.,single_tool,1,1.0,1,1,list_transformation_KM32EMF_tool({'input_str': ''}),KM32EMF.get_tool(),"[{'tool_name': 'list_transformation_KM32EMF_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T15:01:04.211053
Provide the full configuration details for the KM32DSL transformation.,single_tool,1,1.0,1,1,list_transformation_KM32DSL_tool({'input_str': ''}),KM32DSL.get_tool(),"[{'tool_name': 'list_transformation_KM32DSL_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T15:01:10.391717
Show the detailed settings for the PNML2XML transformation.,single_tool,1,1.0,1,1,list_transformation_PNML2XML_tool({'input_str': ''}),PNML2XML.get_tool(),"[{'tool_name': 'list_transformation_PNML2XML_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T15:01:15.988975
What are the configuration values for the Mantis2XML transformation?,single_tool,1,1.0,1,1,list_transformation_Mantis2XML_tool({'input_str': ''}),Mantis2XML.get_tool(),"[{'tool_name': 'list_transformation_Mantis2XML_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T15:01:19.719908
I need to see the configured settings for the XML2Ant transformation.,single_tool,1,1.0,1,1,apply_XML2Ant_transformation_tool({'input_str': ''}) | apply_XML2Ant_transformation_tool({'input_str': '/path/to/file.xml'}) | list_transformation_XML2Ant_tool({}),XML2Ant.get_tool(),"[{'tool_name': 'list_transformation_XML2Ant_tool', 'arguments': {}}]",[],2025-03-04T15:01:25.955018
Display the configuration parameters for the SimpleClass2SimpleRDBMS transformation.,single_tool,1,0.0,1,0,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': ''}),SimpleClass2SimpleRDBMS.get_tool(),[],"[{'api_name': 'SimpleClass2SimpleRDBMS.get_tool', 'arguments': ''}]",2025-03-04T15:01:30.751482
Display the detailed configuration details for the KM32EMF transformation.,single_tool,1,1.0,1,1,list_transformation_KM32EMF_tool({'input_str': ''}),KM32EMF.get_tool(),"[{'tool_name': 'list_transformation_KM32EMF_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T15:01:35.603136
Show me the full configuration specifications for the KM32DSL transformation.,single_tool,1,1.0,1,1,list_transformation_KM32DSL_tool({'input_str': ''}),KM32DSL.get_tool(),"[{'tool_name': 'list_transformation_KM32DSL_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T15:01:41.082874
What are the configuration parameters for the PNML2XML transformation?,single_tool,1,1.0,1,1,list_transformation_PNML2XML_tool({'input_str': ''}),PNML2XML.get_tool(),"[{'tool_name': 'list_transformation_PNML2XML_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T15:01:46.631105
Can you show the detailed settings configured for the Mantis2XML transformation?,single_tool,1,1.0,1,1,list_transformation_Mantis2XML_tool({'input_str': ''}),Mantis2XML.get_tool(),"[{'tool_name': 'list_transformation_Mantis2XML_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T15:01:50.948442
Provide the detailed configuration information for the XML2Ant transformation.,single_tool,1,0.0,1,0,apply_XML2Ant_transformation_tool({'input_str': ''}),XML2Ant.get_tool(),[],"[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}]",2025-03-04T15:01:57.568297
Get me the complete configuration details for the SimpleClass2SimpleRDBMS transformation.,single_tool,1,1.0,1,1,list_transformation_SimpleClass2SimpleRDBMS_tool({'input_str': ''}),SimpleClass2SimpleRDBMS.get_tool(),"[{'tool_name': 'list_transformation_SimpleClass2SimpleRDBMS_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T15:02:03.405596
I need to see the default configuration values for the KM32EMF transformation.,single_tool,1,1.0,1,1,list_transformation_KM32EMF_tool({'input_str': ''}),KM32EMF.get_tool(),"[{'tool_name': 'list_transformation_KM32EMF_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T15:02:07.452661
What are the configuration options available for the KM32DSL transformation?,single_tool,1,1.0,1,1,list_transformation_KM32DSL_tool({'input_str': ''}),KM32DSL.get_tool(),"[{'tool_name': 'list_transformation_KM32DSL_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T15:02:12.374862
Show me the current settings configured for the PNML2XML transformation.,single_tool,1,1.0,1,1,list_transformation_PNML2XML_tool({'input_str': ''}),PNML2XML.get_tool(),"[{'tool_name': 'list_transformation_PNML2XML_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T15:02:17.825265
Can you display the detailed configuration specification for the Mantis2XML transformation?,single_tool,1,1.0,1,1,list_transformation_Mantis2XML_tool({'input_str': ''}),Mantis2XML.get_tool(),"[{'tool_name': 'list_transformation_Mantis2XML_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T15:02:22.614300
Get the detailed configuration parameters for the XML2Ant transformation.,single_tool,1,1.0,1,1,list_transformation_XML2Ant_tool({'input_str': ''}),XML2Ant.get_tool(),"[{'tool_name': 'list_transformation_XML2Ant_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T15:02:28.077589
Provide the full configuration details for the SimpleClass2SimpleRDBMS transformation.,single_tool,1,0.0,1,0,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': ''}),SimpleClass2SimpleRDBMS.get_tool(),[],"[{'api_name': 'SimpleClass2SimpleRDBMS.get_tool', 'arguments': ''}]",2025-03-04T15:02:31.562881
Show the detailed settings for the KM32EMF transformation.,single_tool,1,1.0,1,1,list_transformation_KM32EMF_tool({'input_str': ''}),KM32EMF.get_tool(),"[{'tool_name': 'list_transformation_KM32EMF_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T15:02:36.595443
What are the configuration values for the KM32DSL transformation?,single_tool,1,1.0,1,1,list_transformation_KM32DSL_tool({'input_str': ''}),KM32DSL.get_tool(),"[{'tool_name': 'list_transformation_KM32DSL_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T15:02:41.375357
I need to see the configured settings for the PNML2XML transformation.,single_tool,1,1.0,1,1,list_transformation_PNML2XML_tool({'input_str': ''}),PNML2XML.get_tool(),"[{'tool_name': 'list_transformation_PNML2XML_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T15:02:46.382014
Display the configuration parameters for the Mantis2XML transformation.,single_tool,1,1.0,1,1,list_transformation_Mantis2XML_tool({'input_str': ''}),Mantis2XML.get_tool(),"[{'tool_name': 'list_transformation_Mantis2XML_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T15:02:50.905055
Display the detailed configuration details for the XML2Ant transformation.,single_tool,1,1.0,1,1,list_transformation_XML2Ant_tool({'input_str': ''}),XML2Ant.get_tool(),"[{'tool_name': 'list_transformation_XML2Ant_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T15:02:55.311888
Show me the full configuration specifications for the SimpleClass2SimpleRDBMS transformation.,single_tool,1,0.0,1,0,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': ''}),SimpleClass2SimpleRDBMS.get_tool(),[],"[{'api_name': 'SimpleClass2SimpleRDBMS.get_tool', 'arguments': ''}]",2025-03-04T15:02:59.604508
What are the configuration parameters for the KM32EMF transformation?,single_tool,1,1.0,1,1,list_transformation_KM32EMF_tool({'input_str': ''}),KM32EMF.get_tool(),"[{'tool_name': 'list_transformation_KM32EMF_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T15:03:03.560739
Can you show the detailed settings configured for the KM32DSL transformation?,single_tool,1,1.0,1,1,list_transformation_KM32DSL_tool({'input_str': ''}),KM32DSL.get_tool(),"[{'tool_name': 'list_transformation_KM32DSL_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T15:03:07.896196
Provide the detailed configuration information for the PNML2XML transformation.,single_tool,1,1.0,1,1,list_transformation_PNML2XML_tool({'input_str': ''}),PNML2XML.get_tool(),"[{'tool_name': 'list_transformation_PNML2XML_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T15:03:13.151933
Get me the complete configuration details for the Mantis2XML transformation.,single_tool,1,1.0,1,1,list_transformation_Mantis2XML_tool({'input_str': ''}),Mantis2XML.get_tool(),"[{'tool_name': 'list_transformation_Mantis2XML_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T15:03:18.511834
I need to see the default configuration values for the XML2Ant transformation.,single_tool,1,0.0,1,0,apply_XML2Ant_transformation_tool({'input_str': ''}) | apply_XML2Ant_transformation_tool({'input_str': ''}),XML2Ant.get_tool(),[],"[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}]",2025-03-04T15:03:24.170786
What are the configuration options available for the SimpleClass2SimpleRDBMS transformation?,single_tool,1,1.0,1,1,list_transformation_SimpleClass2SimpleRDBMS_tool({'input_str': ''}),SimpleClass2SimpleRDBMS.get_tool(),"[{'tool_name': 'list_transformation_SimpleClass2SimpleRDBMS_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T15:03:29.166955
Show me the current settings configured for the KM32EMF transformation.,single_tool,1,1.0,1,1,list_transformation_KM32EMF_tool({'input_str': ''}),KM32EMF.get_tool(),"[{'tool_name': 'list_transformation_KM32EMF_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T15:03:33.972834
Can you display the detailed configuration specification for the KM32DSL transformation?,single_tool,1,1.0,1,1,list_transformation_KM32DSL_tool({'input_str': ''}),KM32DSL.get_tool(),"[{'tool_name': 'list_transformation_KM32DSL_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T15:03:39.191171
Get the detailed configuration parameters for the PNML2XML transformation.,single_tool,1,1.0,1,1,list_transformation_PNML2XML_tool({'input_str': ''}),PNML2XML.get_tool(),"[{'tool_name': 'list_transformation_PNML2XML_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T15:03:44.088449
Provide the full configuration details for the Mantis2XML transformation.,single_tool,1,0.0,1,0,apply_Mantis2XML_transformation_tool({'input_str': ''}),Mantis2XML.get_tool(),[],"[{'api_name': 'Mantis2XML.get_tool', 'arguments': ''}]",2025-03-04T15:03:48.690270
Show the detailed settings for the XML2Ant transformation.,single_tool,1,0.0,1,0,apply_XML2Ant_transformation_tool({'input_str': ''}),XML2Ant.get_tool(),[],"[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}]",2025-03-04T15:03:52.467014
What are the configuration values for the SimpleClass2SimpleRDBMS transformation?,single_tool,1,1.0,1,1,list_transformation_SimpleClass2SimpleRDBMS_tool({'input_str': ''}) | list_transformation_SimpleClass2SimpleRDBMS_tool({'input_str': ''}),SimpleClass2SimpleRDBMS.get_tool(),"[{'tool_name': 'list_transformation_SimpleClass2SimpleRDBMS_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T15:03:57.204311
I need to see the configured settings for the KM32EMF transformation.,single_tool,1,1.0,1,1,list_transformation_KM32EMF_tool({'input_str': ''}),KM32EMF.get_tool(),"[{'tool_name': 'list_transformation_KM32EMF_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T15:04:02.017036
Display the configuration parameters for the KM32DSL transformation.,single_tool,1,1.0,1,1,list_transformation_KM32DSL_tool({'input_str': ''}),KM32DSL.get_tool(),"[{'tool_name': 'list_transformation_KM32DSL_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T15:04:06.841193
Display the detailed configuration details for the PNML2XML transformation.,single_tool,1,1.0,1,1,list_transformation_PNML2XML_tool({'input_str': ''}),PNML2XML.get_tool(),"[{'tool_name': 'list_transformation_PNML2XML_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T15:04:12.387647
Show me the full configuration specifications for the Mantis2XML transformation.,single_tool,1,1.0,1,1,list_transformation_Mantis2XML_tool({'input_str': ''}),Mantis2XML.get_tool(),"[{'tool_name': 'list_transformation_Mantis2XML_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T15:04:16.750991
What are the configuration parameters for the XML2Ant transformation?,single_tool,1,0.0,1,0,apply_XML2Ant_transformation_tool({'input_str': ''}),XML2Ant.get_tool(),[],"[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}]",2025-03-04T15:04:20.910058
Can you show the detailed settings configured for the SimpleClass2SimpleRDBMS transformation?,single_tool,1,1.0,1,1,list_transformation_SimpleClass2SimpleRDBMS_tool({'input_str': ''}),SimpleClass2SimpleRDBMS.get_tool(),"[{'tool_name': 'list_transformation_SimpleClass2SimpleRDBMS_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T15:04:25.970773
Provide the detailed configuration information for the KM32EMF transformation.,single_tool,1,1.0,1,1,list_transformation_KM32EMF_tool({'input_str': ''}),KM32EMF.get_tool(),"[{'tool_name': 'list_transformation_KM32EMF_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T15:04:31.169194
Get me the complete configuration details for the KM32DSL transformation.,single_tool,1,1.0,1,1,list_transformation_KM32DSL_tool({'input_str': ''}),KM32DSL.get_tool(),"[{'tool_name': 'list_transformation_KM32DSL_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T15:04:36.860260
I need to see the default configuration values for the PNML2XML transformation.,single_tool,1,1.0,1,1,list_transformation_PNML2XML_tool({'input_str': ''}),PNML2XML.get_tool(),"[{'tool_name': 'list_transformation_PNML2XML_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T15:04:41.428971
What are the configuration options available for the Mantis2XML transformation?,single_tool,1,1.0,1,1,list_transformation_Mantis2XML_tool({'input_str': ''}),Mantis2XML.get_tool(),"[{'tool_name': 'list_transformation_Mantis2XML_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T15:04:46.559258
Show me the current settings configured for the XML2Ant transformation.,single_tool,1,0.0,1,0,apply_XML2Ant_transformation_tool({'input_str': ''}),XML2Ant.get_tool(),[],"[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}]",2025-03-04T15:04:49.842860
Can you display the detailed configuration specification for the SimpleClass2SimpleRDBMS transformation?,single_tool,1,1.0,1,1,list_transformation_SimpleClass2SimpleRDBMS_tool({'input_str': ''}),SimpleClass2SimpleRDBMS.get_tool(),"[{'tool_name': 'list_transformation_SimpleClass2SimpleRDBMS_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T15:04:53.912409
Get the detailed configuration parameters for the KM32EMF transformation.,single_tool,1,1.0,1,1,list_transformation_KM32EMF_tool({'input_str': ''}),KM32EMF.get_tool(),"[{'tool_name': 'list_transformation_KM32EMF_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T15:04:58.465164
Provide the full configuration details for the KM32DSL transformation.,single_tool,1,1.0,1,1,list_transformation_KM32DSL_tool({'input_str': ''}),KM32DSL.get_tool(),"[{'tool_name': 'list_transformation_KM32DSL_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T15:05:04.548980
Show the detailed settings for the PNML2XML transformation.,single_tool,1,1.0,1,1,list_transformation_PNML2XML_tool({'input_str': ''}),PNML2XML.get_tool(),"[{'tool_name': 'list_transformation_PNML2XML_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T15:05:09.751293
What are the configuration values for the Mantis2XML transformation?,single_tool,1,1.0,1,1,list_transformation_Mantis2XML_tool({'input_str': ''}),Mantis2XML.get_tool(),"[{'tool_name': 'list_transformation_Mantis2XML_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T15:05:16.457056
I need to see the configured settings for the XML2Ant transformation.,single_tool,1,0.0,1,0,apply_XML2Ant_transformation_tool({'input_str': ''}),XML2Ant.get_tool(),[],"[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}]",2025-03-04T15:05:21.160343
Display the configuration parameters for the SimpleClass2SimpleRDBMS transformation.,single_tool,1,0.0,1,0,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': ''}),SimpleClass2SimpleRDBMS.get_tool(),[],"[{'api_name': 'SimpleClass2SimpleRDBMS.get_tool', 'arguments': ''}]",2025-03-04T15:05:27.627027
Display the detailed configuration details for the KM32EMF transformation.,single_tool,1,1.0,1,1,list_transformation_KM32EMF_tool({'input_str': ''}),KM32EMF.get_tool(),"[{'tool_name': 'list_transformation_KM32EMF_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T15:05:33.873804
Show me the full configuration specifications for the KM32DSL transformation.,single_tool,1,1.0,1,1,list_transformation_KM32DSL_tool({'input_str': ''}),KM32DSL.get_tool(),"[{'tool_name': 'list_transformation_KM32DSL_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T15:05:38.443863
What are the configuration parameters for the PNML2XML transformation?,single_tool,1,1.0,1,1,list_transformation_PNML2XML_tool({'input_str': ''}),PNML2XML.get_tool(),"[{'tool_name': 'list_transformation_PNML2XML_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T15:05:43.195092
Can you show the detailed settings configured for the Mantis2XML transformation?,single_tool,1,1.0,1,1,list_transformation_Mantis2XML_tool({'input_str': ''}),Mantis2XML.get_tool(),"[{'tool_name': 'list_transformation_Mantis2XML_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T15:05:48.140948
Apply XML2Ant to the data in ./atl_zoo/Ant2Maven/example/build1.xmi.,single_tool,1,1.0,1,1,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}]",[],2025-03-04T15:05:51.015291
Apply SimpleClass2SimpleRDBMS to ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi immediately.,single_tool,1,1.0,1,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T15:05:56.642828
Transform ./atl_zoo/KM32EMF/Sample-KM3.xmi using KM32EMF as the method.,single_tool,1,1.0,1,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]",[],2025-03-04T15:06:02.352656
Implement KM32DSL on the data at ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi.,single_tool,1,1.0,1,1,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T15:06:09.802424
Use PNML2XML on ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi for the transformation.,single_tool,1,1.0,1,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]",[],2025-03-04T15:06:15.173763
Execute the Mantis2XML algorithm on ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi.,single_tool,1,1.0,1,1,apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T15:06:19.564325
Convert the model contained within ./atl_zoo/Ant2Maven/example/build1.xmi by applying XML2Ant.,single_tool,1,1.0,1,1,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}]",[],2025-03-04T15:06:24.445843
Run SimpleClass2SimpleRDBMS through ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi to produce results.,single_tool,1,1.0,1,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T15:06:30.307942
Apply KM32EMF to every element in ./atl_zoo/KM32EMF/Sample-KM3.xmi.,single_tool,1,1.0,1,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]",[],2025-03-04T15:06:37.075678
Perform KM32DSL operation on data at ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi.,single_tool,1,1.0,1,1,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T15:06:42.275553
Convert the structure of ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi using PNML2XML technique.,single_tool,1,1.0,1,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]",[],2025-03-04T15:06:47.552053
Transform ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi with Mantis2XML enabled by default.,single_tool,1,1.0,1,1,apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | list_transformation_Mantis2XML_tool({}),Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T15:06:56.942978
Use XML2Ant as a filter for ./atl_zoo/Ant2Maven/example/build1.xmi.,single_tool,1,0.0,1,0,apply_XML2XSLT_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi),[],"[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}]",2025-03-04T15:07:01.055368
Execute SimpleClass2SimpleRDBMS from ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi and capture output.,single_tool,1,1.0,1,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T15:07:06.425799
Apply transformation rules defined in KM32EMF to ./atl_zoo/KM32EMF/Sample-KM3.xmi.,single_tool,1,1.0,1,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]",[],2025-03-04T15:07:13.700213
Update ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi according to the instructions in KM32DSL.,single_tool,1,1.0,1,1,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32DSL_tool({}),KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T15:07:20.212120
Implement PNML2XML on data stored within ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi.,single_tool,1,1.0,1,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]",[],2025-03-04T15:07:24.790435
Apply Mantis2XML to the data in ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi.,single_tool,1,1.0,1,1,apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T15:07:29.806480
Apply XML2Ant to ./atl_zoo/Ant2Maven/example/build1.xmi immediately.,single_tool,1,1.0,1,1,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}]",[],2025-03-04T15:07:34.260937
Transform ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi using SimpleClass2SimpleRDBMS as the method.,single_tool,1,1.0,1,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T15:07:39.556709
Implement KM32EMF on the data at ./atl_zoo/KM32EMF/Sample-KM3.xmi.,single_tool,1,1.0,1,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]",[],2025-03-04T15:07:46.421923
Use KM32DSL on ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi for the transformation.,single_tool,1,1.0,1,1,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32DSL_tool({}) | apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32DSL_tool({}),KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T15:07:56.298923
Execute the PNML2XML algorithm on ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi.,single_tool,1,1.0,1,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]",[],2025-03-04T15:08:01.781915
Convert the model contained within ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi by applying Mantis2XML.,single_tool,1,1.0,1,1,apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T15:08:07.220115
Run XML2Ant through ./atl_zoo/Ant2Maven/example/build1.xmi to produce results.,single_tool,1,1.0,1,1,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}]",[],2025-03-04T15:08:13.538276
Apply SimpleClass2SimpleRDBMS to every element in ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi.,single_tool,1,1.0,1,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T15:08:19.818890
Perform KM32EMF operation on data at ./atl_zoo/KM32EMF/Sample-KM3.xmi.,single_tool,1,1.0,1,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]",[],2025-03-04T15:08:27.615330
Convert the structure of ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi using KM32DSL technique.,single_tool,1,1.0,1,1,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T15:08:33.082981
Transform ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi with PNML2XML enabled by default.,single_tool,1,1.0,1,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]",[],2025-03-04T15:08:41.484052
Use Mantis2XML as a filter for ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi.,single_tool,1,1.0,1,1,apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T15:08:47.845422
Execute XML2Ant from ./atl_zoo/Ant2Maven/example/build1.xmi and capture output.,single_tool,1,1.0,1,1,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}]",[],2025-03-04T15:08:53.888084
Apply transformation rules defined in SimpleClass2SimpleRDBMS to ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi.,single_tool,1,1.0,1,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T15:08:59.001853
Update ./atl_zoo/KM32EMF/Sample-KM3.xmi according to the instructions in KM32EMF.,single_tool,1,1.0,1,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | list_transformation_KM32EMF_tool({}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]",[],2025-03-04T15:09:05.245422
Implement KM32DSL on data stored within ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi.,single_tool,1,1.0,1,1,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T15:09:11.079636
Apply PNML2XML to the data in ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi.,single_tool,1,1.0,1,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]",[],2025-03-04T15:09:15.922853
Apply Mantis2XML to ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi immediately.,single_tool,1,1.0,1,1,apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T15:09:21.474291
Transform ./atl_zoo/Ant2Maven/example/build1.xmi using XML2Ant as the method.,single_tool,1,1.0,1,1,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}]",[],2025-03-04T15:09:26.635793
Implement SimpleClass2SimpleRDBMS on the data at ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi.,single_tool,1,1.0,1,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T15:09:34.110308
Use KM32EMF on ./atl_zoo/KM32EMF/Sample-KM3.xmi for the transformation.,single_tool,1,1.0,1,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]",[],2025-03-04T15:09:39.885540
Execute the KM32DSL algorithm on ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi.,single_tool,1,1.0,1,1,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T15:09:45.876790
Convert the model contained within ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi by applying PNML2XML.,single_tool,1,1.0,1,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]",[],2025-03-04T15:09:50.809310
Run Mantis2XML through ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi to produce results.,single_tool,1,1.0,1,1,apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T15:09:58.026148
Apply XML2Ant to every element in ./atl_zoo/Ant2Maven/example/build1.xmi.,single_tool,1,1.0,1,1,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}]",[],2025-03-04T15:10:02.098820
Perform SimpleClass2SimpleRDBMS operation on data at ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi.,single_tool,1,1.0,1,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T15:10:06.126365
Convert the structure of ./atl_zoo/KM32EMF/Sample-KM3.xmi using KM32EMF technique.,single_tool,1,1.0,1,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]",[],2025-03-04T15:10:12.730596
Transform ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi with KM32DSL enabled by default.,single_tool,1,0.0,1,0,No tools called,KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),[],"[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T15:10:30.640753
Use PNML2XML as a filter for ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi.,single_tool,1,1.0,1,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]",[],2025-03-04T15:10:38.249548
Execute Mantis2XML from ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi and capture output.,single_tool,1,1.0,1,1,apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T15:10:43.991675
Apply transformation rules defined in XML2Ant to ./atl_zoo/Ant2Maven/example/build1.xmi.,single_tool,1,0.0,1,0,apply_XML2XSLT_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi),[],"[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}]",2025-03-04T15:10:49.113512
Update ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi according to the instructions in SimpleClass2SimpleRDBMS.,single_tool,1,1.0,1,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T15:10:53.438754
Implement KM32EMF on data stored within ./atl_zoo/KM32EMF/Sample-KM3.xmi.,single_tool,1,1.0,1,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]",[],2025-03-04T15:11:00.509622
Apply KM32DSL to the data in ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi.,single_tool,1,1.0,1,1,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T15:11:04.669155
Apply PNML2XML to ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi immediately.,single_tool,1,1.0,1,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]",[],2025-03-04T15:11:07.968664
Transform ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi using Mantis2XML as the method.,single_tool,1,1.0,1,1,apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T15:11:11.399692
Implement XML2Ant on the data at ./atl_zoo/Ant2Maven/example/build1.xmi.,single_tool,1,1.0,1,1,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}]",[],2025-03-04T15:11:16.945777
Use SimpleClass2SimpleRDBMS on ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi for the transformation.,single_tool,1,1.0,1,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T15:11:21.991200
Execute the KM32EMF algorithm on ./atl_zoo/KM32EMF/Sample-KM3.xmi.,single_tool,1,1.0,1,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]",[],2025-03-04T15:11:27.563841
Convert the model contained within ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi by applying KM32DSL.,single_tool,1,1.0,1,1,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T15:11:34.734541
Run PNML2XML through ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi to produce results.,single_tool,1,1.0,1,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]",[],2025-03-04T15:11:40.381914
Apply Mantis2XML to every element in ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi.,single_tool,1,1.0,1,1,apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T15:11:46.443072
Perform XML2Ant operation on data at ./atl_zoo/Ant2Maven/example/build1.xmi.,single_tool,1,1.0,1,1,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}]",[],2025-03-04T15:11:48.920538
Convert the structure of ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi using SimpleClass2SimpleRDBMS technique.,single_tool,1,1.0,1,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T15:11:55.757904
Transform ./atl_zoo/KM32EMF/Sample-KM3.xmi with KM32EMF enabled by default.,single_tool,1,1.0,1,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]",[],2025-03-04T15:12:03.582935
Use KM32DSL as a filter for ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi.,single_tool,1,0.0,1,0,No tools called,KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),[],"[{'api_name': 'KM32DSL.apply_tool', 'arguments': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}]",2025-03-04T15:12:20.564730
Execute PNML2XML from ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi and capture output.,single_tool,1,1.0,1,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]",[],2025-03-04T15:12:26.335523
Apply transformation rules defined in Mantis2XML to ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi.,single_tool,1,1.0,1,1,apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T15:12:31.761908
Update ./atl_zoo/Ant2Maven/example/build1.xmi according to the instructions in XML2Ant.,single_tool,1,1.0,1,1,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}]",[],2025-03-04T15:12:37.057257
Implement SimpleClass2SimpleRDBMS on data stored within ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi.,single_tool,1,1.0,1,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T15:12:42.430394
Apply KM32EMF to the data in ./atl_zoo/KM32EMF/Sample-KM3.xmi.,single_tool,1,1.0,1,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]",[],2025-03-04T15:12:48.273546
Apply KM32DSL to ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi immediately.,single_tool,1,1.0,1,1,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T15:12:53.936290
Transform ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi using PNML2XML as the method.,single_tool,1,1.0,1,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]",[],2025-03-04T15:12:59.303792
Implement Mantis2XML on the data at ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi.,single_tool,1,1.0,1,1,apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T15:13:06.851896
Use XML2Ant on ./atl_zoo/Ant2Maven/example/build1.xmi for the transformation.,single_tool,1,1.0,1,1,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}]",[],2025-03-04T15:13:12.340371
Execute the SimpleClass2SimpleRDBMS algorithm on ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi.,single_tool,1,1.0,1,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T15:13:25.499861
Convert the model contained within ./atl_zoo/KM32EMF/Sample-KM3.xmi by applying KM32EMF.,single_tool,1,1.0,1,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]",[],2025-03-04T15:13:32.922349
Run KM32DSL through ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi to produce results.,single_tool,1,1.0,1,1,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T15:13:37.951843
Apply PNML2XML to every element in ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi.,single_tool,1,1.0,1,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]",[],2025-03-04T15:13:43.123689
Perform Mantis2XML operation on data at ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi.,single_tool,1,1.0,1,1,apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T15:13:48.801976
Convert the structure of ./atl_zoo/Ant2Maven/example/build1.xmi using XML2Ant technique.,single_tool,1,1.0,1,1,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}]",[],2025-03-04T15:13:53.431926
Transform ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi with SimpleClass2SimpleRDBMS enabled by default.,single_tool,1,1.0,1,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T15:13:59.404543
Use KM32EMF as a filter for ./atl_zoo/KM32EMF/Sample-KM3.xmi.,single_tool,1,0.0,1,0,list_transformation_KM32EMF_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi),[],"[{'api_name': 'KM32EMF.apply_tool', 'arguments': './atl_zoo/KM32EMF/Sample-KM3.xmi'}]",2025-03-04T15:14:05.454201
Execute KM32DSL from ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi and capture output.,single_tool,1,1.0,1,1,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T15:14:11.838056
Apply transformation rules defined in PNML2XML to ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi.,single_tool,1,1.0,1,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]",[],2025-03-04T15:14:17.959854
Update ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi according to the instructions in Mantis2XML.,single_tool,1,1.0,1,1,apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | list_transformation_Mantis2XML_tool({}),Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T15:14:24.389891
Implement XML2Ant on data stored within ./atl_zoo/Ant2Maven/example/build1.xmi.,single_tool,1,1.0,1,1,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}]",[],2025-03-04T15:14:28.704389
Apply SimpleClass2SimpleRDBMS to the data in ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi.,single_tool,1,1.0,1,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T15:14:33.887433
Apply KM32EMF to ./atl_zoo/KM32EMF/Sample-KM3.xmi immediately.,single_tool,1,1.0,1,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]",[],2025-03-04T15:14:42.946286
Transform ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi using KM32DSL as the method.,single_tool,1,1.0,1,1,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T15:14:48.812697
Implement PNML2XML on the data at ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi.,single_tool,1,1.0,1,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]",[],2025-03-04T15:14:53.404417
Use Mantis2XML on ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi for the transformation.,single_tool,1,1.0,1,1,apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T15:15:01.271245
Execute the XML2Ant algorithm on ./atl_zoo/Ant2Maven/example/build1.xmi.,single_tool,1,1.0,1,1,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}]",[],2025-03-04T15:15:08.655787
Convert the model contained within ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi by applying SimpleClass2SimpleRDBMS.,single_tool,1,1.0,1,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T15:15:14.094019
Run KM32EMF through ./atl_zoo/KM32EMF/Sample-KM3.xmi to produce results.,single_tool,1,1.0,1,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]",[],2025-03-04T15:15:21.482001
Apply KM32DSL to every element in ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi.,single_tool,1,1.0,1,1,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T15:15:25.392632
Perform PNML2XML operation on data at ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi.,single_tool,1,1.0,1,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]",[],2025-03-04T15:15:28.933792
Convert the structure of ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi using Mantis2XML technique.,single_tool,1,1.0,1,1,apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T15:15:34.630716
Transform ./atl_zoo/Ant2Maven/example/build1.xmi with XML2Ant enabled by default.,single_tool,1,1.0,1,1,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}]",[],2025-03-04T15:15:39.487853
Use SimpleClass2SimpleRDBMS as a filter for ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi.,single_tool,1,1.0,1,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T15:15:46.764828
Execute KM32EMF from ./atl_zoo/KM32EMF/Sample-KM3.xmi and capture output.,single_tool,1,1.0,1,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]",[],2025-03-04T15:15:53.606686
Apply transformation rules defined in KM32DSL to ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi.,single_tool,1,1.0,1,1,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T15:15:59.604418
Show me the configuration settings for converting a PNML into a XML model,single_tool,2,0.0,1,0,apply_PNML2XML_transformation_tool({'input_str': ''}),PNML2XML.get_tool(),[],"[{'api_name': 'PNML2XML.get_tool', 'arguments': ''}]",2025-03-04T15:16:04.642575
Display the detailed transformation specifications required to convert Mantis to XML,single_tool,2,1.0,1,1,list_transformation_Mantis2XML_tool({'input_str': ''}),Mantis2XML.get_tool(),"[{'tool_name': 'list_transformation_Mantis2XML_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T15:16:10.702654
Reveal the necessary parameters for transforming XML to Ant,single_tool,2,0.0,1,0,apply_XML2Ant_transformation_tool({'input_str': ''}),XML2Ant.get_tool(),[],"[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}]",2025-03-04T15:16:15.258740
Explain the step-by-step process for configuring a SimpleClass model to be transformed into a SimpleRDBMS model,single_tool,2,0.0,1,0,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': ''}),SimpleClass2SimpleRDBMS.get_tool(),[],"[{'api_name': 'SimpleClass2SimpleRDBMS.get_tool', 'arguments': ''}]",2025-03-04T15:16:19.555371
Provide me with the detailed configuration needed for the transformation from KM3 to EMF,single_tool,2,0.0,1,0,apply_KM32EMF_transformation_tool({'input_str': ''}),KM32EMF.get_tool(),[],"[{'api_name': 'KM32EMF.get_tool', 'arguments': ''}]",2025-03-04T15:16:24.427875
Clarify how to set up a KM3 model for conversion to a DSL model,single_tool,2,0.0,1,0,apply_KM32DSL_transformation_tool({'input_str': ''}) | apply_KM32DSL_transformation_tool({'input_str': '/path/to/km3_model.xmi'}),KM32DSL.get_tool(),[],"[{'api_name': 'KM32DSL.get_tool', 'arguments': ''}]",2025-03-04T15:16:33.172965
Specify the requirements for configuring a transformation from PNML to XML model,single_tool,2,1.0,1,1,list_transformation_PNML2XML_tool({'input_str': ''}),PNML2XML.get_tool(),"[{'tool_name': 'list_transformation_PNML2XML_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T15:16:39.191780
Describe the settings needed to transform Mantis into an XML model,single_tool,2,0.0,1,0,apply_Mantis2XML_transformation_tool({'input_str': ''}),Mantis2XML.get_tool(),[],"[{'api_name': 'Mantis2XML.get_tool', 'arguments': ''}]",2025-03-04T15:16:44.306727
Reveal how to configure a transformation that converts a XML into a Ant model,single_tool,2,0.0,1,0,apply_XML2Ant_transformation_tool({'input_str': ''}),XML2Ant.get_tool(),[],"[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}]",2025-03-04T15:16:47.226958
Elucidate the process of transforming a SimpleClass into a SimpleRDBMS model with correct configuration settings,single_tool,2,0.0,1,0,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': ''}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': '/path/to/SimpleClass.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': '/path/to/SimpleClass.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': '/path/to/SimpleClass.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': '/path/to/SimpleClass.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': '/path/to/SimpleClass.xmi'}),SimpleClass2SimpleRDBMS.get_tool(),[],"[{'api_name': 'SimpleClass2SimpleRDBMS.get_tool', 'arguments': ''}]",2025-03-04T15:16:56.284914
Show me the exact parameters needed for transforming KM3 to EMF model,single_tool,2,0.0,1,0,apply_KM32EMF_transformation_tool({'input_str': ''}) | apply_KM32EMF_transformation_tool({'input_str': '/path/to/your/km3_model.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': 'C:/Users/username/Documents/km3_model.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': 'D:/km3_model.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': '/path/to/your/km3_model.xmi'}),KM32EMF.get_tool(),[],"[{'api_name': 'KM32EMF.get_tool', 'arguments': ''}]",2025-03-04T15:17:04.821541
Explain how to configure transformation from KM3 to DSL model,single_tool,2,0.0,1,0,apply_KM32DSL_transformation_tool({'input_str': ''}),KM32DSL.get_tool(),[],"[{'api_name': 'KM32DSL.get_tool', 'arguments': ''}]",2025-03-04T15:17:09.050418
Provide an overview of the necessary settings for converting PNML into a XML model,single_tool,2,0.0,1,0,apply_PNML2XML_transformation_tool({'input_str': ''}),PNML2XML.get_tool(),[],"[{'api_name': 'PNML2XML.get_tool', 'arguments': ''}]",2025-03-04T15:17:11.598747
Specify what configuration is required for transforming Mantis to XML,single_tool,2,0.0,1,0,apply_Mantis2XML_transformation_tool({'input_str': ''}),Mantis2XML.get_tool(),[],"[{'api_name': 'Mantis2XML.get_tool', 'arguments': ''}]",2025-03-04T15:17:15.311533
Provide detailed instructions on configuring a transformation that converts XML into a Ant model,single_tool,2,0.0,1,0,apply_XML2Ant_transformation_tool({'input_str': 'Please provide the file path of the XML model you want to convert.'}),XML2Ant.get_tool(),[],"[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}]",2025-03-04T15:17:21.124230
Show me the transformation settings for converting a SimpleClass model into a SimpleRDBMS model,single_tool,2,0.0,1,0,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': ''}),SimpleClass2SimpleRDBMS.get_tool(),[],"[{'api_name': 'SimpleClass2SimpleRDBMS.get_tool', 'arguments': ''}]",2025-03-04T15:17:26.321754
Show me the configuration settings for converting a KM3 into a EMF model,single_tool,2,0.0,1,0,apply_KM32EMF_transformation_tool({'input_str': ''}),KM32EMF.get_tool(),[],"[{'api_name': 'KM32EMF.get_tool', 'arguments': ''}]",2025-03-04T15:17:31.708645
Display the detailed transformation specifications required to convert KM3 to DSL,single_tool,2,1.0,1,1,list_transformation_KM32DSL_tool({'input_str': ''}),KM32DSL.get_tool(),"[{'tool_name': 'list_transformation_KM32DSL_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T15:17:36.713534
Reveal the necessary parameters for transforming PNML to XML,single_tool,2,0.0,1,0,apply_PNML2XML_transformation_tool({'input_str': ''}) | apply_PNML2XML_transformation_tool({'input_str': '/path/to/model.pnml'}) | apply_PNML2XML_transformation_tool({'input_str': 'C:/Users/user/Desktop/model.pnml'}) | apply_PNML2XML_transformation_tool({'input_str': '/path/to/model.pnml'}) | apply_PNML2XML_transformation_tool({'input_str': 'model.pnml'}) | apply_PNML2XML_transformation_tool({'input_str': 'model.pnml'}) | apply_PNML2XML_transformation_tool({'input_file': 'model.pnml'}) | apply_PNML2XML_transformation_tool({'input_str': 'model.pnml'}) | apply_PNML2XML_transformation_tool({'input_str': 'C:/Users/user/Desktop/model.pnml'}) | apply_PNML2XML_transformation_tool({'input_str': 'model.pnml'}),PNML2XML.get_tool(),[],"[{'api_name': 'PNML2XML.get_tool', 'arguments': ''}]",2025-03-04T15:17:51.506274
Explain the step-by-step process for configuring a Mantis model to be transformed into a XML model,single_tool,2,0.0,1,0,apply_Mantis2XML_transformation_tool({'input_str': ''}),Mantis2XML.get_tool(),[],"[{'api_name': 'Mantis2XML.get_tool', 'arguments': ''}]",2025-03-04T15:17:55.549252
Provide me with the detailed configuration needed for the transformation from XML to Ant,single_tool,2,0.0,1,0,apply_XML2Ant_transformation_tool({'input_str': ''}),XML2Ant.get_tool(),[],"[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}]",2025-03-04T15:18:00.099296
Clarify how to set up a SimpleClass model for conversion to a SimpleRDBMS model,single_tool,2,0.0,1,0,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': ''}),SimpleClass2SimpleRDBMS.get_tool(),[],"[{'api_name': 'SimpleClass2SimpleRDBMS.get_tool', 'arguments': ''}]",2025-03-04T15:18:04.203968
Specify the requirements for configuring a transformation from KM3 to EMF model,single_tool,2,1.0,1,1,list_transformation_KM32EMF_tool({'input_str': ''}),KM32EMF.get_tool(),"[{'tool_name': 'list_transformation_KM32EMF_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T15:18:09.138631
Describe the settings needed to transform KM3 into an DSL model,single_tool,2,0.0,1,0,apply_KM32DSL_transformation_tool({'input_str': ''}),KM32DSL.get_tool(),[],"[{'api_name': 'KM32DSL.get_tool', 'arguments': ''}]",2025-03-04T15:18:14.199970
Reveal how to configure a transformation that converts a PNML into a XML model,single_tool,2,0.0,1,0,apply_PNML2XML_transformation_tool({'input_str': ''}),PNML2XML.get_tool(),[],"[{'api_name': 'PNML2XML.get_tool', 'arguments': ''}]",2025-03-04T15:18:21.925011
Elucidate the process of transforming a Mantis into a XML model with correct configuration settings,single_tool,2,0.0,1,0,apply_Mantis2XML_transformation_tool({'input_str': ''}) | apply_Mantis2XML_transformation_tool({'input_str': '/path/to/mantis.model'}) | apply_Mantis2XML_transformation_tool({'input_str': '/path/to/mantis.model'}) | apply_Mantis2XML_transformation_tool({'input_str': '/path/to/mantis.model'}) | apply_Mantis2XML_transformation_tool({'input_str': '/Users/username/Documents/mantis.model'}) | apply_Mantis2XML_transformation_tool({'input_str': 'C:/Users/username/Documents/mantis.model'}) | apply_Mantis2XML_transformation_tool({'input_str': '/path/to/mantis.model'}),Mantis2XML.get_tool(),[],"[{'api_name': 'Mantis2XML.get_tool', 'arguments': ''}]",2025-03-04T15:18:32.994947
Show me the exact parameters needed for transforming XML to Ant model,single_tool,2,0.0,1,0,apply_XML2Ant_transformation_tool({'input_str': ''}) | apply_XML2Ant_transformation_tool({'input_str': '/path/to/your/xml/file.xml'}) | apply_XML2Ant_transformation_tool({'input_str': '/path/to/your/xml/file.xml'}),XML2Ant.get_tool(),[],"[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}]",2025-03-04T15:18:39.768621
Explain how to configure transformation from SimpleClass to SimpleRDBMS model,single_tool,2,0.0,1,0,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': ''}),SimpleClass2SimpleRDBMS.get_tool(),[],"[{'api_name': 'SimpleClass2SimpleRDBMS.get_tool', 'arguments': ''}]",2025-03-04T15:18:44.951925
Provide an overview of the necessary settings for converting KM3 into a EMF model,single_tool,2,1.0,1,1,list_transformation_KM32EMF_tool({'input_str': ''}),KM32EMF.get_tool(),"[{'tool_name': 'list_transformation_KM32EMF_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T15:18:50.671924
Specify what configuration is required for transforming KM3 to DSL,single_tool,2,0.0,1,0,apply_KM32DSL_transformation_tool({'input_str': ''}) | apply_KM32DSL_transformation_tool({'input_str': '/path/to/your/km3_model.xmi'}) | apply_KM32DSL_transformation_tool({'input_str': './model.xmi'}),KM32DSL.get_tool(),[],"[{'api_name': 'KM32DSL.get_tool', 'arguments': ''}]",2025-03-04T15:18:58.332963
Provide detailed instructions on configuring a transformation that converts PNML into a XML model,single_tool,2,0.0,1,0,apply_PNML2XML_transformation_tool({'input_str': 'PNML file path'}),PNML2XML.get_tool(),[],"[{'api_name': 'PNML2XML.get_tool', 'arguments': ''}]",2025-03-04T15:19:08.231529
Show me the transformation settings for converting a Mantis model into a XML model,single_tool,2,0.0,1,0,apply_Mantis2XML_transformation_tool({'input_str': ''}),Mantis2XML.get_tool(),[],"[{'api_name': 'Mantis2XML.get_tool', 'arguments': ''}]",2025-03-04T15:19:12.685794
Show me the configuration settings for converting a XML into a Ant model,single_tool,2,0.0,1,0,apply_XML2Ant_transformation_tool({'input_str': ''}),XML2Ant.get_tool(),[],"[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}]",2025-03-04T15:19:17.470903
Display the detailed transformation specifications required to convert SimpleClass to SimpleRDBMS,single_tool,2,1.0,1,1,list_transformation_SimpleClass2SimpleRDBMS_tool({'input_str': ''}),SimpleClass2SimpleRDBMS.get_tool(),"[{'tool_name': 'list_transformation_SimpleClass2SimpleRDBMS_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T15:19:22.282424
Reveal the necessary parameters for transforming KM3 to EMF,single_tool,2,1.0,1,1,apply_KM32EMF_transformation_tool({'input_str': ''}) | apply_KM32EMF_transformation_tool({'input_str': '/path/to/km3_model.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': 'C:/Users/user/Desktop/km3_model.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': 'C:/Users/user/Desktop/km3_model.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': 'C:/Users/user/Desktop/km3_model.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': 'C:/Users/user/Desktop/km3_model.xmi'}) | list_transformation_KM32EMF_tool({}),KM32EMF.get_tool(),"[{'tool_name': 'list_transformation_KM32EMF_tool', 'arguments': {}}]",[],2025-03-04T15:19:32.867560
Explain the step-by-step process for configuring a KM3 model to be transformed into a DSL model,single_tool,2,0.0,1,0,apply_KM32DSL_transformation_tool({'input_str': 'path_to_km3_model'}),KM32DSL.get_tool(),[],"[{'api_name': 'KM32DSL.get_tool', 'arguments': ''}]",2025-03-04T15:19:40.171517
Provide me with the detailed configuration needed for the transformation from PNML to XML,single_tool,2,0.0,1,0,apply_PNML2XML_transformation_tool({'input_str': ''}),PNML2XML.get_tool(),[],"[{'api_name': 'PNML2XML.get_tool', 'arguments': ''}]",2025-03-04T15:19:44.518816
Clarify how to set up a Mantis model for conversion to a XML model,single_tool,2,1.0,1,1,list_transformation_Mantis2XML_tool({'input_str': ''}),Mantis2XML.get_tool(),"[{'tool_name': 'list_transformation_Mantis2XML_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T15:19:51.736764
Specify the requirements for configuring a transformation from XML to Ant model,single_tool,2,0.0,1,0,apply_XML2Ant_transformation_tool({'input_str': 'XML file path'}),XML2Ant.get_tool(),[],"[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}]",2025-03-04T15:19:56.547960
Describe the settings needed to transform SimpleClass into an SimpleRDBMS model,single_tool,2,0.0,1,0,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': ''}),SimpleClass2SimpleRDBMS.get_tool(),[],"[{'api_name': 'SimpleClass2SimpleRDBMS.get_tool', 'arguments': ''}]",2025-03-04T15:20:01.823454
Reveal how to configure a transformation that converts a KM3 into a EMF model,single_tool,2,0.0,1,0,apply_KM32EMF_transformation_tool({'input_str': ''}),KM32EMF.get_tool(),[],"[{'api_name': 'KM32EMF.get_tool', 'arguments': ''}]",2025-03-04T15:20:07.798805
Elucidate the process of transforming a KM3 into a DSL model with correct configuration settings,single_tool,2,1.0,1,1,apply_KM32DSL_transformation_tool({'input_str': 'KM3 model file path'}) | apply_KM32DSL_transformation_tool({'input_str': '/path/to/models/example.km3'}) | list_transformation_KM32DSL_tool({}),KM32DSL.get_tool(),"[{'tool_name': 'list_transformation_KM32DSL_tool', 'arguments': {}}]",[],2025-03-04T15:20:19.203427
Show me the exact parameters needed for transforming PNML to XML model,single_tool,2,0.0,1,0,No tools called,PNML2XML.get_tool(),[],"[{'api_name': 'PNML2XML.get_tool', 'arguments': ''}]",2025-03-04T15:20:37.804731
Explain how to configure transformation from Mantis to XML model,single_tool,2,0.0,1,0,apply_Mantis2XML_transformation_tool({'input_str': ''}),Mantis2XML.get_tool(),[],"[{'api_name': 'Mantis2XML.get_tool', 'arguments': ''}]",2025-03-04T15:20:44.184018
Provide an overview of the necessary settings for converting XML into a Ant model,single_tool,2,0.0,1,0,apply_XML2Ant_transformation_tool({'input_str': ''}),XML2Ant.get_tool(),[],"[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}]",2025-03-04T15:20:48.869034
Specify what configuration is required for transforming SimpleClass to SimpleRDBMS,single_tool,2,0.0,1,0,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': ''}),SimpleClass2SimpleRDBMS.get_tool(),[],"[{'api_name': 'SimpleClass2SimpleRDBMS.get_tool', 'arguments': ''}]",2025-03-04T15:20:53.837778
Provide detailed instructions on configuring a transformation that converts KM3 into a EMF model,single_tool,2,0.0,1,0,apply_KM32EMF_transformation_tool({'input_str': 'path_to_km3_model_file'}),KM32EMF.get_tool(),[],"[{'api_name': 'KM32EMF.get_tool', 'arguments': ''}]",2025-03-04T15:21:02.948036
Show me the transformation settings for converting a KM3 model into a DSL model,single_tool,2,0.0,1,0,apply_KM32DSL_transformation_tool({'input_str': ''}),KM32DSL.get_tool(),[],"[{'api_name': 'KM32DSL.get_tool', 'arguments': ''}]",2025-03-04T15:21:08.520869
Show me the configuration settings for converting a PNML into a XML model,single_tool,2,0.0,1,0,apply_PNML2XML_transformation_tool({'input_str': ''}),PNML2XML.get_tool(),[],"[{'api_name': 'PNML2XML.get_tool', 'arguments': ''}]",2025-03-04T15:21:13.194487
Display the detailed transformation specifications required to convert Mantis to XML,single_tool,2,1.0,1,1,list_transformation_Mantis2XML_tool({'input_str': ''}),Mantis2XML.get_tool(),"[{'tool_name': 'list_transformation_Mantis2XML_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T15:21:18.476348
Reveal the necessary parameters for transforming XML to Ant,single_tool,2,0.0,1,0,apply_XML2Ant_transformation_tool({'input_str': ''}),XML2Ant.get_tool(),[],"[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}]",2025-03-04T15:21:22.853239
Explain the step-by-step process for configuring a SimpleClass model to be transformed into a SimpleRDBMS model,single_tool,2,0.0,1,0,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': ''}),SimpleClass2SimpleRDBMS.get_tool(),[],"[{'api_name': 'SimpleClass2SimpleRDBMS.get_tool', 'arguments': ''}]",2025-03-04T15:21:28.184607
Provide me with the detailed configuration needed for the transformation from KM3 to EMF,single_tool,2,0.0,1,0,apply_KM32EMF_transformation_tool({'input_str': ''}),KM32EMF.get_tool(),[],"[{'api_name': 'KM32EMF.get_tool', 'arguments': ''}]",2025-03-04T15:21:31.972908
Clarify how to set up a KM3 model for conversion to a DSL model,single_tool,2,0.0,1,0,apply_KM32DSL_transformation_tool({'input_str': ''}) | apply_KM32DSL_transformation_tool({'input_str': '/path/to/km3_model.xmi'}),KM32DSL.get_tool(),[],"[{'api_name': 'KM32DSL.get_tool', 'arguments': ''}]",2025-03-04T15:21:40.990836
Specify the requirements for configuring a transformation from PNML to XML model,single_tool,2,1.0,1,1,list_transformation_PNML2XML_tool({'input_str': ''}),PNML2XML.get_tool(),"[{'tool_name': 'list_transformation_PNML2XML_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T15:21:48.258572
Describe the settings needed to transform Mantis into an XML model,single_tool,2,0.0,1,0,apply_Mantis2XML_transformation_tool({'input_str': ''}),Mantis2XML.get_tool(),[],"[{'api_name': 'Mantis2XML.get_tool', 'arguments': ''}]",2025-03-04T15:21:51.811156
Reveal how to configure a transformation that converts a XML into a Ant model,single_tool,2,0.0,1,0,apply_XML2Ant_transformation_tool({'input_str': ''}) | apply_XML2Ant_transformation_tool({'input_str': '/path/to/input.xml'}) | apply_XML2Ant_transformation_tool({'input_str': '/path/to/input.xml'}) | apply_XML2Ant_transformation_tool({'input_str': 'C:/Users/user/Desktop/input.xml'}),XML2Ant.get_tool(),[],"[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}]",2025-03-04T15:21:58.337174
Elucidate the process of transforming a SimpleClass into a SimpleRDBMS model with correct configuration settings,single_tool,2,0.0,1,0,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': ''}),SimpleClass2SimpleRDBMS.get_tool(),[],"[{'api_name': 'SimpleClass2SimpleRDBMS.get_tool', 'arguments': ''}]",2025-03-04T15:22:02.991604
Show me the exact parameters needed for transforming KM3 to EMF model,single_tool,2,0.0,1,0,apply_KM32EMF_transformation_tool({'input_str': ''}) | apply_KM32EMF_transformation_tool({'input_str': '/path/to/your/km3_model.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': 'C:/Users/username/Documents/km3_model.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': 'D:/km3_model.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': '/Users/username/Documents/km3_model.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': 'C:/Users/username/Documents/km3_model.xmi'}),KM32EMF.get_tool(),[],"[{'api_name': 'KM32EMF.get_tool', 'arguments': ''}]",2025-03-04T15:22:12.494057
Explain how to configure transformation from KM3 to DSL model,single_tool,2,0.0,1,0,apply_KM32DSL_transformation_tool({'input_str': ''}),KM32DSL.get_tool(),[],"[{'api_name': 'KM32DSL.get_tool', 'arguments': ''}]",2025-03-04T15:22:17.710769
Provide an overview of the necessary settings for converting PNML into a XML model,single_tool,2,0.0,1,0,apply_PNML2XML_transformation_tool({'input_str': ''}),PNML2XML.get_tool(),[],"[{'api_name': 'PNML2XML.get_tool', 'arguments': ''}]",2025-03-04T15:22:21.394324
Specify what configuration is required for transforming Mantis to XML,single_tool,2,0.0,1,0,apply_Mantis2XML_transformation_tool({'input_str': ''}),Mantis2XML.get_tool(),[],"[{'api_name': 'Mantis2XML.get_tool', 'arguments': ''}]",2025-03-04T15:22:25.225504
Provide detailed instructions on configuring a transformation that converts XML into a Ant model,single_tool,2,0.0,1,0,apply_XML2Ant_transformation_tool({'input_str': 'Provide the file path to the XML file you want to convert.'}),XML2Ant.get_tool(),[],"[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}]",2025-03-04T15:22:30.115558
Show me the transformation settings for converting a SimpleClass model into a SimpleRDBMS model,single_tool,2,0.0,1,0,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': ''}),SimpleClass2SimpleRDBMS.get_tool(),[],"[{'api_name': 'SimpleClass2SimpleRDBMS.get_tool', 'arguments': ''}]",2025-03-04T15:22:34.496965
Show me the configuration settings for converting a KM3 into a EMF model,single_tool,2,0.0,1,0,apply_KM32EMF_transformation_tool({'input_str': ''}),KM32EMF.get_tool(),[],"[{'api_name': 'KM32EMF.get_tool', 'arguments': ''}]",2025-03-04T15:22:38.300427
Display the detailed transformation specifications required to convert KM3 to DSL,single_tool,2,1.0,1,1,list_transformation_KM32DSL_tool({'input_str': ''}),KM32DSL.get_tool(),"[{'tool_name': 'list_transformation_KM32DSL_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T15:22:43.592032
Reveal the necessary parameters for transforming PNML to XML,single_tool,2,1.0,1,1,apply_PNML2XML_transformation_tool({'input_str': ''}) | apply_PNML2XML_transformation_tool({'input_str': '/path/to/model.pnml'}) | apply_PNML2XML_transformation_tool({'input_str': 'C:/Users/user/Desktop/model.pnml'}) | list_transformation_PNML2XML_tool({}) | apply_PNML2XML_transformation_tool({'input_str': 'C:/Users/user/Desktop/model.pnml'}) | list_transformation_PNML2XML_tool({}),PNML2XML.get_tool(),"[{'tool_name': 'list_transformation_PNML2XML_tool', 'arguments': {}}]",[],2025-03-04T15:22:53.947990
Explain the step-by-step process for configuring a Mantis model to be transformed into a XML model,single_tool,2,0.0,1,0,apply_Mantis2XML_transformation_tool({'input_str': ''}),Mantis2XML.get_tool(),[],"[{'api_name': 'Mantis2XML.get_tool', 'arguments': ''}]",2025-03-04T15:22:58.164758
Provide me with the detailed configuration needed for the transformation from XML to Ant,single_tool,2,0.0,1,0,apply_XML2Ant_transformation_tool({'input_str': ''}),XML2Ant.get_tool(),[],"[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}]",2025-03-04T15:23:01.014950
Clarify how to set up a SimpleClass model for conversion to a SimpleRDBMS model,single_tool,2,0.0,1,0,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': ''}),SimpleClass2SimpleRDBMS.get_tool(),[],"[{'api_name': 'SimpleClass2SimpleRDBMS.get_tool', 'arguments': ''}]",2025-03-04T15:23:08.012076
Specify the requirements for configuring a transformation from KM3 to EMF model,single_tool,2,1.0,1,1,list_transformation_KM32EMF_tool({'input_str': ''}),KM32EMF.get_tool(),"[{'tool_name': 'list_transformation_KM32EMF_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T15:23:13.181038
Describe the settings needed to transform KM3 into an DSL model,single_tool,2,0.0,1,0,apply_KM32DSL_transformation_tool({'input_str': ''}),KM32DSL.get_tool(),[],"[{'api_name': 'KM32DSL.get_tool', 'arguments': ''}]",2025-03-04T15:23:17.262155
Reveal how to configure a transformation that converts a PNML into a XML model,single_tool,2,0.0,1,0,apply_PNML2XML_transformation_tool({'input_str': ''}),PNML2XML.get_tool(),[],"[{'api_name': 'PNML2XML.get_tool', 'arguments': ''}]",2025-03-04T15:23:24.037057
Elucidate the process of transforming a Mantis into a XML model with correct configuration settings,single_tool,2,0.0,1,0,apply_Mantis2XML_transformation_tool({'input_str': ''}),Mantis2XML.get_tool(),[],"[{'api_name': 'Mantis2XML.get_tool', 'arguments': ''}]",2025-03-04T15:23:28.186650
Show me the exact parameters needed for transforming XML to Ant model,single_tool,2,0.0,1,0,apply_XML2Ant_transformation_tool({'input_str': ''}),XML2Ant.get_tool(),[],"[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}]",2025-03-04T15:23:33.174589
Explain how to configure transformation from SimpleClass to SimpleRDBMS model,single_tool,2,0.0,1,0,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': ''}),SimpleClass2SimpleRDBMS.get_tool(),[],"[{'api_name': 'SimpleClass2SimpleRDBMS.get_tool', 'arguments': ''}]",2025-03-04T15:23:38.921980
Provide an overview of the necessary settings for converting KM3 into a EMF model,single_tool,2,1.0,1,1,list_transformation_KM32EMF_tool({'input_str': ''}),KM32EMF.get_tool(),"[{'tool_name': 'list_transformation_KM32EMF_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T15:23:44.748237
Specify what configuration is required for transforming KM3 to DSL,single_tool,2,0.0,1,0,"apply_KM32DSL_transformation_tool({'input_str': ''}) | apply_KM32DSL_transformation_tool({'input_str': '/path/to/km3_model.xmi'}) | apply_KM32DSL_transformation_tool({'input_str': '<KM3Model>...</KM3Model>'}) | apply_KM32DSL_transformation_tool({'input_str': '<KM3Model>...</KM3Model>'}) | apply_KM32DSL_transformation_tool({'input_str': '<KM3Model>...</KM3Model>'}) | apply_KM32DSL_transformation_tool({'input_str': ""<KM3Model>\n  <Class name='E'\n    attributes=“−”\n    relationships=“−”\n  />\n</KM3Model>""})",KM32DSL.get_tool(),[],"[{'api_name': 'KM32DSL.get_tool', 'arguments': ''}]",2025-03-04T15:23:56.581045
Provide detailed instructions on configuring a transformation that converts PNML into a XML model,single_tool,2,0.0,1,0,apply_PNML2XML_transformation_tool({'input_str': 'PNML file path'}),PNML2XML.get_tool(),[],"[{'api_name': 'PNML2XML.get_tool', 'arguments': ''}]",2025-03-04T15:24:06.080200
Show me the transformation settings for converting a Mantis model into a XML model,single_tool,2,0.0,1,0,apply_Mantis2XML_transformation_tool({'input_str': ''}),Mantis2XML.get_tool(),[],"[{'api_name': 'Mantis2XML.get_tool', 'arguments': ''}]",2025-03-04T15:24:09.819751
Show me the configuration settings for converting a XML into a Ant model,single_tool,2,0.0,1,0,apply_XML2Ant_transformation_tool({'input_str': ''}),XML2Ant.get_tool(),[],"[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}]",2025-03-04T15:24:13.154153
Display the detailed transformation specifications required to convert SimpleClass to SimpleRDBMS,single_tool,2,1.0,1,1,list_transformation_SimpleClass2SimpleRDBMS_tool({'input_str': ''}),SimpleClass2SimpleRDBMS.get_tool(),"[{'tool_name': 'list_transformation_SimpleClass2SimpleRDBMS_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T15:24:21.752669
Reveal the necessary parameters for transforming KM3 to EMF,single_tool,2,0.0,1,0,apply_KM32EMF_transformation_tool({'input_str': ''}) | apply_KM32EMF_transformation_tool({'input_str': '/path/to/km3_model.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': 'C:/Users/user/Desktop/km3_model.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': 'D:/km3_model.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': '/path/to/km3_model.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': 'C:/Users/user/Desktop/km3_model.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': 'D:/km3_model.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': './km3_model.xmi'}),KM32EMF.get_tool(),[],"[{'api_name': 'KM32EMF.get_tool', 'arguments': ''}]",2025-03-04T15:24:33.817477
Explain the step-by-step process for configuring a KM3 model to be transformed into a DSL model,single_tool,2,0.0,1,0,apply_KM32DSL_transformation_tool({'input_str': 'path_to_km3_model'}),KM32DSL.get_tool(),[],"[{'api_name': 'KM32DSL.get_tool', 'arguments': ''}]",2025-03-04T15:24:41.324891
Provide me with the detailed configuration needed for the transformation from PNML to XML,single_tool,2,0.0,1,0,apply_PNML2XML_transformation_tool({'input_str': ''}),PNML2XML.get_tool(),[],"[{'api_name': 'PNML2XML.get_tool', 'arguments': ''}]",2025-03-04T15:24:44.934293
Clarify how to set up a Mantis model for conversion to a XML model,single_tool,2,0.0,1,0,apply_Mantis2XML_transformation_tool({'input_str': ''}),Mantis2XML.get_tool(),[],"[{'api_name': 'Mantis2XML.get_tool', 'arguments': ''}]",2025-03-04T15:24:49.953934
Specify the requirements for configuring a transformation from XML to Ant model,single_tool,2,0.0,1,0,apply_XML2Ant_transformation_tool({'input_str': 'XML file path'}),XML2Ant.get_tool(),[],"[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}]",2025-03-04T15:24:53.507844
Describe the settings needed to transform SimpleClass into an SimpleRDBMS model,single_tool,2,0.0,1,0,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': ''}),SimpleClass2SimpleRDBMS.get_tool(),[],"[{'api_name': 'SimpleClass2SimpleRDBMS.get_tool', 'arguments': ''}]",2025-03-04T15:24:56.891814
Reveal how to configure a transformation that converts a KM3 into a EMF model,single_tool,2,0.0,1,0,apply_KM32EMF_transformation_tool({'input_str': ''}) | apply_KM32EMF_transformation_tool({'input_str': '/path/to/km3_model.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': '/path/to/km3_model.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': '/path/to/km3_model.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': '/path/to/km3_model.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': '/path/to/km3_model.xmi'}),KM32EMF.get_tool(),[],"[{'api_name': 'KM32EMF.get_tool', 'arguments': ''}]",2025-03-04T15:25:05.534178
Elucidate the process of transforming a KM3 into a DSL model with correct configuration settings,single_tool,2,0.0,1,0,apply_KM32DSL_transformation_tool({'input_str': 'KM3 model file path'}) | apply_KM32DSL_transformation_tool({'input_str': '/path/to/model.km3'}),KM32DSL.get_tool(),[],"[{'api_name': 'KM32DSL.get_tool', 'arguments': ''}]",2025-03-04T15:25:12.075206
Show me the exact parameters needed for transforming PNML to XML model,single_tool,2,0.0,1,0,No tools called,PNML2XML.get_tool(),[],"[{'api_name': 'PNML2XML.get_tool', 'arguments': ''}]",2025-03-04T15:25:28.380399
Explain how to configure transformation from Mantis to XML model,single_tool,2,0.0,1,0,apply_Mantis2XML_transformation_tool({'input_str': ''}),Mantis2XML.get_tool(),[],"[{'api_name': 'Mantis2XML.get_tool', 'arguments': ''}]",2025-03-04T15:25:33.751314
Provide an overview of the necessary settings for converting XML into a Ant model,single_tool,2,0.0,1,0,apply_XML2Ant_transformation_tool({'input_str': ''}),XML2Ant.get_tool(),[],"[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}]",2025-03-04T15:25:38.378472
Specify what configuration is required for transforming SimpleClass to SimpleRDBMS,single_tool,2,0.0,1,0,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': ''}),SimpleClass2SimpleRDBMS.get_tool(),[],"[{'api_name': 'SimpleClass2SimpleRDBMS.get_tool', 'arguments': ''}]",2025-03-04T15:25:43.154622
Provide detailed instructions on configuring a transformation that converts KM3 into a EMF model,single_tool,2,0.0,1,0,apply_KM32EMF_transformation_tool({'input_str': 'KM3 to EMF transformation configuration'}),KM32EMF.get_tool(),[],"[{'api_name': 'KM32EMF.get_tool', 'arguments': ''}]",2025-03-04T15:25:51.593230
Show me the transformation settings for converting a KM3 model into a DSL model,single_tool,2,0.0,1,0,apply_KM32DSL_transformation_tool({'input_str': ''}),KM32DSL.get_tool(),[],"[{'api_name': 'KM32DSL.get_tool', 'arguments': ''}]",2025-03-04T15:25:55.611304
Show me the configuration settings for converting a PNML into a XML model,single_tool,2,0.0,1,0,apply_PNML2XML_transformation_tool({'input_str': ''}) | apply_PNML2XML_transformation_tool({'input_str': '/path/to/your/pnml_model.pnml'}) | apply_PNML2XML_transformation_tool({'input_str': '/path/to/your/pnml_model.pnml'}) | apply_PNML2XML_transformation_tool({'input_str': '/path/to/your/pnml_model.pnml'}) | apply_PNML2XML_transformation_tool({'input_str': '/path/to/your/pnml_model.pnml'}) | apply_PNML2XML_transformation_tool({'input_str': '/path/to/your/pnml_model.pnml'}) | apply_PNML2XML_transformation_tool({'input_str': '/path/to/your/pnml_model.pnml'}) | apply_PNML2XML_transformation_tool({'input_str': '/path/to/your/pnml_model.pnml'}),PNML2XML.get_tool(),[],"[{'api_name': 'PNML2XML.get_tool', 'arguments': ''}]",2025-03-04T15:26:06.045512
Display the detailed transformation specifications required to convert Mantis to XML,single_tool,2,1.0,1,1,list_transformation_Mantis2XML_tool({'input_str': ''}),Mantis2XML.get_tool(),"[{'tool_name': 'list_transformation_Mantis2XML_tool', 'arguments': {'input_str': ''}}]",[],2025-03-04T15:26:10.196715
Reveal the necessary parameters for transforming XML to Ant,single_tool,2,0.0,1,0,apply_XML2Ant_transformation_tool({'input_str': ''}),XML2Ant.get_tool(),[],"[{'api_name': 'XML2Ant.get_tool', 'arguments': ''}]",2025-03-04T15:26:13.626837
Explain the step-by-step process for configuring a SimpleClass model to be transformed into a SimpleRDBMS model,single_tool,2,0.0,1,0,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': ''}),SimpleClass2SimpleRDBMS.get_tool(),[],"[{'api_name': 'SimpleClass2SimpleRDBMS.get_tool', 'arguments': ''}]",2025-03-04T15:26:19.330166
Transform the KM3 model located at ./atl_zoo/KM32EMF/Sample-KM3.xmi to a EMF model.,single_tool,2,1.0,1,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]",[],2025-03-04T15:26:25.101487
Convert the KM3 model stored at ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi into a DSL model.,single_tool,2,1.0,1,1,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T15:26:30.603463
Change the format of the PNML model found at ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi to match the structure of the XML model.,single_tool,2,1.0,1,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]",[],2025-03-04T15:26:36.758087
Reformat the contents of the Mantis model situated at ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi according to the requirements of the XML model.,single_tool,2,1.0,1,1,apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T15:26:41.987705
Alter the properties of the XML model located in ./atl_zoo/Ant2Maven/example/build1.xmi and transform it into a Ant model.,single_tool,2,1.0,1,1,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}]",[],2025-03-04T15:26:46.699132
Transform the SimpleClass model hosted on ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi to conform to the standards of the SimpleRDBMS model.,single_tool,2,1.0,1,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T15:26:51.931969
Update the model information at ./atl_zoo/KM32EMF/Sample-KM3.xmi from the original KM3 model to the new EMF model.,single_tool,2,1.0,1,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]",[],2025-03-04T15:26:56.403482
Modify the structure of the KM3 model situated in ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi and transform it into a DSL model.,single_tool,2,1.0,1,1,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T15:27:01.512268
Change the model type at ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi from the PNML model to the XML model.,single_tool,2,1.0,1,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]",[],2025-03-04T15:27:09.007873
Transform the data within the Mantis model located at ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi and convert it to a XML format.,single_tool,2,1.0,1,1,apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T15:27:14.924963
Convert the XML model associated with ./atl_zoo/Ant2Maven/example/build1.xmi into a standardized Ant model.,single_tool,2,1.0,1,1,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}]",[],2025-03-04T15:27:20.109149
Morph the SimpleClass model present in ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi to align with the requirements of the SimpleRDBMS model.,single_tool,2,1.0,1,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T15:27:23.420481
Modify the contents of the KM3 model stored at ./atl_zoo/KM32EMF/Sample-KM3.xmi and refine it according to the EMF model standards.,single_tool,2,1.0,1,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]",[],2025-03-04T15:27:30.543334
"Transform the KM3 model situated on ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi into a DSL format, ensuring compatibility.",single_tool,2,1.0,1,1,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32DSL_tool({}),KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T15:27:36.791014
Update the PNML model located in ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi and transform it into an optimized XML model.,single_tool,2,1.0,1,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]",[],2025-03-04T15:27:40.743474
Reformat the data of the Mantis model at ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi to match the structure of the XML model.,single_tool,2,1.0,1,1,apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T15:27:47.833788
Change the settings of the XML model hosted on ./atl_zoo/Ant2Maven/example/build1.xmi and update them according to the Ant model requirements.,single_tool,2,0.0,1,0,apply_XML2XSLT_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi),[],"[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}]",2025-03-04T15:28:01.356108
Transform the SimpleClass model located at ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi to a SimpleRDBMS model.,single_tool,2,1.0,1,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T15:28:04.806200
Convert the KM3 model stored at ./atl_zoo/KM32EMF/Sample-KM3.xmi into a EMF model.,single_tool,2,1.0,1,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]",[],2025-03-04T15:28:12.947212
Change the format of the KM3 model found at ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi to match the structure of the DSL model.,single_tool,2,1.0,1,1,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T15:28:17.200258
Reformat the contents of the PNML model situated at ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi according to the requirements of the XML model.,single_tool,2,1.0,1,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]",[],2025-03-04T15:28:21.567283
Alter the properties of the Mantis model located in ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi and transform it into a XML model.,single_tool,2,1.0,1,1,apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T15:28:27.719820
Transform the XML model hosted on ./atl_zoo/Ant2Maven/example/build1.xmi to conform to the standards of the Ant model.,single_tool,2,1.0,1,1,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}]",[],2025-03-04T15:28:32.094153
Update the model information at ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi from the original SimpleClass model to the new SimpleRDBMS model.,single_tool,2,1.0,1,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T15:28:35.338999
Modify the structure of the KM3 model situated in ./atl_zoo/KM32EMF/Sample-KM3.xmi and transform it into a EMF model.,single_tool,2,1.0,1,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]",[],2025-03-04T15:28:41.629911
Change the model type at ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi from the KM3 model to the DSL model.,single_tool,2,1.0,1,1,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32DSL_tool({}),KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T15:28:50.591465
Transform the data within the PNML model located at ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi and convert it to a XML format.,single_tool,2,1.0,1,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]",[],2025-03-04T15:28:56.442416
Convert the Mantis model associated with ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi into a standardized XML model.,single_tool,2,1.0,1,1,apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T15:29:03.754123
Morph the XML model present in ./atl_zoo/Ant2Maven/example/build1.xmi to align with the requirements of the Ant model.,single_tool,2,1.0,1,1,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}]",[],2025-03-04T15:29:08.452522
Modify the contents of the SimpleClass model stored at ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi and refine it according to the SimpleRDBMS model standards.,single_tool,2,1.0,1,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T15:29:14.689691
"Transform the KM3 model situated on ./atl_zoo/KM32EMF/Sample-KM3.xmi into a EMF format, ensuring compatibility.",single_tool,2,1.0,1,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]",[],2025-03-04T15:29:19.762827
Update the KM3 model located in ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi and transform it into an optimized DSL model.,single_tool,2,1.0,1,1,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T15:29:25.104695
Reformat the data of the PNML model at ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi to match the structure of the XML model.,single_tool,2,1.0,1,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]",[],2025-03-04T15:29:32.399027
Change the settings of the Mantis model hosted on ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi and update them according to the XML model requirements.,single_tool,2,1.0,1,1,apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T15:29:35.679664
Transform the XML model located at ./atl_zoo/Ant2Maven/example/build1.xmi to a Ant model.,single_tool,2,1.0,1,1,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}]",[],2025-03-04T15:29:41.484001
Convert the SimpleClass model stored at ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi into a SimpleRDBMS model.,single_tool,2,1.0,1,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T15:29:46.418816
Change the format of the KM3 model found at ./atl_zoo/KM32EMF/Sample-KM3.xmi to match the structure of the EMF model.,single_tool,2,1.0,1,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]",[],2025-03-04T15:29:52.216926
Reformat the contents of the KM3 model situated at ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi according to the requirements of the DSL model.,single_tool,2,1.0,1,1,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T15:29:57.890639
Alter the properties of the PNML model located in ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi and transform it into a XML model.,single_tool,2,1.0,1,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]",[],2025-03-04T15:30:03.351859
Transform the Mantis model hosted on ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi to conform to the standards of the XML model.,single_tool,2,1.0,1,1,apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T15:30:07.117734
Update the model information at ./atl_zoo/Ant2Maven/example/build1.xmi from the original XML model to the new Ant model.,single_tool,2,0.0,1,0,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi),[],"[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}]",2025-03-04T15:30:14.648900
Modify the structure of the SimpleClass model situated in ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi and transform it into a SimpleRDBMS model.,single_tool,2,1.0,1,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T15:30:19.789171
Change the model type at ./atl_zoo/KM32EMF/Sample-KM3.xmi from the KM3 model to the EMF model.,single_tool,2,1.0,1,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]",[],2025-03-04T15:30:25.874750
Transform the data within the KM3 model located at ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi and convert it to a DSL format.,single_tool,2,1.0,1,1,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T15:30:32.114716
Convert the PNML model associated with ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi into a standardized XML model.,single_tool,2,1.0,1,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]",[],2025-03-04T15:30:38.471975
Morph the Mantis model present in ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi to align with the requirements of the XML model.,single_tool,2,1.0,1,1,apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T15:30:43.510589
Modify the contents of the XML model stored at ./atl_zoo/Ant2Maven/example/build1.xmi and refine it according to the Ant model standards.,single_tool,2,1.0,1,1,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}]",[],2025-03-04T15:30:48.247479
"Transform the SimpleClass model situated on ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi into a SimpleRDBMS format, ensuring compatibility.",single_tool,2,1.0,1,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T15:30:53.763308
Update the KM3 model located in ./atl_zoo/KM32EMF/Sample-KM3.xmi and transform it into an optimized EMF model.,single_tool,2,1.0,1,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]",[],2025-03-04T15:31:02.595933
Reformat the data of the KM3 model at ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi to match the structure of the DSL model.,single_tool,2,1.0,1,1,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T15:31:07.201252
Change the settings of the PNML model hosted on ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi and update them according to the XML model requirements.,single_tool,2,1.0,1,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | list_transformation_PNML2XML_tool({}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]",[],2025-03-04T15:31:12.817902
Transform the Mantis model located at ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi to a XML model.,single_tool,2,1.0,1,1,apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T15:31:16.462261
Convert the XML model stored at ./atl_zoo/Ant2Maven/example/build1.xmi into a Ant model.,single_tool,2,1.0,1,1,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}]",[],2025-03-04T15:31:20.579259
Change the format of the SimpleClass model found at ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi to match the structure of the SimpleRDBMS model.,single_tool,2,1.0,1,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T15:31:25.848134
Reformat the contents of the KM3 model situated at ./atl_zoo/KM32EMF/Sample-KM3.xmi according to the requirements of the EMF model.,single_tool,2,1.0,1,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]",[],2025-03-04T15:31:29.608708
Alter the properties of the KM3 model located in ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi and transform it into a DSL model.,single_tool,2,1.0,1,1,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T15:31:34.279854
Transform the PNML model hosted on ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi to conform to the standards of the XML model.,single_tool,2,1.0,1,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]",[],2025-03-04T15:31:39.339806
Update the model information at ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi from the original Mantis model to the new XML model.,single_tool,2,1.0,1,1,apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T15:31:43.946457
Modify the structure of the XML model situated in ./atl_zoo/Ant2Maven/example/build1.xmi and transform it into a Ant model.,single_tool,2,0.0,1,0,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi),[],"[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}]",2025-03-04T15:31:49.400554
Change the model type at ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi from the SimpleClass model to the SimpleRDBMS model.,single_tool,2,1.0,1,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T15:31:54.398642
Transform the data within the KM3 model located at ./atl_zoo/KM32EMF/Sample-KM3.xmi and convert it to a EMF format.,single_tool,2,1.0,1,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]",[],2025-03-04T15:31:59.261050
Convert the KM3 model associated with ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi into a standardized DSL model.,single_tool,2,1.0,1,1,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T15:32:04.270714
Morph the PNML model present in ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi to align with the requirements of the XML model.,single_tool,2,1.0,1,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]",[],2025-03-04T15:32:08.936542
Modify the contents of the Mantis model stored at ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi and refine it according to the XML model standards.,single_tool,2,1.0,1,1,apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T15:32:14.817119
"Transform the XML model situated on ./atl_zoo/Ant2Maven/example/build1.xmi into a Ant format, ensuring compatibility.",single_tool,2,1.0,1,1,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}]",[],2025-03-04T15:32:18.180675
Update the SimpleClass model located in ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi and transform it into an optimized SimpleRDBMS model.,single_tool,2,1.0,1,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T15:32:23.522766
Reformat the data of the KM3 model at ./atl_zoo/KM32EMF/Sample-KM3.xmi to match the structure of the EMF model.,single_tool,2,1.0,1,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]",[],2025-03-04T15:32:28.536538
Change the settings of the KM3 model hosted on ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi and update them according to the DSL model requirements.,single_tool,2,1.0,1,1,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T15:32:34.053349
Transform the PNML model located at ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi to a XML model.,single_tool,2,1.0,1,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]",[],2025-03-04T15:32:38.817366
Convert the Mantis model stored at ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi into a XML model.,single_tool,2,1.0,1,1,apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T15:32:43.798170
Change the format of the XML model found at ./atl_zoo/Ant2Maven/example/build1.xmi to match the structure of the Ant model.,single_tool,2,1.0,1,1,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}]",[],2025-03-04T15:32:47.897285
Reformat the contents of the SimpleClass model situated at ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi according to the requirements of the SimpleRDBMS model.,single_tool,2,1.0,1,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T15:32:53.310306
Alter the properties of the KM3 model located in ./atl_zoo/KM32EMF/Sample-KM3.xmi and transform it into a EMF model.,single_tool,2,1.0,1,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]",[],2025-03-04T15:33:01.228647
Transform the KM3 model hosted on ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi to conform to the standards of the DSL model.,single_tool,2,1.0,1,1,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T15:33:06.993901
Update the model information at ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi from the original PNML model to the new XML model.,single_tool,2,1.0,1,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]",[],2025-03-04T15:33:11.364656
Modify the structure of the Mantis model situated in ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi and transform it into a XML model.,single_tool,2,1.0,1,1,apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T15:33:16.962469
Change the model type at ./atl_zoo/Ant2Maven/example/build1.xmi from the XML model to the Ant model.,single_tool,2,1.0,1,1,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}]",[],2025-03-04T15:33:23.148061
Transform the data within the SimpleClass model located at ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi and convert it to a SimpleRDBMS format.,single_tool,2,1.0,1,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T15:33:27.512004
Convert the KM3 model associated with ./atl_zoo/KM32EMF/Sample-KM3.xmi into a standardized EMF model.,single_tool,2,1.0,1,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]",[],2025-03-04T15:33:31.373853
Morph the KM3 model present in ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi to align with the requirements of the DSL model.,single_tool,2,1.0,1,1,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T15:33:36.738905
Modify the contents of the PNML model stored at ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi and refine it according to the XML model standards.,single_tool,2,1.0,1,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]",[],2025-03-04T15:33:42.287788
"Transform the Mantis model situated on ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi into a XML format, ensuring compatibility.",single_tool,2,1.0,1,1,apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T15:33:49.481611
Update the XML model located in ./atl_zoo/Ant2Maven/example/build1.xmi and transform it into an optimized Ant model.,single_tool,2,1.0,1,1,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}]",[],2025-03-04T15:33:54.318629
Reformat the data of the SimpleClass model at ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi to match the structure of the SimpleRDBMS model.,single_tool,2,1.0,1,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T15:34:00.192016
Change the settings of the KM3 model hosted on ./atl_zoo/KM32EMF/Sample-KM3.xmi and update them according to the EMF model requirements.,single_tool,2,1.0,1,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]",[],2025-03-04T15:34:08.449448
Transform the KM3 model located at ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi to a DSL model.,single_tool,2,1.0,1,1,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T15:34:14.468659
Convert the PNML model stored at ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi into a XML model.,single_tool,2,1.0,1,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]",[],2025-03-04T15:34:20.118887
Change the format of the Mantis model found at ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi to match the structure of the XML model.,single_tool,2,1.0,1,1,apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T15:34:26.946405
Reformat the contents of the XML model situated at ./atl_zoo/Ant2Maven/example/build1.xmi according to the requirements of the Ant model.,single_tool,2,1.0,1,1,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}]",[],2025-03-04T15:34:36.412247
Alter the properties of the SimpleClass model located in ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi and transform it into a SimpleRDBMS model.,single_tool,2,1.0,1,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T15:34:41.603446
Transform the KM3 model hosted on ./atl_zoo/KM32EMF/Sample-KM3.xmi to conform to the standards of the EMF model.,single_tool,2,1.0,1,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]",[],2025-03-04T15:34:47.168834
Update the model information at ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi from the original KM3 model to the new DSL model.,single_tool,2,1.0,1,1,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T15:34:52.104571
Modify the structure of the PNML model situated in ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi and transform it into a XML model.,single_tool,2,1.0,1,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]",[],2025-03-04T15:34:57.322989
Change the model type at ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi from the Mantis model to the XML model.,single_tool,2,1.0,1,1,apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T15:35:04.966315
Transform the data within the XML model located at ./atl_zoo/Ant2Maven/example/build1.xmi and convert it to a Ant format.,single_tool,2,0.0,1,0,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi),[],"[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}]",2025-03-04T15:35:09.580769
Convert the SimpleClass model associated with ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi into a standardized SimpleRDBMS model.,single_tool,2,1.0,1,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T15:35:14.704741
Morph the KM3 model present in ./atl_zoo/KM32EMF/Sample-KM3.xmi to align with the requirements of the EMF model.,single_tool,2,1.0,1,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]",[],2025-03-04T15:35:20.338368
Modify the contents of the KM3 model stored at ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi and refine it according to the DSL model standards.,single_tool,2,1.0,1,1,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T15:35:29.436901
"Transform the PNML model situated on ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi into a XML format, ensuring compatibility.",single_tool,2,1.0,1,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]",[],2025-03-04T15:35:35.432228
Update the Mantis model located in ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi and transform it into an optimized XML model.,single_tool,2,1.0,1,1,apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T15:35:39.495892
Transform the model at ./atl_zoo/Ant2Maven/example/build1.xmi into a Ant model,single_tool,3,0.0,1,0,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi),[],"[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}]",2025-03-04T15:35:44.871508
Update the model from ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi with a new structure in SimpleRDBMS format,single_tool,3,1.0,1,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T15:35:49.138013
Change the model type of ./atl_zoo/KM32EMF/Sample-KM3.xmi to be EMF,single_tool,3,1.0,1,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]",[],2025-03-04T15:35:55.543734
"Alter the architecture of the model located at ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi, rendering it as DSL",single_tool,3,1.0,1,1,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T15:35:58.898663
Modify the metamodel associated with ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi to produce an output of XML,single_tool,3,1.0,1,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]",[],2025-03-04T15:36:02.907394
Modify the structure of the model at ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi and give it a new name in XML format,single_tool,3,1.0,1,1,apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T15:36:10.064257
"Change the content of the model situated at ./atl_zoo/Ant2Maven/example/build1.xmi into a new form, represented as Ant",single_tool,3,0.0,1,0,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi),[],"[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}]",2025-03-04T15:36:13.122136
Update the data contained within the metamodel located at ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi with an output in SimpleRDBMS,single_tool,3,1.0,1,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T15:36:17.340604
Update the configuration of the metamodel associated with ./atl_zoo/KM32EMF/Sample-KM3.xmi to be equal to EMF,single_tool,3,1.0,1,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]",[],2025-03-04T15:36:24.144427
Convert the structure of the model at ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi into a format corresponding to DSL,single_tool,3,1.0,1,1,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32DSL_tool({}),KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T15:36:36.128507
Change the properties of the model situated at ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi and define them as XML,single_tool,3,1.0,1,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]",[],2025-03-04T15:36:41.929328
"Modify the components of the model located at ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi, transforming it into XML",single_tool,3,1.0,1,1,apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T15:36:47.896200
Update the model metatype from ./atl_zoo/Ant2Maven/example/build1.xmi with a new structure in Ant format,single_tool,3,0.0,1,0,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi),[],"[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}]",2025-03-04T15:36:54.363520
Rearrange the content of the model at ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi to be in compliance with SimpleRDBMS,single_tool,3,1.0,1,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T15:37:00.032578
Change the data stored within the metamodel associated with ./atl_zoo/KM32EMF/Sample-KM3.xmi and render it as EMF,single_tool,3,1.0,1,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | list_transformation_KM32EMF_tool({}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]",[],2025-03-04T15:37:05.450630
Update the dependencies of the model situated at ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi and give them a new value in DSL format,single_tool,3,1.0,1,1,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32DSL_tool({}) | apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32RDBMS_tool({}),KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T15:37:16.785171
"Transform the content of the metamodel located at ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi into a new structure, represented by XML",single_tool,3,1.0,1,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]",[],2025-03-04T15:37:22.654356
Change the representation of the model at ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi to be XML,single_tool,3,1.0,1,1,apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T15:37:29.959564
Update the layout of the model situated at ./atl_zoo/Ant2Maven/example/build1.xmi and give it a new appearance in Ant format,single_tool,3,1.0,1,1,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}]",[],2025-03-04T15:37:34.624042
Modify the parameters of the metamodel associated with ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi to produce an output of SimpleRDBMS,single_tool,3,1.0,1,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T15:37:40.360856
Transform the structure of the model located at ./atl_zoo/KM32EMF/Sample-KM3.xmi into a format corresponding to EMF,single_tool,3,1.0,1,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]",[],2025-03-04T15:37:45.387007
Change the semantics of the model situated at ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi and define them as DSL,single_tool,3,1.0,1,1,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T15:37:50.766228
Update the model metatype from ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi with a new appearance in XML,single_tool,3,1.0,1,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]",[],2025-03-04T15:37:56.379137
Transform the ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi into a XML model,single_tool,3,1.0,1,1,apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T15:38:03.988019
Change the model located at ./atl_zoo/Ant2Maven/example/build1.xmi to the Ant structure,single_tool,3,0.0,1,0,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi),[],"[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}]",2025-03-04T15:38:09.856955
Convert the metamodel at ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi to the SimpleRDBMS format,single_tool,3,1.0,1,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T15:38:15.313362
Map the ./atl_zoo/KM32EMF/Sample-KM3.xmi to the EMF transformation,single_tool,3,1.0,1,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]",[],2025-03-04T15:38:27.794622
Modify the given ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi to conform to the DSL model,single_tool,3,1.0,1,1,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32DSL_tool({}),KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T15:38:34.454676
Change the type of the model at ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi to a XML configuration,single_tool,3,0.0,1,0,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi),[],"[{'api_name': 'PNML2XML.apply_tool', 'arguments': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}]",2025-03-04T15:38:42.548770
Update the ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi with a new XML structure,single_tool,3,1.0,1,1,apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T15:38:45.933964
Turn the metamodel at ./atl_zoo/Ant2Maven/example/build1.xmi into an Ant representation,single_tool,3,0.0,1,0,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi),[],"[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}]",2025-03-04T15:38:50.455721
Create a transformation from ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi to a SimpleRDBMS format,single_tool,3,1.0,1,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T15:38:57.077303
Convert the given metamodel at ./atl_zoo/KM32EMF/Sample-KM3.xmi to an EMF model,single_tool,3,1.0,1,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]",[],2025-03-04T15:39:01.906371
Transform the model at ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi into a DSL model,single_tool,3,1.0,1,1,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T15:39:07.223585
Update the model from ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi with a new structure in XML format,single_tool,3,1.0,1,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]",[],2025-03-04T15:39:12.945755
Change the model type of ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi to be XML,single_tool,3,1.0,1,1,apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T15:39:19.231630
"Alter the architecture of the model located at ./atl_zoo/Ant2Maven/example/build1.xmi, rendering it as Ant",single_tool,3,0.0,1,0,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi),[],"[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}]",2025-03-04T15:39:24.297120
Modify the metamodel associated with ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi to produce an output of SimpleRDBMS,single_tool,3,1.0,1,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T15:39:28.893357
Modify the structure of the model at ./atl_zoo/KM32EMF/Sample-KM3.xmi and give it a new name in EMF format,single_tool,3,1.0,1,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | list_transformation_KM32EMF_tool({}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]",[],2025-03-04T15:39:33.517375
"Change the content of the model situated at ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi into a new form, represented as DSL",single_tool,3,1.0,1,1,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32DSL_tool({}),KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T15:39:39.843056
Update the data contained within the metamodel located at ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi with an output in XML,single_tool,3,1.0,1,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]",[],2025-03-04T15:39:45.641788
Update the configuration of the metamodel associated with ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi to be equal to XML,single_tool,3,1.0,1,1,apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T15:39:51.966295
Convert the structure of the model at ./atl_zoo/Ant2Maven/example/build1.xmi into a format corresponding to Ant,single_tool,3,0.0,1,0,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi),[],"[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}]",2025-03-04T15:39:57.416816
Change the properties of the model situated at ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi and define them as SimpleRDBMS,single_tool,3,1.0,1,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T15:40:02.268274
"Modify the components of the model located at ./atl_zoo/KM32EMF/Sample-KM3.xmi, transforming it into EMF",single_tool,3,1.0,1,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]",[],2025-03-04T15:40:09.310850
Update the model metatype from ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi with a new structure in DSL format,single_tool,3,1.0,1,1,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32DSL_tool({}) | apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32DSL_tool({}),KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T15:40:17.715675
Rearrange the content of the model at ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi to be in compliance with XML,single_tool,3,1.0,1,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]",[],2025-03-04T15:40:23.429415
Change the data stored within the metamodel associated with ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi and render it as XML,single_tool,3,1.0,1,1,apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T15:40:29.682739
Update the dependencies of the model situated at ./atl_zoo/Ant2Maven/example/build1.xmi and give them a new value in Ant format,single_tool,3,0.0,1,0,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi),[],"[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}]",2025-03-04T15:40:33.826292
"Transform the content of the metamodel located at ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi into a new structure, represented by SimpleRDBMS",single_tool,3,1.0,1,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T15:40:37.173599
Change the representation of the model at ./atl_zoo/KM32EMF/Sample-KM3.xmi to be EMF,single_tool,3,1.0,1,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]",[],2025-03-04T15:40:44.004464
Update the layout of the model situated at ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi and give it a new appearance in DSL format,single_tool,3,1.0,1,1,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T15:40:49.764308
Modify the parameters of the metamodel associated with ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi to produce an output of XML,single_tool,3,1.0,1,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]",[],2025-03-04T15:40:55.675844
Transform the structure of the model located at ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi into a format corresponding to XML,single_tool,3,1.0,1,1,apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T15:41:01.280923
Change the semantics of the model situated at ./atl_zoo/Ant2Maven/example/build1.xmi and define them as Ant,single_tool,3,0.0,1,0,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi),[],"[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}]",2025-03-04T15:41:12.272121
Update the model metatype from ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi with a new appearance in SimpleRDBMS,single_tool,3,1.0,1,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T15:41:17.806170
Transform the ./atl_zoo/KM32EMF/Sample-KM3.xmi into a EMF model,single_tool,3,1.0,1,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]",[],2025-03-04T15:41:22.178890
Change the model located at ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi to the DSL structure,single_tool,3,1.0,1,1,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T15:41:27.381114
Convert the metamodel at ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi to the XML format,single_tool,3,1.0,1,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]",[],2025-03-04T15:41:31.827221
Map the ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi to the XML transformation,single_tool,3,1.0,1,1,apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T15:41:37.849923
Modify the given ./atl_zoo/Ant2Maven/example/build1.xmi to conform to the Ant model,single_tool,3,0.0,1,0,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi),[],"[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}]",2025-03-04T15:41:45.992174
Change the type of the model at ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi to a SimpleRDBMS configuration,single_tool,3,1.0,1,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T15:41:49.746247
Update the ./atl_zoo/KM32EMF/Sample-KM3.xmi with a new EMF structure,single_tool,3,1.0,1,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]",[],2025-03-04T15:41:55.409347
Turn the metamodel at ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi into an DSL representation,single_tool,3,1.0,1,1,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T15:42:01.163125
Create a transformation from ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi to a XML format,single_tool,3,1.0,1,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]",[],2025-03-04T15:42:07.315100
Convert the given metamodel at ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi to an XML model,single_tool,3,1.0,1,1,apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T15:42:12.536228
Transform the model at ./atl_zoo/Ant2Maven/example/build1.xmi into a Ant model,single_tool,3,0.0,1,0,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi),[],"[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}]",2025-03-04T15:42:17.692806
Update the model from ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi with a new structure in SimpleRDBMS format,single_tool,3,1.0,1,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T15:42:22.269387
Change the model type of ./atl_zoo/KM32EMF/Sample-KM3.xmi to be EMF,single_tool,3,1.0,1,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]",[],2025-03-04T15:42:27.537635
"Alter the architecture of the model located at ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi, rendering it as DSL",single_tool,3,1.0,1,1,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T15:42:33.106868
Modify the metamodel associated with ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi to produce an output of XML,single_tool,3,1.0,1,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]",[],2025-03-04T15:42:38.434522
Modify the structure of the model at ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi and give it a new name in XML format,single_tool,3,1.0,1,1,apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T15:42:46.076364
"Change the content of the model situated at ./atl_zoo/Ant2Maven/example/build1.xmi into a new form, represented as Ant",single_tool,3,0.0,1,0,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi),[],"[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}]",2025-03-04T15:42:50.614090
Update the data contained within the metamodel located at ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi with an output in SimpleRDBMS,single_tool,3,1.0,1,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T15:42:55.945830
Update the configuration of the metamodel associated with ./atl_zoo/KM32EMF/Sample-KM3.xmi to be equal to EMF,single_tool,3,1.0,1,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]",[],2025-03-04T15:43:00.920725
Convert the structure of the model at ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi into a format corresponding to DSL,single_tool,3,1.0,1,1,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T15:43:06.230159
Change the properties of the model situated at ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi and define them as XML,single_tool,3,1.0,1,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]",[],2025-03-04T15:43:12.168799
"Modify the components of the model located at ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi, transforming it into XML",single_tool,3,1.0,1,1,apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T15:43:17.016012
Update the model metatype from ./atl_zoo/Ant2Maven/example/build1.xmi with a new structure in Ant format,single_tool,3,0.0,1,0,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi),[],"[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}]",2025-03-04T15:43:25.371250
Rearrange the content of the model at ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi to be in compliance with SimpleRDBMS,single_tool,3,1.0,1,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T15:43:29.927881
Change the data stored within the metamodel associated with ./atl_zoo/KM32EMF/Sample-KM3.xmi and render it as EMF,single_tool,3,1.0,1,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | list_transformation_KM32EMF_tool({}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]",[],2025-03-04T15:43:35.841664
Update the dependencies of the model situated at ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi and give them a new value in DSL format,single_tool,3,1.0,1,1,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32DSL_tool({}),KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T15:43:45.579300
"Transform the content of the metamodel located at ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi into a new structure, represented by XML",single_tool,3,1.0,1,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]",[],2025-03-04T15:43:50.571764
Change the representation of the model at ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi to be XML,single_tool,3,1.0,1,1,apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T15:43:57.010648
Update the layout of the model situated at ./atl_zoo/Ant2Maven/example/build1.xmi and give it a new appearance in Ant format,single_tool,3,1.0,1,1,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}]",[],2025-03-04T15:44:00.624902
Modify the parameters of the metamodel associated with ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi to produce an output of SimpleRDBMS,single_tool,3,1.0,1,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T15:44:05.959251
Transform the structure of the model located at ./atl_zoo/KM32EMF/Sample-KM3.xmi into a format corresponding to EMF,single_tool,3,1.0,1,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]",[],2025-03-04T15:44:12.125830
Change the semantics of the model situated at ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi and define them as DSL,single_tool,3,1.0,1,1,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32DSL_tool({}),KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T15:44:18.895119
Update the model metatype from ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi with a new appearance in XML,single_tool,3,1.0,1,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]",[],2025-03-04T15:44:23.898318
Transform the ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi into a XML model,single_tool,3,1.0,1,1,apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T15:44:28.766344
Change the model located at ./atl_zoo/Ant2Maven/example/build1.xmi to the Ant structure,single_tool,3,0.0,1,0,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi),[],"[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}]",2025-03-04T15:44:34.547787
Convert the metamodel at ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi to the SimpleRDBMS format,single_tool,3,1.0,1,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T15:44:39.392221
Map the ./atl_zoo/KM32EMF/Sample-KM3.xmi to the EMF transformation,single_tool,3,1.0,1,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]",[],2025-03-04T15:44:46.321959
Modify the given ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi to conform to the DSL model,single_tool,3,1.0,1,1,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32DSL_tool({}),KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T15:44:53.025425
Change the type of the model at ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi to a XML configuration,single_tool,3,0.0,1,0,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi),[],"[{'api_name': 'PNML2XML.apply_tool', 'arguments': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}]",2025-03-04T15:45:01.777993
Update the ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi with a new XML structure,single_tool,3,1.0,1,1,apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T15:45:07.277140
Turn the metamodel at ./atl_zoo/Ant2Maven/example/build1.xmi into an Ant representation,single_tool,3,0.0,1,0,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi),[],"[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}]",2025-03-04T15:45:14.827694
Create a transformation from ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi to a SimpleRDBMS format,single_tool,3,1.0,1,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T15:45:18.698969
Convert the given metamodel at ./atl_zoo/KM32EMF/Sample-KM3.xmi to an EMF model,single_tool,3,1.0,1,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]",[],2025-03-04T15:45:26.832948
Transform the model at ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi into a DSL model,single_tool,3,1.0,1,1,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32DSL_tool({}) | apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32DSL_tool({}),KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T15:45:33.468546
Update the model from ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi with a new structure in XML format,single_tool,3,1.0,1,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]",[],2025-03-04T15:45:39.135189
Change the model type of ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi to be XML,single_tool,3,1.0,1,1,apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T15:45:46.261967
"Alter the architecture of the model located at ./atl_zoo/Ant2Maven/example/build1.xmi, rendering it as Ant",single_tool,3,0.0,1,0,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi),[],"[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}]",2025-03-04T15:45:50.038572
Modify the metamodel associated with ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi to produce an output of SimpleRDBMS,single_tool,3,1.0,1,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T15:45:56.076005
Modify the structure of the model at ./atl_zoo/KM32EMF/Sample-KM3.xmi and give it a new name in EMF format,single_tool,3,1.0,1,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | list_transformation_KM32EMF_tool({}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]",[],2025-03-04T15:46:00.514912
"Change the content of the model situated at ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi into a new form, represented as DSL",single_tool,3,1.0,1,1,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T15:46:06.894597
Update the data contained within the metamodel located at ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi with an output in XML,single_tool,3,1.0,1,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]",[],2025-03-04T15:46:12.793950
Update the configuration of the metamodel associated with ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi to be equal to XML,single_tool,3,1.0,1,1,apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T15:46:17.766150
Convert the structure of the model at ./atl_zoo/Ant2Maven/example/build1.xmi into a format corresponding to Ant,single_tool,3,0.0,1,0,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi),[],"[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}]",2025-03-04T15:46:23.835269
Change the properties of the model situated at ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi and define them as SimpleRDBMS,single_tool,3,1.0,1,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T15:46:28.671618
"Modify the components of the model located at ./atl_zoo/KM32EMF/Sample-KM3.xmi, transforming it into EMF",single_tool,3,1.0,1,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]",[],2025-03-04T15:46:35.004539
Update the model metatype from ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi with a new structure in DSL format,single_tool,3,1.0,1,1,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T15:46:39.963288
Rearrange the content of the model at ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi to be in compliance with XML,single_tool,3,1.0,1,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]",[],2025-03-04T15:46:47.023028
Change the data stored within the metamodel associated with ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi and render it as XML,single_tool,3,1.0,1,1,apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T15:46:54.593370
Update the dependencies of the model situated at ./atl_zoo/Ant2Maven/example/build1.xmi and give them a new value in Ant format,single_tool,3,0.0,1,0,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi),[],"[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}]",2025-03-04T15:46:59.306087
"Transform the content of the metamodel located at ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi into a new structure, represented by SimpleRDBMS",single_tool,3,1.0,1,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T15:47:03.588624
Change the representation of the model at ./atl_zoo/KM32EMF/Sample-KM3.xmi to be EMF,single_tool,3,1.0,1,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | list_transformation_KM32EMF_tool({}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]",[],2025-03-04T15:47:08.974831
Update the layout of the model situated at ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi and give it a new appearance in DSL format,single_tool,3,1.0,1,1,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T15:47:14.116950
Modify the parameters of the metamodel associated with ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi to produce an output of XML,single_tool,3,1.0,1,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]",[],2025-03-04T15:47:21.826633
Transform the structure of the model located at ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi into a format corresponding to XML,single_tool,3,1.0,1,1,apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T15:47:29.088281
Change the semantics of the model situated at ./atl_zoo/Ant2Maven/example/build1.xmi and define them as Ant,single_tool,3,0.0,1,0,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi),[],"[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}]",2025-03-04T15:47:34.594610
Update the model metatype from ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi with a new appearance in SimpleRDBMS,single_tool,3,1.0,1,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T15:47:39.184027
Transform the ./atl_zoo/KM32EMF/Sample-KM3.xmi into a EMF model,single_tool,3,1.0,1,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]",[],2025-03-04T15:47:44.286604
Change the model located at ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi to the DSL structure,single_tool,3,1.0,1,1,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T15:47:48.745499
Convert the metamodel at ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi to the XML format,single_tool,3,1.0,1,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]",[],2025-03-04T15:47:53.834520
Map the ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi to the XML transformation,single_tool,3,1.0,1,1,apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T15:47:58.812771
Modify the given ./atl_zoo/Ant2Maven/example/build1.xmi to conform to the Ant model,single_tool,3,0.0,1,0,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi),[],"[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}]",2025-03-04T15:48:13.592258
Change the type of the model at ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi to a SimpleRDBMS configuration,single_tool,3,1.0,1,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T15:48:17.928592
Update the ./atl_zoo/KM32EMF/Sample-KM3.xmi with a new EMF structure,single_tool,3,1.0,1,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]",[],2025-03-04T15:48:21.189022
Turn the metamodel at ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi into an DSL representation,single_tool,3,1.0,1,1,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T15:48:25.312400
Create a transformation from ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi to a XML format,single_tool,3,1.0,1,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]",[],2025-03-04T15:48:29.396210
Convert the given metamodel at ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi to an XML model,single_tool,3,1.0,1,1,apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T15:48:34.128972
Transform the model at ./atl_zoo/Ant2Maven/example/build1.xmi into a Ant model,single_tool,3,0.0,1,0,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi),[],"[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}]",2025-03-04T15:48:40.003873
Update the model from ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi with a new structure in SimpleRDBMS format,single_tool,3,1.0,1,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T15:48:43.062139
Change the model type of ./atl_zoo/KM32EMF/Sample-KM3.xmi to be EMF,single_tool,3,1.0,1,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | list_transformation_KM32EMF_tool({}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]",[],2025-03-04T15:48:47.584468
"Alter the architecture of the model located at ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi, rendering it as DSL",single_tool,3,1.0,1,1,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T15:48:52.790183
Modify the metamodel associated with ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi to produce an output of XML,single_tool,3,1.0,1,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]",[],2025-03-04T15:48:58.809771
Modify the structure of the model at ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi and give it a new name in XML format,single_tool,3,1.0,1,1,apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T15:49:05.277939
"Change the content of the model situated at ./atl_zoo/Ant2Maven/example/build1.xmi into a new form, represented as Ant",single_tool,3,0.0,1,0,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi),[],"[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}]",2025-03-04T15:49:10.148687
Update the data contained within the metamodel located at ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi with an output in SimpleRDBMS,single_tool,3,1.0,1,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T15:49:15.112558
Update the configuration of the metamodel associated with ./atl_zoo/KM32EMF/Sample-KM3.xmi to be equal to EMF,single_tool,3,1.0,1,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]",[],2025-03-04T15:49:20.271577
Convert the structure of the model at ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi into a format corresponding to DSL,single_tool,3,1.0,1,1,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T15:49:25.661763
Change the properties of the model situated at ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi and define them as XML,single_tool,3,1.0,1,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]",[],2025-03-04T15:49:32.527652
"Modify the components of the model located at ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi, transforming it into XML",single_tool,3,1.0,1,1,apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T15:49:39.447334
Update the model metatype from ./atl_zoo/Ant2Maven/example/build1.xmi with a new structure in Ant format,single_tool,3,0.0,1,0,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi),[],"[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}]",2025-03-04T15:49:43.205088
Rearrange the content of the model at ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi to be in compliance with SimpleRDBMS,single_tool,3,1.0,1,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T15:49:48.777381
Change the data stored within the metamodel associated with ./atl_zoo/KM32EMF/Sample-KM3.xmi and render it as EMF,single_tool,3,1.0,1,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | list_transformation_KM32EMF_tool({}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]",[],2025-03-04T15:49:54.138080
Update the dependencies of the model situated at ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi and give them a new value in DSL format,single_tool,3,1.0,1,1,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32DSL_tool({}),KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T15:50:00.152344
"Transform the content of the metamodel located at ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi into a new structure, represented by XML",single_tool,3,1.0,1,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]",[],2025-03-04T15:50:06.272027
Change the representation of the model at ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi to be XML,single_tool,3,1.0,1,1,apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T15:50:12.048342
Update the layout of the model situated at ./atl_zoo/Ant2Maven/example/build1.xmi and give it a new appearance in Ant format,single_tool,3,1.0,1,1,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi),"[{'tool_name': 'apply_XML2Ant_transformation_tool', 'arguments': {'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}}]",[],2025-03-04T15:50:17.067851
Modify the parameters of the metamodel associated with ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi to produce an output of SimpleRDBMS,single_tool,3,1.0,1,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T15:50:22.691382
Transform the structure of the model located at ./atl_zoo/KM32EMF/Sample-KM3.xmi into a format corresponding to EMF,single_tool,3,1.0,1,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]",[],2025-03-04T15:50:28.615417
Change the semantics of the model situated at ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi and define them as DSL,single_tool,3,1.0,1,1,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32DSL_tool({}),KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T15:50:37.026617
Update the model metatype from ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi with a new appearance in XML,single_tool,3,1.0,1,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]",[],2025-03-04T15:50:40.809925
Transform the ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi into a XML model,single_tool,3,1.0,1,1,apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T15:50:45.528765
Change the model located at ./atl_zoo/Ant2Maven/example/build1.xmi to the Ant structure,single_tool,3,0.0,1,0,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi),[],"[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}]",2025-03-04T15:50:51.712058
Convert the metamodel at ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi to the SimpleRDBMS format,single_tool,3,1.0,1,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T15:50:57.261333
Map the ./atl_zoo/KM32EMF/Sample-KM3.xmi to the EMF transformation,single_tool,3,1.0,1,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]",[],2025-03-04T15:51:02.704504
Modify the given ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi to conform to the DSL model,single_tool,3,1.0,1,1,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}) | list_transformation_KM32DSL_tool({}),KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T15:51:10.572024
Change the type of the model at ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi to a XML configuration,single_tool,3,0.0,1,0,apply_XML2Ant_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}) | apply_XML2PNML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi),[],"[{'api_name': 'PNML2XML.apply_tool', 'arguments': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}]",2025-03-04T15:51:20.480690
Update the ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi with a new XML structure,single_tool,3,1.0,1,1,apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T15:51:24.379031
Turn the metamodel at ./atl_zoo/Ant2Maven/example/build1.xmi into an Ant representation,single_tool,3,0.0,1,0,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi),[],"[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}]",2025-03-04T15:51:29.922376
Create a transformation from ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi to a SimpleRDBMS format,single_tool,3,1.0,1,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}) | apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T15:51:36.003670
Convert the given metamodel at ./atl_zoo/KM32EMF/Sample-KM3.xmi to an EMF model,single_tool,3,1.0,1,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]",[],2025-03-04T15:51:41.720593
Transform the model at ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi into a DSL model,single_tool,3,1.0,1,1,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T15:51:47.805754
Update the model from ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi with a new structure in XML format,single_tool,3,1.0,1,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]",[],2025-03-04T15:51:53.306534
Change the model type of ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi to be XML,single_tool,3,1.0,1,1,apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}) | apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T15:52:01.298688
"Alter the architecture of the model located at ./atl_zoo/Ant2Maven/example/build1.xmi, rendering it as Ant",single_tool,3,0.0,1,0,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi),[],"[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}]",2025-03-04T15:52:06.237602
Modify the metamodel associated with ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi to produce an output of SimpleRDBMS,single_tool,3,1.0,1,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T15:52:10.373606
Modify the structure of the model at ./atl_zoo/KM32EMF/Sample-KM3.xmi and give it a new name in EMF format,single_tool,3,1.0,1,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | list_transformation_KM32EMF_tool({}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]",[],2025-03-04T15:52:14.264105
"Change the content of the model situated at ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi into a new form, represented as DSL",single_tool,3,1.0,1,1,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T15:52:18.293920
Update the data contained within the metamodel located at ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi with an output in XML,single_tool,3,1.0,1,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]",[],2025-03-04T15:52:23.403347
Update the configuration of the metamodel associated with ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi to be equal to XML,single_tool,3,1.0,1,1,apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T15:52:28.622888
Convert the structure of the model at ./atl_zoo/Ant2Maven/example/build1.xmi into a format corresponding to Ant,single_tool,3,0.0,1,0,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi),[],"[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}]",2025-03-04T15:52:35.821161
Change the properties of the model situated at ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi and define them as SimpleRDBMS,single_tool,3,1.0,1,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T15:52:41.727472
"Modify the components of the model located at ./atl_zoo/KM32EMF/Sample-KM3.xmi, transforming it into EMF",single_tool,3,1.0,1,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]",[],2025-03-04T15:52:49.896565
Update the model metatype from ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi with a new structure in DSL format,single_tool,3,1.0,1,1,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T15:52:55.835679
Rearrange the content of the model at ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi to be in compliance with XML,single_tool,3,1.0,1,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]",[],2025-03-04T15:53:00.280684
Change the data stored within the metamodel associated with ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi and render it as XML,single_tool,3,1.0,1,1,apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T15:53:06.852133
Update the dependencies of the model situated at ./atl_zoo/Ant2Maven/example/build1.xmi and give them a new value in Ant format,single_tool,3,0.0,1,0,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi),[],"[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}]",2025-03-04T15:53:12.052831
"Transform the content of the metamodel located at ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi into a new structure, represented by SimpleRDBMS",single_tool,3,1.0,1,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T15:53:16.449747
Change the representation of the model at ./atl_zoo/KM32EMF/Sample-KM3.xmi to be EMF,single_tool,3,1.0,1,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]",[],2025-03-04T15:53:22.502770
Update the layout of the model situated at ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi and give it a new appearance in DSL format,single_tool,3,1.0,1,1,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T15:53:28.239207
Modify the parameters of the metamodel associated with ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi to produce an output of XML,single_tool,3,1.0,1,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]",[],2025-03-04T15:53:33.104694
Transform the structure of the model located at ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi into a format corresponding to XML,single_tool,3,1.0,1,1,apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T15:53:39.492351
Change the semantics of the model situated at ./atl_zoo/Ant2Maven/example/build1.xmi and define them as Ant,single_tool,3,0.0,1,0,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi),[],"[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}]",2025-03-04T15:53:48.068623
Update the model metatype from ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi with a new appearance in SimpleRDBMS,single_tool,3,1.0,1,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T15:53:51.821167
Transform the ./atl_zoo/KM32EMF/Sample-KM3.xmi into a EMF model,single_tool,3,1.0,1,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]",[],2025-03-04T15:53:59.124929
Change the model located at ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi to the DSL structure,single_tool,3,1.0,1,1,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T15:54:04.629461
Convert the metamodel at ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi to the XML format,single_tool,3,1.0,1,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]",[],2025-03-04T15:54:09.196543
Map the ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi to the XML transformation,single_tool,3,1.0,1,1,apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T15:54:13.410008
Modify the given ./atl_zoo/Ant2Maven/example/build1.xmi to conform to the Ant model,single_tool,3,0.0,1,0,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}) | apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi),[],"[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}]",2025-03-04T15:54:20.277437
Change the type of the model at ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi to a SimpleRDBMS configuration,single_tool,3,1.0,1,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T15:54:23.925133
Update the ./atl_zoo/KM32EMF/Sample-KM3.xmi with a new EMF structure,single_tool,3,1.0,1,1,apply_KM32EMF_transformation_tool({'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}) | list_transformation_KM32EMF_tool({}),KM32EMF.apply_tool(./atl_zoo/KM32EMF/Sample-KM3.xmi),"[{'tool_name': 'apply_KM32EMF_transformation_tool', 'arguments': {'input_str': './atl_zoo/KM32EMF/Sample-KM3.xmi'}}]",[],2025-03-04T15:54:29.721808
Turn the metamodel at ./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi into an DSL representation,single_tool,3,1.0,1,1,apply_KM32DSL_transformation_tool({'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}),KM32DSL.apply_tool(./atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi),"[{'tool_name': 'apply_KM32DSL_transformation_tool', 'arguments': {'input_str': './atl_zoo/DSLBridge/MetamodelBridge/Models/SimpleExample/DSL2EMF/SimpleExampleMM-KM3.xmi'}}]",[],2025-03-04T15:54:35.122668
Create a transformation from ./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi to a XML format,single_tool,3,1.0,1,1,apply_PNML2XML_transformation_tool({'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}),PNML2XML.apply_tool(./atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi),"[{'tool_name': 'apply_PNML2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/Grafcet2PetriNet/Models/XML2PNML_example.xmi'}}]",[],2025-03-04T15:54:40.299930
Convert the given metamodel at ./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi to an XML model,single_tool,3,1.0,1,1,apply_Mantis2XML_transformation_tool({'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}),Mantis2XML.apply_tool(./atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi),"[{'tool_name': 'apply_Mantis2XML_transformation_tool', 'arguments': {'input_str': './atl_zoo/SoftwareQualityControl2MantisBTFile/modelsExamples/MantisExample.xmi'}}]",[],2025-03-04T15:54:44.813627
Transform the model at ./atl_zoo/Ant2Maven/example/build1.xmi into a Ant model,single_tool,3,0.0,1,0,apply_Ant2Maven_transformation_tool({'input_str': './atl_zoo/Ant2Maven/example/build1.xmi'}),XML2Ant.apply_tool(./atl_zoo/Ant2Maven/example/build1.xmi),[],"[{'api_name': 'XML2Ant.apply_tool', 'arguments': './atl_zoo/Ant2Maven/example/build1.xmi'}]",2025-03-04T15:54:50.158488
Update the model from ./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi with a new structure in SimpleRDBMS format,single_tool,3,1.0,1,1,apply_SimpleClass2SimpleRDBMS_transformation_tool({'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}),SimpleClass2SimpleRDBMS.apply_tool(./atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi),"[{'tool_name': 'apply_SimpleClass2SimpleRDBMS_transformation_tool', 'arguments': {'input_str': './atl_zoo/SimpleClass2SimpleRDBMS/Sample-SimpleClass.xmi'}}]",[],2025-03-04T15:54:52.866069
